<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="how_member_discovery_works">
	<title>How Member Discovery Works</title>
	<shortdesc id="shortdesc_E0026C0B35A944E8A3CA496D913C3346"><keyword keyref="product_name_long"/>
		provides various options for member discovery within a distributed system and between
		clients and servers. </shortdesc>
	<conbody>
		<ul id="ul_E9CC90090740419FA0AD75E12B639359">
			<li id="li_ECDCEA9111044C8AB2951459439EEA2D">
				<xref
					href="how_member_discovery_works.xml#how_member_discovery_works/section_F2B8EBF2909440BD90B4CDEE0CAA0C2A"
					type="section" format="dita" scope="local"/>
			</li>
			<li id="li_EB47E6686FD64D1AAD4EB6C00FD3675E">
				<xref
					href="how_member_discovery_works.xml#how_member_discovery_works/section_E26DFAFE9E994C0C9A489E325E345816"
					type="section" format="dita" scope="local"/>
			</li>
			<li id="li_D50DB602E0AA4ED28CBD9FC2B08E9E6D">
				<xref
					href="how_member_discovery_works.xml#how_member_discovery_works/section_37DE53BDCDB541618C6DF4E47A1F2B73"
					type="section" format="dita" scope="local"/>
			</li>
		</ul>
		<section id="section_F2B8EBF2909440BD90B4CDEE0CAA0C2A">
			<title>Peer Member Discovery</title>
			<p>Peer member discovery is what defines a distributed system. All applications and
				cache servers that use the same settings for peer discovery are members of the same
				distributed system. Each system member has a unique identity and knows the
				identities of the other members. A member can belong to only one distributed system
				at a time. Once they have found each other, members communicate directly,
				independent of the discovery mechanism. In peer discovery, <keyword
					keyref="product_name"/> uses a membership coordinator to manage member joins and
				departures. </p>
			<p>Members discover each other using one or more locators. A locator provides both
				discovery and load balancing services.  Peer locators manage a dynamic list of
				distributed system members. New members connect to one of the locators to retrieve
				the member list, which it uses to join the system. </p>
			<p>
				<image placement="break" href="../../images_svg/locator_discovery.svg"
					id="image_dm3_y3x_15"/>
			</p>
				<note>
					<p>Multiple locators ensure the most stable start up and availability for your distributed
					system.
					</p>
				</note>
		</section>
		<section id="section_E26DFAFE9E994C0C9A489E325E345816">
			<title>Standalone Member</title>
			<p>The standalone member has no peers, does no peer discovery, and so does not use locators. It
				creates a distributed system connection only to access the <keyword
					keyref="product_name"/> caching features. Running standalone has a faster
				startup and is appropriate for any member that is isolated from other applications.
				The primary use case is for client applications. Standalone members can be accessed
				and monitored if you enable the member to become a JMX Manager. </p>
		</section>
		<section id="section_37DE53BDCDB541618C6DF4E47A1F2B73">
			<title>Client Discovery of Servers</title>
			<p>Locators provide clients with dynamic server discovery and server load balancing.
				Clients are configured with locator information for the server system, and turn to
				the locators for directions to the servers to use. The servers can come and go and
				their capacity to service new client connections can vary. The locators continuously
				monitor server availability and server load information, providing clients with
				connection information for the server with the least load at any time. </p>
			<note>
				<p>For performance and cache coherency, clients must run as standalone members or in
				different distributed systems than their servers. 
				</p>
			</note>
			<p>You do not need to run any special processes to use locators for server discovery.
				The locators that provide peer discovery in the server system also provide server
				discovery for clients to the server system. This is the standard configuration. </p>
			<p>
				<image placement="break" id="image_ED0D22E30A274675ADF0815D102A7D5B"
					href="../../images_svg/cs_locator_discovery.svg"/>
			</p>
		</section>
		<section id="section_1CB9D1439346415FB630E9DCD373CAC9">
			<title>Multi-site Discovery</title>
			<p>In a multi-site (WAN) configuration, a <keyword keyref="product_name"/> cluster uses
				locators to discover remote <keyword keyref="product_name"/> clusters as well as to
				discover local <keyword keyref="product_name"/> members. Each locator in a WAN
				configuration uniquely identifies the local cluster to which it belongs, and it can
				also identify locators in remote <keyword keyref="product_name"/> clusters to which
				it will connect for WAN distribution. </p>
			<p>When a locator starts up, it contacts each remote locator to exchange information
				about the available locators and gateway receiver configurations in the remote
				cluster. In addition to sharing information about its own cluster, a locator shares
				information that it has obtained from all other connected clusters. Each time a new
				locator starts up or an existing locator shuts down, the changed information is
				broadcast to other connected <keyword keyref="product_name"/> clusters across the
				WAN. </p>
			<p>See <xref scope="local"
					href="multisite_overview.xml#topic_1742957C8D4B4F7590847EB8DB6CD4F7"
					type="topic" format="dita"/> for more information. </p>
		</section>
	</conbody>
</concept>
