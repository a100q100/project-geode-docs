<?xml version="1.0"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic
	id="topic_95810FD5B6DD493CAE4FAAB82E7F3670">
	<title>Interoperability of C++ Types When Using PDX Serialization</title>
	<shortdesc>This topic table lists the mapping between C++ types and other language types when
		using PDX serialization. </shortdesc>
	<body>
		<p>In addition, the table lists which PdxReader and PdxWriter C++ APIs to use when
			serializing and deserializing the types. </p>
		<table
			id="table_B8396E2CC4174A3A9895A3ACF67023DB">
			<tgroup
				cols="4">
				<colspec
					colnum="1"
					colname="col1"
					colwidth="1.45*"/>
				<colspec
					colnum="2"
					colname="col2"
					colwidth="1.18*"/>
				<colspec
					colnum="3"
					colname="col3"
					colwidth="1.00*"/>
				<colspec
					colnum="4"
					colname="col4"
					colwidth="1.22*"/>
				<thead>
					<row>
						<entry
							colname="col1">C++ Type </entry>
						<entry
							colname="col2">.NET Type </entry>
						<entry
							colname="col3">Java Type </entry>
						<entry
							colname="col4">PdxReader/PdxWriter API </entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry
							colname="col1">CacheableHashTable </entry>
						<entry
							colname="col2">System::Collections::Hashtable </entry>
						<entry
							colname="col3">java.util.Hashtable </entry>
						<entry
							colname="col4">readObject/writeObject </entry>
					</row>
					<row>
						<entry
							colname="col1">CacheableHashMap </entry>
						<entry
							colname="col2">System::Collections ::Generic::IDictionary&lt;Object,
							Object&gt; </entry>
						<entry
							colname="col3">java.util.HashMap </entry>
						<entry
							colname="col4">readObject/writeObject </entry>
					</row>
					<row>
						<entry
							colname="col1">CacheableVector </entry>
						<entry
							colname="col2">System::Collections::ArrayList </entry>
						<entry
							colname="col3">java.util.Vector </entry>
						<entry
							colname="col4">readObject/writeObject </entry>
					</row>
					<row>
						<entry
							colname="col1">CacheableArrayList </entry>
						<entry
							colname="col2">System::Collections::Â Generic::IList&lt;Object&gt; </entry>
						<entry
							colname="col3">java.util.ArrayList </entry>
						<entry
							colname="col4">readObject/writeObject </entry>
					</row>
					<row>
						<entry
							colname="col1">bool </entry>
						<entry
							colname="col2">bool </entry>
						<entry
							colname="col3">boolean </entry>
						<entry
							colname="col4">readBoolean/writeBoolean </entry>
					</row>
					<row>
						<entry
							colname="col1">int8_t </entry>
						<entry
							colname="col2">sbyte </entry>
						<entry
							colname="col3">Byte </entry>
						<entry
							colname="col4">readByte/writeByte </entry>
					</row>
					<row>
						<entry
							colname="col1"> wchar_t/char<sup>1</sup>
						</entry>
						<entry
							colname="col2">Char </entry>
						<entry
							colname="col3">Char </entry>
						<entry
							colname="col4">readChar/writeChar </entry>
					</row>
					<row>
						<entry
							colname="col1">wchar_t*/char*<sup>1</sup>
						</entry>
						<entry
							colname="col2">string </entry>
						<entry
							colname="col3">string </entry>
						<entry
							colname="col4">readString/writeString </entry>
					</row>
					<row>
						<entry
							colname="col1">double </entry>
						<entry
							colname="col2">Double </entry>
						<entry
							colname="col3">double </entry>
						<entry
							colname="col4">readDouble/writeDouble </entry>
					</row>
					<row>
						<entry
							colname="col1">float </entry>
						<entry
							colname="col2">float </entry>
						<entry
							colname="col3">float </entry>
						<entry
							colname="col4">readFloat/writeFloat </entry>
					</row>
					<row>
						<entry
							colname="col1">int16_t </entry>
						<entry
							colname="col2">short </entry>
						<entry
							colname="col3">short </entry>
						<entry
							colname="col4">readShort/writeShort </entry>
					</row>
					<row>
						<entry
							colname="col1">int32_t </entry>
						<entry
							colname="col2">Int32/int </entry>
						<entry
							colname="col3">int </entry>
						<entry
							colname="col4">readInt/writeInt </entry>
					</row>
					<row>
						<entry
							colname="col1">int64_t </entry>
						<entry
							colname="col2">Int64/long </entry>
						<entry
							colname="col3">long </entry>
						<entry
							colname="col4">readLong/writeLong </entry>
					</row>
					<row>
						<entry
							colname="col1">int8_t* </entry>
						<entry
							colname="col2">System.Byte[](System.SByte[]??) </entry>
						<entry
							colname="col3">Byte[]<sup>2</sup>
						</entry>
						<entry
							colname="col4">readByteArray/writeByteArray </entry>
					</row>
					<row>
						<entry
							colname="col1">double* </entry>
						<entry
							colname="col2">System.Double[] </entry>
						<entry
							colname="col3">Double[] </entry>
						<entry
							colname="col4">readDoubleArray/writeDoubleArray </entry>
					</row>
					<row>
						<entry
							colname="col1">float* </entry>
						<entry
							colname="col2">System.float[] </entry>
						<entry
							colname="col3">Float[] </entry>
						<entry
							colname="col4">readFloatArray/writeFloatArray </entry>
					</row>
					<row>
						<entry
							colname="col1">CacheableHashSet </entry>
						<entry
							colname="col2">CacheableHashSet </entry>
						<entry
							colname="col3">java.util.HashSet </entry>
						<entry
							colname="col4">readObject/writeObject </entry>
					</row>
					<row>
						<entry
							colname="col1">CacheableLinkedHashSet </entry>
						<entry
							colname="col2">CacheableLinkedHashSet </entry>
						<entry
							colname="col3">java.util.LinkedHashSet </entry>
						<entry
							colname="col4">readObject/writeObject </entry>
					</row>
					<row>
						<entry
							colname="col1">int16_t* </entry>
						<entry
							colname="col2">System.Int16[] </entry>
						<entry
							colname="col3">Short[] </entry>
						<entry
							colname="col4">readShortArray/writeShortArray </entry>
					</row>
					<row>
						<entry
							colname="col1">int32_t* </entry>
						<entry
							colname="col2">System.Int32[] </entry>
						<entry
							colname="col3">Int[] </entry>
						<entry
							colname="col4">readIntArray/writeIntArray </entry>
					</row>
					<row>
						<entry
							colname="col1">int64_t* </entry>
						<entry
							colname="col2">System.Int64[] </entry>
						<entry
							colname="col3">Long[] </entry>
						<entry
							colname="col4">readLongArray/writeLongArray </entry>
					</row>
					<row>
						<entry
							colname="col1">bool* </entry>
						<entry
							colname="col2">System.Boolean[] </entry>
						<entry
							colname="col3">Boolean[] </entry>
						<entry
							colname="col4">readBooleanArray/writeBooleanArray </entry>
					</row>
					<row>
						<entry
							colname="col1">wchar_t*/char*<sup>1</sup>
						</entry>
						<entry
							colname="col2">System.Char[] </entry>
						<entry
							colname="col3">char[] </entry>
						<entry
							colname="col4">readCharArray/writeCharArray </entry>
					</row>
					<row>
						<entry
							colname="col1">enum<sup>3</sup>
						</entry>
						<entry
							colname="col2">enum </entry>
						<entry
							colname="col3">Enum </entry>
						<entry
							colname="col4">readObject/writeObject </entry>
					</row>
					<row>
						<entry
							colname="col1">int8_t** </entry>
						<entry
							colname="col2">byte[][]/Sbyte[][] </entry>
						<entry
							colname="col3">Byte[][] </entry>
						<entry
							colname="col4">readArrayOfByteArrays/writeArrayOfByteArrays </entry>
					</row>
					<row>
						<entry
							colname="col1">wchar_t**/char**<sup>1</sup>
						</entry>
						<entry
							colname="col2">System.String[] </entry>
						<entry
							colname="col3">String[] </entry>
						<entry
							colname="col4">readStringArray/writeStringArray </entry>
					</row>
					<row>
						<entry
							colname="col1">CacheableDate </entry>
						<entry
							colname="col2">System.DateTime<sup>4</sup>
						</entry>
						<entry
							colname="col3">Java.util.date </entry>
						<entry
							colname="col4">readDate/writeDate </entry>
					</row>
					<row>
						<entry
							colname="col1">CacheableObjectArray </entry>
						<entry
							colname="col2">object[]/System.Object[] </entry>
						<entry
							colname="col3">Object[] </entry>
						<entry
							colname="col4">readObjectArray/writeObjectArray </entry>
					</row>
					<row>
						<entry
							colname="col1">Cacheable/Serializable </entry>
						<entry
							colname="col2">object/System.Object </entry>
						<entry
							colname="col3">Object </entry>
						<entry
							colname="col4">readObject/writeObject </entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<p><sup>1</sup>C++ allows unicode and non-unicode characters, so C++ PDX will support both
			wchar_t/char and wchar_t*/char*. </p>
		<p><sup>2</sup> Using Pdx we use sByte only as java byte is signed. But for DataSerializable
			we have kept Byte[] array only as this is use as data container. </p>
		<p><sup>3</sup>C++ allows explicit setting of ordinal number, but it is up to the user to
			map java enumName with that of C++ enumName. See <xref
				href="using_enum_type_with_pdx.xml#concept_F38FDBC327204B4EB1E0BC74B4C95409"
				type="concept"
				format="dita"
				scope="local"><?xm-replace_text Using C++ Enum Type with PDX Serialization?></xref>. </p>
		<p>
			<sup>4</sup>Now we put UTC time from .NET . </p>
	</body>
</topic>
