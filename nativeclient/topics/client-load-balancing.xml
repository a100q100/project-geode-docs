<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
"concept.dtd">
<concept id="client-load-balancing">
  <title>How Client Load Balancing Works</title>

  <conbody>
    <p>The client is configured with a list of server locators and consults a
    server locator to request a connection to a server in the distributed
    system.</p>

    <p>Clients contain connection pools. Each region is associated with a
    connection pool using a region attribute and operations on the region use
    connections from the respective pools. The server connectivity options are
    specified in the connection pool configuration. Each pool has a minimum
    and maximum number of connections.</p>

    <p>Each cache operation that requires server connectivity obtains a
    connection from the pool for the server group that the operation affects,
    performs the operation using the connection, and returns the connection to
    the pool. If the pool size is less than the maximum number of connections
    and all connections are in use, the connection pool creates a new
    connection and returns it. If the pool is at the maximum number of
    connections, that thread blocks until a connection becomes available or a
    <codeph>free-connection-timeout</codeph> occurs. If a
    <codeph>free-connection-timeout</codeph> occurs, an
    <codeph>AllConnectionsInUse</codeph> exception is thrown.</p>

    <p>The connection pool has a configurable time-out period that is used to
    expire idle connections. The idle connections are expired until the pool
    has the minimum number of connections. A monitoring thread expires idle
    connections, adds sufficient connections to bring up the count to minimum,
    closes connections whose lifetime has been exceeded. See <codeph><xref
    href="???">load-conditioning-interval</xref></codeph> and <codeph><xref
    href="???">idle-timeout</xref></codeph>. A separate thread (ping) tests
    each connected endpoint for its status and if the endpoint is not
    reachable, the thread closes all connections that have been made to the
    endpoint. See <codeph><xref href="???">ping-interval</xref></codeph>.</p>

    <fig>
      <title>Logical Architecture of Client/Server Connections</title>

      <image href="../common/images/client-server-arch.gif"/>

      <p>When a connection receives an exception, the operation is failed over
      to another connection from the pool. The failover mechanism obtains the
      endpoint to failover to from the locator or from the specified endpoint
      list in the pool.</p>
    </fig>
  </conbody>
</concept>
