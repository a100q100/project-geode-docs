<?xml version="1.0"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<!-- Created with XMetaL (http://www.xmetal.com) -->
<concept id="concept_3A9AC62F96FA44DBBB5CCBFD3EA19B56"> 
  <title>Disconnecting From the Server</title> 
  <shortdesc>When a durable client closes its cache and disconnects, it tells
	 the servers whether to maintain its queues. For this purpose, use the version
	 of 
	 <codeph>Cache::close</codeph> with the boolean 
	 <codeph>keepalive</codeph> parameter set, as shown in the following
	 example. If the setting is true, the servers keep the durable clientâ€™s queues
	 and durable subscriptions alive for the timeout period. In addition to
	 in-memory queue retention, the servers can evict the most recent durable client
	 queue updates to disk to reduce memory consumption. 
  </shortdesc> 
  <conbody>
	 <p>
	 </p>
	 <p>Only the resources and data related to the session are removed, such as
		port numbers and non-durable subscriptions. If the setting is false, the
		servers do the same cleanup that they would do for a nondurable client.
	 </p>
	 <example id="example_328A1DD2A1434F6B94F8D47874C4510A">
		<title>Durable Client Disconnect With Queues Maintained</title>
		<codeblock>// Close the Cache and disconnect with keepalive=true.
// Server will queue events for durable registrations and CQs
// When the client reconnects (within a timeout period) and sends
// "readyForEvents()", the server will deliver all stored events
cachePtr-&gt;close(true);</codeblock>
	 </example>
  </conbody> 
</concept>
