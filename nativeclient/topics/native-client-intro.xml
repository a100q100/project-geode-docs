<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="introducing-gemfire-native-client"> 
  <title id="title_AA2564AA25CE4084870A0A01F921D428">Getting Started with the
	 GemFire Native Client</title> 
  <conbody id="conbody_11D7A24F25CB482092E477D51D55C8FB"> 
	 <p id="p_4A91126FAF154FD29836B0EE3314C60E">The 
		<tm tmtype="reg">VMware</tm> 
		<tm tmtype="tm">vFabric</tm> 
		<tm tmtype="reg">GemFire</tm> native client provides access for C++ and 
		<tm tmtype="reg">Microsoft</tm> 
		<tm tmtype="tm">.NET</tm> clients to the vFabric GemFire distributed
		system. The native client is written entirely in C++, so its initialization
		process does not involve the creation of a Java virtual machine. The .NET
		native client provides native operations for the .NET Framework application
		developer who writes in .NET languages and needs to access the GemFire cache
		server.
	 </p> 
	 <p id="p_069EBEFDBE6C473E93BF31F4C8333516">vFabric GemFire native clients
		in C++, Java, and .NET languages communicate only with the cache server and do
		not communicate with each other. The native clients interface with the server
		at the sockets level and implement the same wire protocol to the server. These
		capabilities produce extremely high performance and system scalability.
	 </p> 
	 <p id="p_A8D46E04B6B94E6EAF54677522FDC5D5">C++ and .NET native clients
		provide access to the full region API, including support for application
		plug-ins, managed connectivity, highly available data, and reliable failover to
		a specified server list. All of this is transparent to the end user.
	 </p> 
	 <p id="p_D471203FA236406B8F0BEFCA987E255A">The native client delivers the
		full set of capabilities supplied by Java clients communicating with the
		GemFire cache server. You can configure GemFire native clients to cache data
		locally, or they can act in a cacheless mode where they retrieve data from a
		cache server and directly pass it to other system members without incurring the
		caching overhead. They can be configured as read only caches, or be configured
		to receive notifications from the server whenever a key of interest to the
		client changes on the server.
	 </p> 
	 <p id="p_0D83389171834E7EADDA2635FDE3CF89">This is a conceptual overview of
		how .NET and C++ applications access the cache server.
	 </p> 
	 <fig id="fig_C19B4B30942D4F1BA59DBDCC6146241A"> 
		<title id="title_D59C6D0A440E40188DC8E0B7C226983A">vFabric GemFire Native
		  Client Overview</title> 
		<image href="../common/images/native-client-overview.gif"
		 id="image_A0805B5079C64B0E8F2E9DA2A8A5A7A6" placement="break"> 
		  <alt>vFabric GemFire Native Client Overview
		  </alt> 
		</image> 
	 </fig> 
  </conbody>
</concept>
