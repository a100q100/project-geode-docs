<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept
	id="create-access-cache">
	<title>Creating and Accessing a Cache</title>
	<shortdesc> When you create a native client cache, you are creating a native
		client cache instance. You must provide some basic configuration
		information such as a connection name and cache initialization
		parameters for the native client's cache instance. </shortdesc>
	<conbody>
		<p>When you create a cache, you provide the following input: </p>
			<ul
				id="ul_3AE8DA2861DC49CCABE76DE7C56E8675">
				<li
					id="li_26DA7390B41E4D99B5C8A404D8F5D81D"><b>Connection
						name</b>. Used in logging to identify both the
					distributed system connection and the cache instance. If you
					do not specify a connection name, a unique (but
					non-descriptive) default name is assigned. </li>
				<li id="li_4D5D86F7148E4530AE304DBEFF1D2278"><b><codeph>cache.xml</codeph> to initialize the
					cache (if the initialization is not done programmatically)</b>. To modify the
				cache structure,  edit <codeph>cache.xml</codeph> in your preferred text editor. No
				changes to the application code are required. If you do not specify a cache
				initialization file, you need to initialize the cache programmatically. </li>
			</ul>
		<p>The <codeph>cache.xml</codeph> file contains XML declarations for cache,
			region, and region entry configuration.  </p>
		<p>This XML declares server connection pools and regions:</p>
			<codeblock>
&lt;cache&gt;
  &lt;region name="clientRegion1" refid="PROXY"&gt;
    &lt;region-attributes pool-name="serverPool1"/&gt;
  &lt;/region&gt;
  &lt;region name="clientRegion2" refid="PROXY"&gt;
    &lt;region-attributes pool-name="serverPool2"/&gt;
  &lt;/region&gt;
  &lt;region name="localRegion3" refid="LOCAL"/&gt;
  &lt;pool name="serverPool1"&gt;
    &lt;locator host="host1" port="40404"/&gt;
  &lt;/pool&gt;
  &lt;pool name="serverPool2"&gt;
    &lt;locator host="host2" port="40404"/&gt;
  &lt;/pool&gt;
&lt;/cache&gt;
	</codeblock>
		<p>When you use the regions, the client regions connect to the servers
			through the pools named in their configurations. </p>
		<p>This file can have any name, but is generally referred to as
				<codeph>cache.xml</codeph> . </p>
		<p>For a list of the parameters in the <codeph>cache.xml</codeph> file,
			including the DTD, see <xref
				scope="local"
				href="../cache-init-file/chapter-overview.xml#chapter-overview"
				type="concept"
				format="dita">Cache Initialization File</xref>. </p>
		<p>To create your cache, call the <codeph>CacheFactory create</codeph>
			function. </p>
		<p>The <codeph>cache</codeph> object it returns gives access to the
			native client caching API. For example:</p>
			<codeblock>
CacheFactoryPtr cacheFactory = CacheFactory::createCacheFactory();
CachePtr cachePtr = cacheFactory-&gt;create();
	</codeblock>
		<note>For more information on how to create a cache, see <xref
				href="../cpp-caching-api/cpp-caching-api.xml#concept_CEC658A999414AC3A494578C214BF64E"
				type="concept" format="dita" scope="local"
				><?xm-replace_text vFabric GemFire Native Client C++ API?></xref> or <xref
				href="../dotnet-caching-api/dotnet-caching-api.xml#concept_FC6776DCE6ED48B887A6137761104AA4"
				type="concept" format="dita" scope="local"
				><?xm-replace_text vFabric GemFire Native Client C# .NET API?></xref>.</note>
	</conbody>
</concept>
