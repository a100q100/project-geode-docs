<?xml version="1.0"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept
	id="concept_6456354A9AD945C780A5AA864B41B564">
	<title>Configuring Durable Interest in Keys</title>
	<shortdesc>When a durable client disconnects, its servers keep queuing messages for selected
		keys. The client indicates which keys by registering durable interest for those keys. </shortdesc>
	<conbody>
		<p>This fine-grained control handles the constraints of queue size and memory by saving only
			the critical messages. </p>
		<p> You still register interest for other keys, but not durable interest. When the client is
			connected to its servers, it receives messages for those non-durable keys. When the
			client is disconnected, its non-durable interest registrations are deleted but messages
			that are already in the queue remain there. </p>
		<p> For durable clients, all interest registration is done immediately after the regions are
			created. This is required whether interest registration is durable or not durable. An
			extra <codeph>registerInterest</codeph> parameter specified for durable clients
			indicates whether the registration is durable (true) or not (false). </p>
		<example
			id="example_9EBB7E96E12D4DB0B0B16B050E310B55">
			<title> API Client Durable Interest List Registration (C++)</title>
			<p> The following programmatic example registers durable interest in Key-1. The interest
				registration happens immediately after region creation and before anything else.</p>
				<codeblock>// Durable client interest registration can be
// durable (true) or nondurable(default).
VectorOfCacheableKey keys;
keys.push_back( CacheableString::create("Key-1") );
regionPtr-&gt;registerKeys(keys,true);</codeblock>
		</example>
		<section
			id="section_3DE5872B0888410EB42D52CFB28C79E5">
			<p>You use the typical methods for interest registration and configure notification by
				subscription on the server as usual. For details, see <xref
					href="../client-cache/registering-interest-for-entries.xml#registering-interest-for-entries"
					type="concept"
					format="dita"
					scope="local">Registering Interest for Entries</xref>. </p>
			<note>
				<p>Changing interest registration after the durable client connects the first time
				can cause data inconsistency and is not recommended.
				</p>
			</note>
			<p> At restart, if the client doesn't register durable interest for exactly the same
				keys as before then the entries in the interest list are not copied from the server
				during the registration. Instead, the client cache starts out empty and entries are
				added during updates. If no updates come in for an entry, it never shows up in the
				client cache. </p>
		</section>
	</conbody>
</concept>
