<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept
	id="security">
	<title
		id="title_9717E51087B346988389138843E158C4">SELECT Statement Query Results</title>
	<shortdesc>The result of a <codeph>SELECT</codeph> statement is a collection that implements the
			<codeph>SelectResults</codeph> interface or it is <codeph>UNDEFINED</codeph>. </shortdesc>
	<conbody>
		<p>The <codeph>SelectResults</codeph> returned from the <codeph>SELECT</codeph> statement is
			either a collection of objects or a <codeph>Struct</codeph> collection containing the
			objects. (See also the API documentation for Query.) </p>
		<p>Because a <codeph>SELECT</codeph> statement returns a result, it can be composed with
			other expressions like the following example:</p>
			<codeblock>(SELECT DISTINCT * FROM /portfolios WHERE status = 'active').iterator</codeblock>
		<p>A collection of objects is returned in two cases: </p>
		<ul
			id="ul_CC269EC944D84B0E9481B1C424C4ECB7">
			<li
				id="li_94ABBBF53AF344828D262D0765C428DF">
				<p>When only one expression is specified by the projection list and that expression
					is not explicitly specified using the <codeph>fieldname:expression</codeph>
					syntax </p>
			</li>
			<li
				id="li_EE26F00445EC41C7B80014BF913681EC">When the <codeph>SELECT</codeph> list is *
				and a single collection is specified in the FROM clause </li>
		</ul>
		<table
			id="table_D501DA045E684E00AEBD5FED5ED24853">
			<title>Matrix of SelectResults Contents Based on SELECT and FROM Clause
				Specifications</title>
			<tgroup
				cols="4">
				<colspec
					colnum="1"
					colname="col1"
					colwidth="*"/>
				<colspec
					colnum="2"
					colname="col2"
					colwidth="*"/>
				<colspec
					colnum="3"
					colname="col3"
					colwidth="*"/>
				<colspec
					colnum="4"
					colname="col4"
					colwidth="*"/>
				<tbody>
					<row>
						<entry
							colname="col1">
							<p>
								<b>SELECT</b>
							</p>
							<p>
								<b>FROM</b>
							</p>
						</entry>
						<entry
							colname="col2"
							align="center">
							<b>*</b>
						</entry>
						<entry
							colname="col3">
							<b>Single Expressions</b>
						</entry>
						<entry
							colname="col4">
							<b>Multiple Expressions</b>
						</entry>
					</row>
					<row>
						<entry
							colname="col1">
							<b>single expression</b>
						</entry>
						<entry
							colname="col2">Objects </entry>
						<entry
							colname="col3">
							<p>Objects. (<codeph>Struct</codeph> if the projection specifies a field
								name.) </p>
						</entry>
						<entry
							colname="col4">
							<codeph>Struct</codeph>
						</entry>
					</row>
					<row>
						<entry
							colname="col1">
							<b>multiple expressions</b>
						</entry>
						<entry
							colname="col2">
							<codeph>Struct</codeph>
						</entry>
						<entry
							colname="col3">
							<p>Objects. (<codeph>Struct</codeph> if the projection specifies a field
								name.) </p>
						</entry>
						<entry
							colname="col4">
							<codeph>Struct</codeph>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<p>When a <codeph>Struct</codeph> is returned, the name of each field in the <codeph>Struct
			</codeph>is determined as follows: </p>
		<ul
			id="ul_54B1A22B4143410F97055B19C0FA7183">
			<li
				id="li_6C94D4D363E640CAA9465E80F28FF379">If a field is specified explicitly using
				the <codeph>fieldname:expression</codeph> syntax, the fieldname is used. </li>
			<li
				id="li_E1C3F2D92AE040D1A1044F118870C89F">If the <codeph>SELECT</codeph> projection
				list is * and an explicit iterator expression is used in the <codeph>FROM</codeph>
				clause, the iterator variable name is used as the field name. </li>
			<li
				id="li_D6D41EDC909245D596FF96421DB7C7C0">If the field is associated with a region or
				attribute path expression, the last attribute name in the expression is used. </li>
		</ul>
		<p>If names can not be decided based on these rules, arbitrary unique names are generated by the
			query processor. </p>
		<p>These examples show how the projections and FROM clause expressions are applied. </p>
		<table
			id="table_AB5921ECE00B4A88B624EAF24620A156">
			<tgroup
				cols="3">
				<colspec
					colnum="1"
					colname="col1"
					colwidth="*"/>
				<colspec
					colnum="2"
					colname="col2"
					colwidth="*"/>
				<colspec
					colnum="3"
					colname="col3"
					colwidth="*"/>
				<tbody>
					<row>
						<entry
							colname="col1">
							<codeph>SELECT &lt;*&gt; FROM &lt;single expression&gt;</codeph>
						</entry>
						<entry
							colname="col2">
							<codeph>SELECT DISTINCT *</codeph>
							<p>
								<codeph>FROM /portfolios</codeph>
							</p>
							<p>
								<codeph>WHERE status ='active'</codeph>
							</p>
						</entry>
						<entry
							colname="col3">Returns the <codeph>Collection</codeph> of active
							portfolios objects. </entry>
					</row>
					<row>
						<entry
							colname="col1"><codeph>SELECT &lt;single expression&gt; FROM
								&lt;multiple expression&gt; </codeph>(without
								<codeph>fieldName</codeph> mentioned) </entry>
						<entry
							colname="col2">
							<codeph>IMPORT javaobject.Position; </codeph>
							<codeph>SELECT DISTINCT secId</codeph>
							<p>
								<codeph>FROM /portfolios,</codeph>
							</p>
							<p>positions.values TYPE Position </p>
							<p>WHERE status ='active' </p>
						</entry>
						<entry
							colname="col3">Returns the <codeph>Collection</codeph> of
								<codeph>secIds</codeph> (<codeph>CacheableString</codeph>
							<p>objects) from the positions of active portfolios. </p>
						</entry>
					</row>
					<row>
						<entry
							colname="col1">
							<codeph>SELECT &lt;single expression&gt; FROM</codeph>
							<p><codeph>&lt;multiple expression&gt;</codeph> (with
									<codeph>fieldName</codeph> mentioned) </p>
						</entry>
						<entry
							colname="col2">
							<codeph>IMPORT javaobject.Position;SELECT DISTINCT
								secIdFieldName:secId</codeph>
							<p>
								<codeph>FROM /portfolios, positions.values TYPE Position </codeph>
							</p>
							<p>
								<codeph>WHERE status ='active'</codeph>
							</p>
						</entry>
						<entry
							colname="col3">Returns <codeph>struct&lt;secIdField:
								CacheableString&gt;</codeph> for the active portfolios. (Compare to
							the results for the prior query.) </entry>
					</row>
					<row>
						<entry
							colname="col1">
							<codeph>SELECT &lt;*&gt; FROM &lt;multiple expression&gt;</codeph>
						</entry>
						<entry
							colname="col2">
							<p>
								<codeph>IMPORT javaobject.Position; SELECT DISTINCT *</codeph>

							</p>
							<p>
								<codeph>FROM /portfolios, positions.values TYPE Position </codeph>
							</p>
							<p>
								<codeph>WHERE status = 'active'</codeph>
							</p>
						</entry>
						<entry
							colname="col3">
							<p>Returns a <codeph>Collection</codeph> of
									<codeph>struct&lt;portfolios: Portfolio, values:
									Position&gt;</codeph> for the active portfolios. </p>
						</entry>
					</row>
					<row>
						<entry
							colname="col1">
							<p>
								<codeph>SELECT &lt;multiple expression&gt; FROM &lt;multiple
									expression&gt;</codeph>
							</p>
						</entry>
						<entry
							colname="col2">
							<p>
								<codeph>IMPORT javaobject.Position;</codeph>
							</p>
							<p>
								<codeph>SELECT DISTINCT pflo, posn</codeph>
							</p>
							<p>
								<codeph>FROM /portfolios pflo, positions posn TYPE Position</codeph>
							</p>
							<p>
								<codeph>WHERE pflo.status = 'active'</codeph>
							</p>
						</entry>
						<entry
							colname="col3">
							<p>Returns a <codeph>Collection</codeph> of <codeph>struct&lt;pflo:
									Portfolio, posn: Position&gt;</codeph> for the active
								portfolios. </p>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	</conbody>
</concept>
