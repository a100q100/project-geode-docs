<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept
	id="security">
	<title
		id="title_9717E51087B346988389138843E158C4">Managing Continuous Queries</title>
	<shortdesc>This section discusses how to access and manage your CQs from your client. The calls
		discussed here are all executed specifically for the calling client. A client cannot access
		or modify the CQs belonging to another client. </shortdesc>
	<conbody>
		<p>This section discusses how to access and manage your CQs from your client. The calls
			discussed here are all executed specifically for the calling client. A client cannot
			access or modify the CQs belonging to another client. </p>
		<p>For detailed method usage, see the online API documentation. </p>
		<section
			id="section_939E26544C6E4C419336B7B04D1DE77F">
			<title>Accessing CQs and CQ Statistics</title>
			<p> You can use the <codeph>QueryServicegetCq*</codeph> methods to access a single named
				CQ, an array of all CQs registered, and an array of all CQs registered in the
				client. You canuse the <codeph>CqEvent.getCq</codeph> method to access the CQ used
				to produce a <codeph>CqEvent</codeph>. </p>
			<p> CQ runtime statistics are available for the client through the
					<codeph>CqServiceStatistics</codeph> and <codeph>CqStatistics</codeph>
				interfaces described under <xref
					scope="local"
					href="3-native-client-cq-api.xml#security"
					type="concept"
					format="dita"><?xm-replace_text CQ API and Main   Features?></xref>. You can get
				information on the events generated by a specific CQ from the
					<codeph>CqStatistics</codeph> object returned by
					<codeph>CqQuery.GetStatistics</codeph>. You can get higher-level information
				about the CQs the client has registered, running, and so on, from the
					<codeph>CqServiceStatistics</codeph> object returned by
					<codeph>QueryService.GetCqStatistics</codeph> . </p>
			<p>Client statistics are for the single client only. The server's pertain to all clients with CQs
				on this server. </p>
		</section>
		<section
			id="section_0803146FEC9F4E088C01C521ED83723D">
			<title>Modifying CQ Attributes</title>
			<p>You can modify the attributes for an existing CQ using the methods provided by
					<codeph>CqQuery.GetCqAttributesMutator</codeph>. The attributes consist of a
				list of listeners. </p>
		</section>
		<section
			id="section_132104D528A7457A90EAE120B9080565">
			<title>Stopping and Closing CQs </title>
			<p>You stop individual CQs with the <codeph>CqQuerystop</codeph> method. You can stop
				all CQs for the client through the <codeph>QueryService</codeph>. Stopped CQs are in
				the same state as new CQs that have not yet been executed. You can close or execute
				a stopped CQ. </p>
			<p>You close individual CQs with the <codeph>CqQueryclose</codeph> method. You can also
				close all CQs for the client through the <codeph>QueryService</codeph>. Closed CQs
				cannot be executed. CQs are also closed in the following cases: </p>
				<ul
					id="ul_C6ACAB288D554F99B127C14F1B78EC36">
					<li
						id="li_4B3006A7C1794B4A809407E56D988E08"> The client closes its cache after
						closing all of its CQs--Closing the client cache closes the
							<codeph>QueryService</codeph> and all associated CQs on the client and
						server. </li>
					<li
						id="li_7D6E304EA42E428692510A803BB33AB3"> The client disconnects from its
						server--This might be because of a network outage or some other failure.
						When a client disconnects, all CQs created by the client are removed from
						the server and put into a <codeph>CLOSED</codeph> state on the client. </li>
					<li
						id="li_598DE19111E74C27890621283F288C6F"> The server region is
						destroyed--When a server region is destroyed, all associated CQs are also
						cleaned up on the server and the region destroy event is sent to the client.
						On the client, the <codeph>CqListener.Close</codeph> method is called for
						all CQs on the region. </li>
				</ul>
		</section>
		<section
			id="section_C11FA08192934D578C4FC1EFB610F50B">
			<title>Getting All Durable CQs Registered with the Server</title>
			<p>To obtain a list of all durable CQs registered on the server, use the
					<codeph>QueryService.getAllDurableCqsFromServer</codeph> API. </p>
		</section>
	</conbody>
</concept>
