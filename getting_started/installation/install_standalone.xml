<?xml version="1.0"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_0129F6A1D0EB42C4A3D24861AF2C5425">
	<title>How to Install</title>
	<shortdesc>Build from source or use the ZIP or TAR distribution to install  <keyword
			keyref="product_name_long"/> on every physical and virtual machine that will run
			<keyword keyref="product_name_long"/>. </shortdesc>
	<conbody>
		<section>
			<title>Build from Source on Unix</title>
			<ol id="ol_ok2_frv_2v">
				<li>Set the JAVA_HOME environment
					variable.<codeblock>JAVA_HOME=/usr/java/jdk1.8.0_60
export JAVA_HOME
</codeblock></li>
				<li>Download the project source from the Releases page found at <xref format="html"
						href="http://geode.incubator.apache.org/" scope="external"
						>http://geode.incubator.apache.org</xref>, and unpack the source code. </li>
				<li>Within the directory containing the unpacked source code, build without
						tests:<codeblock>$ ./gradlew build installDist -Dskip.tests=true</codeblock><p>Or,
						build with the
						tests:<codeblock>$ ./gradlew build installDist</codeblock></p></li>
				<li>Verify the installation by invoking <codeph>gfsh</codeph> to print version
					information and exit. On Linux/Unix platforms, the version will be similar
					to:<codeblock>$ cd geode-assembly/build/install/apache-geode
$ bin/gfsh version
v1.0.0-incubating</codeblock></li>
			</ol>
		</section>
		<section>
			<title>Build from Source on Windows</title>
			<ol id="ol_jp4_grv_2v">
				<li>Set the JAVA_HOME environment variable.  For
					example:<codeblock>$ set JAVA_HOME="C:\Program Files\Java\jdk1.8.0_60" 
</codeblock></li>
				<li> Install Gradle, version 2.3 or a more recent version.</li>
				<li>Download the project source from the Releases page found at <xref format="html"
						href="http://geode.incubator.apache.org/" scope="external"
						>http://geode.incubator.apache.org</xref>, and unpack the source code. </li>
				<li>Within the folder containing the unpacked source code, build without the
						tests:<codeblock>$ gradle build installDist -Dskip.tests=true</codeblock><p>Or,
						build with the
					tests:<codeblock>$ gradle build installDist</codeblock></p></li>
				<li>Verify the installation by invoking <codeph>gfsh</codeph> to print version information and
					exit.<codeblock>$ cd geode-assembly\build\install\apache-geode\bin
$ gfsh.bat version
v1.0.0-incubating</codeblock></li>
			</ol>
		</section>
		<section id="section_D3326496B2BB47A7AB0CFC1A5E266842">
			<title>Install Binaries from .zip or .tar File</title>
			<ol id="ol_qsn_kvs_35">
				<li>Download the .zip or .tar file from the Releases page found at <xref
						format="html" href="http://geode.incubator.apache.org/" scope="external"
						>http://geode.incubator.apache.org</xref>.</li>
				<li>Unzip the .zip file or expand the .tar file, where <codeph><i>path_to_product</i></codeph>
					is an absolute path, and the file name will vary due to the version number. For
					the .zip
					format:<codeblock>$ unzip apache-geode-1.0.0-incubating.zip -d <i>path_to_product</i></codeblock>For
					the .tar
					format:<codeblock>$ tar -xvf apache-geode-1.0.0-incubating.tar -C <i>path_to_product</i></codeblock>
				</li>
				<li>Set the JAVA_HOME environment variable. On Linux/Unix platforms:
					<codeblock>JAVA_HOME=/usr/java/jdk1.8.0_60
export JAVA_HOME
</codeblock>On
					Windows
					platforms:<codeblock>set JAVA_HOME=c:\Program Files\Java\jdk1.8.0_60 
</codeblock></li>
				<li>Add the <keyword keyref="product_name"/> scripts to your PATH environment 
					variable. On Linux/Unix platforms:<codeblock>
PATH=$PATH:$JAVA_HOME/bin:<i>path_to_product</i>/bin
export PATH</codeblock>On
					Windows
					platforms:<codeblock>set PATH=%PATH%;%JAVA_HOME%\bin;<i>path_to_product</i>\bin 
</codeblock></li>
				<li>To verify the installation, type <codeph>gfsh version</codeph> at the command line and note
					that the output lists the installed version of <keyword keyref="product_name"/>.
					For example:<codeblock>$ gfsh version
v1.0.0-incubating</codeblock>For more
					detailed version information such as the date of the build, build number and JDK
					version being used, invoke:<codeblock>$ gfsh version --full</codeblock></li>
			</ol>
		</section>
	</conbody>
</concept>
