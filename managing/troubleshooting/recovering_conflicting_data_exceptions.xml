<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_ghw_z2m_jq">
  <title>Recovering from ConfictingPersistentDataExceptions</title>
  <shortdesc>A <codeph>ConflictingPersistentDataException</codeph> while starting up persistent
    members indicates that you have multiple copies of some persistent data, and <keyword
      keyref="product_name"/> cannot determine which copy to use.</shortdesc>
  <body>
    <p>Normally <keyword keyref="product_name"/> uses metadata to determine automatically which copy
      of persistent data to use. Along with the region data, each member persists a list of other
      members that are hosting the region and whether their data is up to date. A
        <codeph>ConflictingPersistentDataException</codeph> happens when two members compare their
      metadata and find that it is inconsistent. The members either donâ€™t know about each other, or
      they both think the other member has stale data.</p>
    <p>The following sections describe scenarios that can cause
        <codeph>ConflictingPersistentDataException</codeph>s in <keyword keyref="product_name"/> and
      how to resolve the conflict.</p>
    <section id="section_sj3_lpm_jq">
      <title>Independently Created Copies</title>
      <p>Trying to merge two independently created distributed systems into a single distributed
        system will cause a <codeph>ConflictingPersistentDataException</codeph>. </p>
      <p dir="ltr">There are a few ways to end up with independently created systems. </p>
      <ul id="ul_wnv_2hm_jq">
        <li dir="ltr">Create two different distributed systems by having members connect to
          different locators that are not aware of each other.</li>
        <li dir="ltr">Shut down all persistent members and then start up a different set of brand
          new persistent members.</li>
      </ul>
      <p><keyword keyref="product_name"/> will not automatically merge independently created data
        for the same region. Instead, you need to export the data from one of the systems and import
        it into the other system. See the section <xref
          href="../cache_snapshots/chapter_overview.xml"/>
        for instructions on how to export data from one system and import it into another. </p>
    </section>
    <section id="section_op5_hpm_jq">
      <title>Starting New Members First</title>
      <p>Starting a brand new member that has no persistent data before starting older members with
        persistent data can cause a <codeph>ConflictingPersistentDataException</codeph>.</p>
      <p dir="ltr">One accidental way this can happen is to shut the system down, add a new member
        to the startup scripts, and start all members in parallel. By chance, the new member may
        start first. The issue is that the new member will create an empty, independent copy of the
        data before the older members start up. <keyword keyref="product_name"/> will be treat this
        situation like the <xref href="#topic_ghw_z2m_jq/section_sj3_lpm_jq" format="dita"/> case. </p>
      <p dir="ltr">In this case the fix is simply to move aside or delete the persistent files for
        the new member, shut down the new member and then restart the older members. When the older
        members have fully recovered, then restart the new member.</p>
    </section>
    <section>
      <title>A Network Failure Occurs and Network Partitioning Detection is Disabled </title>
      <p>When <codeph>enable-network-partition-detection</codeph> is set to true, <keyword
          keyref="product_name"/> will detect a network partition and shut down unreachable members
        to prevent a network partition ("split brain") from occurring. No conflicts should occur
        when the system is healed.</p>
      <p dir="ltr">However if <codeph>enable-network-partition-detection</codeph> is false, <keyword
          keyref="product_name"/> will not detect the network partition. Instead, each side of the
        network partition will end up recording that the other side of the partition has stale data.
        When the partition is healed and persistent members are restarted, the members will report a
        conflict because both sides of the partition think the other members are stale.</p>
      <p>In some cases it may be possible to choose between sides of the network partition and just
        keep the data from one side of the partition. Otherwise you may need to salvage data and
        import it into a fresh system.</p>
    </section>
    <section>
      <title>Salvaging Data</title>
      <p>If you receive a ConflictingPersistentDataException, you will not be able to start all of
        your members and have them join the same distributed system. You have some members with
        conflicting data.</p>
      <p dir="ltr">First, see if there is part of the system that you can recover. For example if
        you just added some new members to the system, try to start up without including those
        members.</p>
      <p dir="ltr">For the remaining members you can extract data from the persistent files on those
        members and import the data.</p>
      <p dir="ltr">To extract data from the persistent files, use the <codeph>gfsh export
          offline-disk-store</codeph>
        command.</p>
      <codeblock>gfsh> export offline-disk-store --name=MyDiskStore --disk-dirs=./mydir --dir=./outputdir</codeblock>
      <p dir="ltr">This will produce a set of snapshot files. Those snapshot files can be imported
        into a running system
        using:</p>
      <codeblock>gfsh> import data --region=/myregion --file=./outputdir/snapshot-snapshotTest-test0.gfd --member=server1</codeblock>
    </section>
  </body>
</topic>
