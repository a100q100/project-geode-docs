<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="producing_data_files">
	<title>Producing Artifacts for Troubleshooting</title>
	<shortdesc>There are several types of files that are critical for troubleshooting. </shortdesc>
	<conbody>
		<p><keyword keyref="product_name"/> logs and statistics are the two most important artifacts
			used in troubleshooting. In addition, they are required for <keyword
				keyref="product_name"/> system health verification and performance analysis. For
			these reasons, logging and statistics should always be enabled, especially in
			production. Save the following files for troubleshooting purposes:</p>
		<ul id="ul_1023CB65A41E455ABDE155773EAF1938">
			<li id="li_2045A8C33BBC4E3391289B322F22ED67">Log files. Even at the default logging
				level, the log contains data that may be important. Save the whole log, not just the
				stack. For comparison, save log files from before, during, and after the problem
				occurred. </li>
			<li id="li_D8F72EED59CD45FFB1025E37BF0B54F3">Statistics archive files. </li>
			<li id="li_E1C4AFFD55574F83B4EAC1460D84232C">Core files or stack traces. </li>
			<li id="li_9B17E79E8F0B40829B6FC88CB685966C">For Linux, you can use gdb to extract a
				stack from a core file. </li>
			<li id="li_BEB5F26CC83F4CEDBCBAB81329519886">Crash dumps. </li>
			<li id="li_B8705476BDB34B2787617C6F6FC2E394">For Windows, save the user mode dump files.
				Some locations to check for these files:<ul id="ul_awh_vyd_2m">
					<li>C:\ProgramData\Microsoft\Windows\WER\ReportArchive </li>
					<li>C:\ProgramData\Microsoft\Windows\WER\ReportQueue </li>
					<li>C:\Users\<i>UserProfileName</i>\AppData\Local\Microsoft\Windows\WER\ReportArchive</li>
					<li>C:\Users\<i>UserProfileName</i>\AppData\Local\Microsoft\Windows\WER\ReportQueue</li>
				</ul></li>
		</ul>
		<p>When a problem arises that involves more than one process, a network problem is the most
			likely cause. When you diagnose a problem, create a log file for each member of all the
			distributed systems involved. If you are running a client/server architecture, create
			log files for the clients. </p>
			<note>You must run a time synchronization service on all hosts for troubleshooting.
				Synchronized time stamps ensure that log messages on different hosts can be merged
				to accurately reproduce a chronological history of a distributed run. </note>
		<p>For each process, complete these steps: </p>
			<ol id="ol_D36655ABBE484FF7ABEBA078B0B53D94">
				<li id="li_AB1E0E68E42F4423AB9508D703A7A9D8">Make sure the hostâ€™s clock is
					synchronized with the other hosts. Use a time synchronization tool such as
					Network Time Protocol (NTP). </li>
				<li id="li_F8A34323446B4755BB3866166A65E1A3">Enable logging to a file instead of
					standard output by editing <codeph>gemfire.properties</codeph> to include this
					line: <codeblock>log-file=filename</codeblock></li>
				<li id="li_3F0F358655F04151BB1D6645F7D7D706">Keep the log level at
						<codeph>config</codeph> to avoid filling up the disk while including
					configuration information. Add this line to <codeph>gemfire.properties</codeph>:
						<codeblock>log-level=config</codeblock><note>Running with the log level at
							<codeph>fine</codeph> can impact system performance and fill up your
						disk. </note></li>
				<li>Enable statistics gathering for the distributed system either by modifying
						<codeph>gemfire.properties</codeph>:<codeblock>statistic-sampling-enabled=true
statistic-archive-file=StatisticsArchiveFile.gfs</codeblock>
					or by using the <codeph>gfsh alter rutime</codeph>
						command:<codeblock>alter runtime --group=myMemberGroup --enable-statistics=true --statistic-archive-file=StatisticsArchiveFile.gfs</codeblock><note>Collecting
						statistics at the default sample rate frequency of 1000 milliseconds does
						not incur performance overhead. </note></li>
				<li id="li_A1F5F8EC8D5C4F3183E2997E1B5804F9">Run the application again. </li>
				<li id="li_01F683C8C68D462783F940004E168222">Examine the log files. To get the
					clearest picture, merge the files. To find all the errors in the log file,
					search for lines that begin with these strings:
						<codeblock>[error
[severe</codeblock><p>For details on merging log files,
						see the <codeph>--merge-log</codeph> argument for the <xref
							href="../../tools_modules/gfsh/command-pages/export.xml#topic_B80978CC659244AE91E2B8CE56EBDFE3"
						/>command. </p></li>
				<li>Export and analyze the stack traces on the member or member group where the
					application is running. Use the <codeph>gfsh export stack-traces
						command</codeph>. For
					example:<codeblock>gfsh> export stack-traces --file=ApplicationStackTrace.txt --member=member1</codeblock></li>
			</ol>
	</conbody>
</concept>
