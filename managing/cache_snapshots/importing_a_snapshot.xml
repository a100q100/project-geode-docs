<?xml version="1.0"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_62B1E24DA7F342E9BB16C0818F7A7B70">
	<title>Importing Cache and Region Snapshots</title>
	<shortdesc>To import a <keyword keyref="product_name"/> cache or region data snapshot that you
		previously exported into another distributed system or region, use the
			<codeph>cache.getSnapshotService.load</codeph> API,
			<codeph>region.getSnapshotService.load</codeph> API, or the <codeph>gfsh</codeph>
		command-line interface (<codeph>import data</codeph>). </shortdesc>
	<conbody>
		<section id="section_4B2C73CA1A734D9D96693A52BF99D75A">
			<title>Import Requirements</title>
			<p> Before you import a region snapshot: </p>
				<ul id="ul_D57BC5DC457A476E8330C4CB497EB621">
					<li id="li_4129C34A53BC48108534AC70F05388A5">Make sure the cache is configured
						correctly. Configure all registered PdxSerializers, DataSerializers, and
						Instantiators; create regions; and ensure the classpath contains any
						required classes. </li>
					<li id="li_65C50D5765DD4781A694307787D4429E">When you import a snapshot
						containing PDX types, you must wait until the exported type definitions are
						imported into the cache before inserting data that causes type conflicts. It
						is recommended that you wait for the import to complete before inserting
						data. </li>
				</ul>
		</section>
		<section id="section_F5FA11694BFC46D4A813A259FE670C69">
			<title>Import Limitations</title>
			<p> During an import, the <codeph>CacheWriter</codeph> and
					<codeph>CacheListener</codeph> callbacks are not invoked.</p>
			<p> If an error occurs during import, the import is halted and the region will contain
				some but not all snapshot data. </p>
			<p> The state of a cache client is indeterminate after an import. It is likely that the
				data in the client's cache is inconsistent with the imported data. Take the client
				offline during the import and restart it after the import completes. </p>
		</section>
		<section id="section_4F1A3A60FABA49A295CA18FBF572998D">
			<title>Importing Cache Snapshots</title>
			<p> When you import a cache snapshot, the snapshot file is imported into the same region
				(match determined by name) that was used during snapshot export. When you import a
				cache, you import all snapshot files located within a directory into the cache. The
				API attempts to load all files in the specified directory. </p>
			<p><b>Java API:</b></p>
				<codeblock>
File mySnapshotDir = ...
Cache cache = ...

cache.getSnapshotService().load(mySnapshotDir, SnapshotFormat.GEMFIRE);</codeblock>
		</section>
		<section id="section_97054643976345A099A7BDDC63DE30E9">
			<title>Importing a Region Snapshot</title>
			<p><b>Java API: </b></p>
				<codeblock>File mySnapshot = ...
Region&lt;String, MyObject&gt; region = ...

region.getSnapshotService().load(mySnapshot, SnapshotFormat.GEMFIRE);</codeblock>
			<p><b>gfsh:</b></p>
			<p>Open a gfsh prompt. After connecting to a <keyword keyref="product_name"/>
				distributed system, at the prompt type:</p>
				<codeblock>gfsh&gt;import data --region=<i>Region</i> --file=<i>filename</i>.gfd 
--member=<i>membername</i></codeblock>
			<p>where <i>Region</i> corresponds to the name of the region that you want to import
				data into; <i>filename</i> (must end in .gfd) corresponds to the name of the file to
				be imported; and <i>membername</i> corresponds to the member where the region to be
				imported is hosted. For example:</p>
				<codeblock>gfsh&gt;import data --region=region1 --file=region1_2012_10_10.gfd 
--member=server2</codeblock>
			<p>The
				snapshot file must already reside on the specified member at the location specified
				in the <codeph>--file</codeph> argument before import. </p><p>For more information
				on this command, see <xref
					href="../../tools_modules/gfsh/command-pages/import.xml#topic_jw2_2ld_2l"/>.
			</p>
		</section>
	</conbody>
</concept>
