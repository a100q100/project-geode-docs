<?xml version="1.0"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_28412DB4E8FF490CA7DD6066060065DB">
	<title>How Transaction Events Are Managed</title>
	<shortdesc> </shortdesc>
	<conbody>
		<p>Transactional cache operations are handled somewhat differently inside transactions than
			out. </p><ol id="ol_F78AE8AB0F504C198FE32CCA482C5496">
				<li id="li_DB77B68CC1A940B28D4DF5EAA37AAAB3">During the Transaction. While the
					transaction is running, each transactional operation is passed to the cache
					writer local to the transactional view, if one is available. As with cache
					operations outside of transactions, the cache writer can abort the operation.
					Each operation the cache writer allows is applied to the transactional view in
					the cache and appended to the CacheEvent list in the TransactionEvent object.
						<ul id="ul_FCBD223A9F594D7BBB22B2471574E521">
						<li id="li_B0C6D74C5BF14F7CBF8288A85AA6047A">Event Conflation. The cache events are conflated,
							so if a key already has an event in the list, that event is removed and
							the current operation is added to the end of the list. So this series of
							calls inside a transaction:
							<codeblock>Region.create (A, W);
Region.put (A, valX);
Region.put (B, valQ);
Region.invalidate (A);
Region.put (A, valY);</codeblock>results
							in these events stored in the CacheEvent list:
							<codeblock>put (B, valQ)
put (A, valY)</codeblock>
						</li>
					</ul>
				</li>
				<li id="li_12A79A07D0AD487C8A7E787C52754F8D">At commit and after commit. When the
					transaction is committed, <keyword keyref="product_name"/> passes the <codeph>TransactionEvent</codeph>
					to the transaction writer local to the transactional view, if one is available.
					After commit, <keyword keyref="product_name"/> : <ul
						id="ul_B3E6C92A3F6944969E05928125A1F1E6">
						<li id="li_0F3B3723C2914759BA916F778A13BE83">Passes the
								<codeph>TransactionEvent</codeph> to each installed transaction
							listener. </li>
						<li id="li_4D4DBA289ABB490795E5E0227534EBE0">Walks the
								<codeph>CacheEvent</codeph> list, calling all locally installed
							listeners for each operation listed. </li>
						<li id="li_E66C3AA97A664504B67800E5519430C4">Distributes the <codeph>TransactionEvent</codeph>
							to all interested caches. <note>For <keyword keyref="product_name"/> and
								global JTA transactions, the <codeph>EntryEvent</codeph> object
								contains the <keyword keyref="product_name"/> transaction ID. JTA
								transaction events do not contain the JTA transaction ID. </note>
						</li>
					</ul>
				</li>
			</ol>
	</conbody>
</concept>
