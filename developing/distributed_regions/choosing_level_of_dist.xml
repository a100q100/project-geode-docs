<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="choosing_level_of_dist">
	<title>Options for Region Distribution</title>
	<shortdesc>You can use distribution with and without acknowledgment, or global locking for your
		region distribution. Regions that are configured for distribution with acknowledgment can
		also be configured to resolve concurrent updates consistently across all <keyword
			keyref="product_name"/> members that host the region. </shortdesc>
	<conbody>
		<section id="section_F2528B151DD54CEFA05C4BA655BCF016">
			<p>Each distributed region must have the same scope and concurrency checking setting
				throughout the distributed system. </p>
			<p>Distributed scope is provided at three levels: <ul
					id="ul_c89c1811-fc88-45d9-ba8b-6b3b0bc3c171">
					<li id="li_FEF0EAECBBE24D70ACA3560D82894DA1"><b>distributed-no-ack</b>.
						Distribution operations return without waiting for a response from other
						caches. This scope provides the best performance and uses the least amount
						of overhead, but it is also most prone to having inconsistencies caused by
						network problems. For example, a temporary disruption of the network
						transport layer could cause a failure in distributing updates to a cache on
						a remote machine, while the local cache continues being updated. </li>
					<li id="li_5C67FFB1BFF64FD8BC97A153278474F2"><b>distributed-ack</b>. Distribution waits for
						acknowledgment from other caches before continuing. This is slower than
							<codeph>distributed-no-ack</codeph>, but covers simple communication
						problems such as temporary network disruptions. <p>In systems where there
							are many <codeph>distributed-no-ack</codeph> operations, it is possible
							for <codeph>distributed-ack</codeph> operations to take a long time to
							complete. The distributed system has a configurable time to wait for
							acknowledgment to any <codeph>distributed-ack</codeph> message before
							sending alerts to the logs about a possible problem with the
							unresponsive member. No matter how long the wait, the sender keeps
							waiting in order to honor the distributed-ack region setting. The
								<codeph>gemfire.properties</codeph> attribute governing this is
								<codeph>ack-wait-threshold</codeph>. </p>
					</li>
					<li id="li_601E97F86D1E443DBF9E8AB1B6B30101"><b>global</b>. Entries and regions
						are automatically locked across the distributed system during distribution
						operations. All load, create, put, invalidate, and destroy operations on the
						region and its entries are performed with a distributed lock. The global
						scope enforces strict consistency across the distributed system, but it is
						the slowest mechanism for achieving consistency. In addition to the implicit
						locking performed by distribution operations, regions with global scope and
						their contents can be explicitly locked through the application APIs. This
						allows applications to perform atomic, multi-step operations on regions and
						region entries. </li>
				</ul>
			</p>
		</section>
	</conbody>
</concept>
