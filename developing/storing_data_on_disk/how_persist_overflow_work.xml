<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="how_persist_overflow_work">
	<title>How Persistence and Overflow Work</title>
	<shortdesc id="shortdesc_cp1_rwb_pr">To use <keyword keyref="product_name"/> persistence and
		overflow, you should understand how they work with your data. </shortdesc>
	<conbody>
		<section id="section_jzl_wwb_pr">
			<p><keyword keyref="product_name"/> persists and overflows several types of data. You
				can persist or overflow the application data in your regions. In addition, <keyword
					keyref="product_name"/> persists and overflows messaging queues between
				distributed systems, to manage memory consumption and provide high availability. </p>
			<p>Persistent data outlives the member where the region resides and can be used to
				initialize the region at creation. Overflow acts only as an extension of the region
				in memory. </p>
			<p>The data is written to disk according to the configuration of <keyword
					keyref="product_name"/> disk stores. For any disk option, you can specify the
				name of the disk store to use or use the <keyword keyref="product_name"/> default
				disk store. See <xref
					href="../../managing/disk_storage/chapter_overview.xml"
					type="concept" format="dita" scope="local"/>. </p>
		</section>
		<section id="section_78F2D1820B6C48859A0E5411CE360105">
			<title>How Data Is Persisted and Overflowed</title>
			<p>For persistence, the entry keys and values are copied to disk. For overflow, only the
				entry values are copied. Other data, such as statistics and user attributes, are
				retained in memory only. </p>
				<ul id="ul_5858A8C7B4D1482B86665348CAA83A79">
					<li id="li_919C9B39F896430F8714B22D4F26F159">Data regions are overflowed to disk
						by least recently used (LRU) entries because those entries are deemed of
						least interest to the application and therefore less likely to be accessed. </li>
					<li id="li_D4A6FC2DC90F4B819D11921557229CC4">Server subscription queues overflow
						most recently used (MRU) entries. These are the messages that are at the end
						of the queue and so are last in line to be sent to the client. </li>
				</ul>
		</section>
		<section id="section_1A3AE288145749058880D98C699FE124">
			<title>Persistence</title>
			<p>Persistence provides a disk backup of region entry data. The keys and values of all
				entries are saved to disk, like having a replica of the region on disk. Region entry
				operations such as put and destroy are carried out in memory and on disk. </p>
			<p>
				<image placement="break" id="image_B53E1A5A568D437692247A2FD99348A6"
					href="../../images_svg/developing_persistence.svg"/>
			</p>
			<p>When the member stops for any reason, the region data on disk remains. In partitioned
				regions, where data buckets are divided among members, this can result in some data
				only on disk and some on disk and in memory. The disk data can be used at member
				startup to populate the same region. </p>
		</section>
		<section id="section_55A7BBEB48574F649C40EB5D3E9CD0AC">
			<title>Overflow</title>
			<p>Overflow limits region size in memory by moving the values of least recently used
				(LRU) entries to disk. Overflow basically uses disk as a swap space for entry
				values. If an entry is requested whose value is only on disk, the value is copied
				back up into memory, possibly causing the value of a different LRU entry to be moved
				to disk. As with persisted entries, overflowed entries are maintained on disk just
				as they are in memory. </p>
			<p>In this figure, the value of entry X has been moved to disk to make space in memory.
				The key for X remains in memory. From the distributed system perspective, the value
				on disk is as much a part of the region as the data in memory. </p>
			<p>
				<image placement="break" id="image_1F89C9FBACB54EDA844778EC60F61B8D"
					href="../../images_svg/developing_overflow.svg"/>
			</p>
		</section>
		<section id="section_9CBEBC0B59554DB49CE4941435793C51">
			<title>Persistence and Overflow Together</title>
			<p>Used together, persistence and overflow keep all entry keys and values on disk and
				only the most active entry values in memory. The removal of an entry value from
				memory due to overflow has no effect on the disk copy as all entries are already on
				disk. </p>
			<p>
				<image placement="break" id="image_E40D9C2EA238406A991E954477C7EB78"
					href="../../images_svg/developing_persistence_and_overflow.svg"/>
			</p>
		</section>
		<section>
			<title>Persistence and Multi-Site Configurations</title>
			<p>Multi-site gateway sender queues overflow most recently used (MRU) entries. These are
				the messages that are at the end of the queue and so are last in line to be sent to
				the remote site. You can also configure gateway sender queues to persist for high
				availability. </p>
		</section>
	</conbody>
</concept>
