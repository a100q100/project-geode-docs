<?xml version="1.0"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_2D557E24AAB24044A3DB36B3124F6748">
	<title>Query Debugging</title>
	<shortdesc><?xm-replace_text Short Description?> You can debug a specific query at the query
		level by adding the <codeph>&lt;trace&gt;</codeph> keyword before the query string that you
		want to debug.</shortdesc>
	<conbody>
		<p>Here is an example: <codeblock>&lt;trace&gt; select * from /exampleRegion</codeblock>You
			can also write: <codeblock>&lt;TRACE&gt; select * from /exampleRegion</codeblock>
		</p>
		<p> When the query is executed, <keyword keyref="product_name"/> will log a message in
				<codeph>$GEMFIRE_DIR/system.log</codeph> with the following information:
			<msgblock>[info 2011/08/29 11:24:35.472 PDT CqServer &lt;main&gt; tid=0x1] Query Executed in 9.619656 ms; rowCount = 99; indexesUsed(0) "select *  from /exampleRegion" </msgblock>
		</p>
		<p>If you want to enable debugging for all queries, you can enable query execution logging
			by setting a System property on the command line during start-up:
			<codeblock>gfsh&gt;start server --name=<varname>server_name</varname> -â€“J=-Dgemfire.Query.VERBOSE=true</codeblock>
		</p>
		<p>Or you can set the property programmatically:
			<codeblock>System.setProperty("gemfire.Query.VERBOSE","true");</codeblock>
		</p>
		<p> As an example, let us say you have an EmployeeRegion that that contains Employee objects
			as values and the objects have public fields in them like ID and status.
			<codeblock>
Employee.java
Class Employee {
 public int ID;
 public String status;
 - - - - - -
 - - - - - -
}
</codeblock>
			In addition, you have created the following indexes for the region:
			<codeblock>&lt;index name="sampleIndex-1"&gt;
&lt;functional from-clause="/test " expression="ID"/&gt;
&lt;/index&gt;
&lt;index name="sampleIndex-2"&gt;
&lt;functional from-clause="/test " expression="status"/&gt;
&lt;/index&gt;
</codeblock>
		</p>
		<p> After you have set <codeph>gemfire.Query.VERBOSE</codeph> to "true", you could see the
			following debug messages in the logs after running queries on the EmployeeRegion or its
			indexes: <ul id="ul_10DC2EF076F74F34B58CBA5A68D4F4C8">
				<li id="li_CDCBAF77FE59470B9463AD014B13325F"> If indexes are not used in the query
					execution, you would see a debug message like this:
					<codeblock>[info 2011/08/29 11:24:35.472 PDT CqServer &lt;main&gt; tid=0x1] Query Executed in 9.619656 ms; rowCount = 99; indexesUsed(0) "select * from /test k where ID &gt; 0 and status='active'"</codeblock>
				</li>
				<li id="li_1D48293E034F4EE9A07ADF5622DEDC06"> When single index is used in query
					execution, you might see a debug message like this:
					<codeblock>[info 2011/08/29 11:24:35.472 PDT CqServer &lt;main&gt; tid=0x1] Query Executed in 101.43499 ms; rowCount = 199; indexesUsed(1):sampleIndex-1(Results: 199) "select count *   from /test k where ID &gt; 0"</codeblock>
				</li>
				<li id="li_97FC5C3C82674F3AAE49F821A6355C2F"> When multiple indexes are used by a
					query, you might see a debug message like this:
					<codeblock>[info 2011/08/29 11:24:35.472 PDT CqServer &lt;main&gt; tid=0x1] Query Executed in 79.43847 ms; rowCount = 199; indexesUsed(2):sampleIndex-2(Results: 100),sampleIndex-1(Results: 199) "select * from /test k where ID &gt; 0 OR status='active'"</codeblock>
				</li>
			</ul>
		</p>
		<p>In above log messages, the following information is provided: <ul
				id="ul_E7B5FD1D653941779711258B8C127008">
				<li id="li_F682293469FC4C08A4EB8612CF727F18"> "rowCount" represents ResultSet size
					for the query. </li>
				<li id="li_E2F4D0608EB44A17B626371D1A8E182A"> "indexesUsed(\n) " shows n indexes
					were used for finding the results of the query. </li>
				<li id="li_2B9B8D21306D435BB3CFB76ED9CCA15B"> Each index name and its corresponding
					results are reported respectively. </li>
				<li id="li_8B170E95603144BE844AF30A33D6F955"> The log can be identified with the
					original query string itself appended in the end. </li>
			</ul>
		</p>
	</conbody>
</concept>
