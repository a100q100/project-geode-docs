<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="how_pr_single_hop_works">
	<title>Understanding Client Single-Hop Access to Server-Partitioned Regions</title>
	<shortdesc>With single-hop access the client connects to every server, so more connections are
		generally used. This works fine for smaller installations, but is a barrier to scaling. </shortdesc>
	<conbody>
		<p>If you have a large installation with many clients, you may want to disable single hop by
			setting the pool attribute, <codeph>pr-single-hop-enabled</codeph> to false in your pool
			declarations. </p>
		<p>Without single hop, the client uses whatever server connection is available, the same as
			with all other operations. The server that receives the request determines the data
			location and contacts the host, which might be a different server. So more multiple-hop
			requests are made to the server system. </p>
		<note>Single hop is used for the following operations: <codeph>put</codeph>,
				<codeph>get</codeph>, <codeph>destroy</codeph>, <codeph>putAll</codeph>,
				<codeph>getAll</codeph>, <codeph>removeAll</codeph> and <codeph>onRegion</codeph>
			function execution. </note>
		<p>Even with single hop access enabled, you will occasionally see some multiple-hop
			behavior. To perform single-hop data access, clients automatically get metadata from the
			servers about where the entry buckets are hosted. The metadata is maintained lazily. It
			is only updated after a single-hop operation ends up needing multiple hops, an indicator
			of stale metadata in the client. </p>
		<section id="section_AE4A6DA0064C4D5280336DD65CB107CC">
			<title>Single Hop and the Pool <codeph>max-connections</codeph> Setting</title>
			<p>Do not set the pool's <codeph>max-connections</codeph> setting with single hop
				enabled. Limiting the pool's connections with single hop can cause connection
				thrashing, throughput loss, and server log bloat. </p>
			<p>If you need to limit the pool’s connections, either disable single hop or keep a
				close watch on your system for these negative effects. </p>
			<p>Setting no limit on connections, however, can result in too many connections to your
				servers, possibly causing you to run up against your system’s file handle limits.
				Review your anticipated connection use and make sure your servers are able to
				accommodate it. </p>
		</section>
		<section id="section_99F27B724E5F4008BC8878D1CB4B9821">
			<title>Balancing Single-Hop Server Connection Use </title>
			<p>Single-hop gives the biggest benefits when data access is well balanced across your
				servers. In particular, the loads for client/server connections can get out of
				balance if you have these in combination: </p>
				<ul
					id="ul_1512a17f-6cb6-4557-9140-01d230a67a57">
					<li id="li_4F402D615728475C9ECC94E749F583EA">Servers that are empty data
						accessors or that do not host the data the clients access through single-key
						operations </li>
					<li id="li_86364FD5B5E74FD9A8930FF00EDF0DB3">Many single-key operations from the
						clients </li>
				</ul>
			<p>If data access is greatly out of balance, clients can thrash trying to get to
				the data servers. In this case, it might be faster to disable single hop and go
				through servers that do not host the data. </p>
		</section>
	</conbody>
</concept>
