<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="how_partitioning_works">
	<title>Understanding Partitioning</title>
	<shortdesc id="shortdesc_9C458F51BE9F449D8335C5CC2B831639">To use partitioned regions, you
		should understand how they work and your options for managing them. </shortdesc>
	<conbody>
		<section id="section_B540C49A80124551853AFCE2DE6BCFE8">
			<p>During operation, a partitioned region looks like one large virtual region, with the
				same logical view held by all of the members where the region is defined. <image
					placement="break" id="image_305566EA091A4CBBB108BE0EA7658C0A"
					href="../../images_svg/how_partitioning_works_1.svg"/>
			</p>
			<p>For each member where you define the region, you can choose how much space to allow
				for region data storage, including no local storage at all. The member can access
				all region data regardless of how much is stored locally. <image placement="break"
					id="image_773C91B76D5E4739A1F81D9DF918BCDB"
					href="../../images_svg/how_partitioning_works_2.svg"/>
			</p>
			<p>A distributed system can have multiple partitioned regions, and it can mix
				partitioned regions with distributed regions and local regions. The usual
				requirement for unique region names, except for regions with local scope, still
				applies. A single member can host multiple partitioned regions. </p>
		</section>
		<section id="section_260C2455FC8C40A094B39BF585D06B7D">
			<title>Data Partitioning</title>
			<p><keyword keyref="product_name"/> automatically determines the physical location of
				data in the members that host a partitioned region's data. <keyword
					keyref="product_name"/> breaks partitioned region data into units of storage
				known as buckets and stores each bucket in a region host member. Buckets are
				distributed in accordance to the member’s region attribute settings. </p>
			<p>When an entry is created, it is assigned to a bucket. Keys are grouped together in a
				bucket and always remain there. If the configuration allows, the buckets may be
				moved between members to balance the load. </p>
			<p>You must run the data stores needed to accommodate storage for the partitioned
				region’s buckets. You can start new data stores on the fly. When a new data store
				creates the region, it takes responsibility for as many buckets as allowed by the
				partitioned region and member configuration. </p>
			<p>You can customize how <keyword keyref="product_name"/> groups your partitioned region
				data with custom partitioning and data colocation. </p>
		</section>
		<section id="section_155F9D4AB539473F848FD05E413B21B3">
			<title>Partitioned Region Operation</title>
			<p>A partitioned region operates much like a non-partitioned region with distributed
				scope. Most of the standard <codeph>Region</codeph> methods are available, although
				some methods that are normally local operations become distributed operations,
				because they work on the partitioned region as a whole instead of the local cache.
				For example, a <codeph>put</codeph> or <codeph>create</codeph> into a partitioned
				region may not actually be stored into the cache of the member that called the
				operation. The retrieval of any entry requires no more than one hop between members. </p>
			<p>Partitioned regions support the client/server model, just like other regions. If you
				need to connect dozens of clients to a single partitioned region, using servers
				greatly improves performance. </p>
		</section>
		<section id="section_3B47A291ADAB4988AF9D0DF34BC2CDAC">
			<title>Additional Information About Partitioned Regions</title>
			<p> Keep the following in mind about partitioned regions: </p>
				<ul
					id="ul_257B9E4C6EC34EC7852A6668289B6C62">
					<li id="li_CB93B92522EC4682BAEE825A85A662CE">Partitioned regions never run
						asynchronously. Operations in partitioned regions always wait for
						acknowledgement from the caches containing the original data entry and any
						redundant copies. </li>
					<li id="li_A5BD344F04624A5C8FA156B2625B3C0D">A partitioned region needs a cache
						loader in every region data store (<codeph>local-max-memory</codeph> &gt;
						0). </li>
					<li id="li_907F49CF642641F2ADED0DE349C8B560"><keyword keyref="product_name"/>
						distributes the data buckets as evenly as possible across all members
						storing the partitioned region data, within the limits of any custom
						partitioning or data colocation that you use. The number of buckets allotted
						for the partitioned region determines the granularity of data storage and
						thus how evenly the data can be distributed. The number of buckets is a
						total for the entire region across the distributed system. </li>
					<li id="li_08E36B0BF72E407881DF1211F494F68A">In rebalancing data for the region,
							<keyword keyref="product_name"/> moves buckets, but does not move data
						around inside the buckets. </li>
					<li id="li_67054EDC026845F8812F56C595FC5940">You can query partitioned regions,
						but there are certain limitations. See <xref
							href="../querying_basics/querying_partitioned_regions.xml"
							type="concept" format="dita" scope="local"/> for more information. </li>
				</ul>
		</section>
	</conbody>
</concept>
