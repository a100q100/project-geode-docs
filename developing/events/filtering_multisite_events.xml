<?xml version="1.0"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic
	id="topic_E97BB68748F14987916CD1A50E4B4542">
	<title>Filtering Events for Multi-Site (WAN) Distribution</title>
	<shortdesc>You can optionally create gateway sender and/or gateway receiver filters to control
		which events are queued and distributed to a remote site, or to modify the data stream that
		is transmitted between <keyword keyref="product_name"/> sites. </shortdesc>
	<body>
		<p>You can implement and deploy two different types of filter for
			multi-site events: </p>
			<ul
				id="ul_550709738F274B6E85316B892DE18DEF">
				<li id="li_919DDFEF5F2446CE9C289157927018C2"><codeph>GatewayEventFilter</codeph>. A
						<codeph>GatewayEventFilter</codeph> implementation determines whether a
					region event is placed in a gateway sender queue and/or whether an event in a
					gateway queue is distributed to a remote site. You can optionally add one or
					more <codeph>GatewayEventFilter</codeph> implementations to a gateway sender,
					etiher in the <codeph>cache.xml</codeph> configuration file or using the
					Java API. <p><keyword keyref="product_name"/> makes a synchronous call to the
						filter's <codeph>beforeEnqueue</codeph> method before it places a region
						event in the gateway sender queue. The filter returns a boolean value that
						specifies whether the event should be added to the queue. </p>
					<p><keyword keyref="product_name"/> asynchronously calls the filter's
							<codeph>beforeTransmit</codeph> method to determine whether the gateway
						sender dispatcher thread should distribute the event to a remote gateway
						receiver. </p>
					<p>For events that are distributed to another site, <keyword
							keyref="product_name"/> calls the listener's
							<codeph>afterAcknowledgement</codeph> method to indicate that is has
						received an ack from the remote site after the event was received. </p>
				</li>
				<li id="li_1867AB4313A144E7AD9F489110BE3A42">GatewayTransportFilter. Use a
						<codeph>GatewayTransportFilter</codeph> implementation to process the TCP
					stream that sends a batch of events that is distributed from one <keyword
						keyref="product_name"/> cluster to another over a WAN. A
						<codeph>GatewayTransportFilter</codeph> is typically used to perform
					encryption or compression on the data that distributed. You install the same
						<codeph>GatewayTransportFilter</codeph> implementation on both a gateway
					sender and gateway receiver. <p>When a gateway sender processes a batch of
						events for distribution, <keyword keyref="product_name"/> delivers the
						stream to the <codeph>getInputStream</codeph> method of a configured
							<codeph>GatewayTransportFilter</codeph> implementation. The filter
						processes and returns the stream, which is then transmitted to the gateway
						receiver. When the gateway receiver receives the batch, <keyword
							keyref="product_name"/> calls the <codeph>getOutputStream</codeph>
						method of a configured filter, which again processes and returns the stream
						so that the events can be applied in the local cluster. </p>
				</li>
			</ul>
		<section
			id="section_E20B4A8A98FD4EDAAA8C14B8059AA7F7">
			<title>Configuring Multi-Site Event Filters</title>
			<p>You install a <codeph>GatewayEventFilter</codeph> implementation
				to a configured gateway sender in order to decide which events
				are queued and distributed. You install a
					<codeph>GatewayTransportFilter</codeph> implementation to
				both a gateway sender and a gateway receiver to process the
				stream of batched events that are distributed between two sites: </p>
				<ul
					id="ul_7E1869577DD24D1D9C714C2A474C539C">
					<li
						id="li_10F187A1DCC4446394E2C953E43A19C6"><b>XML example</b>
						<codeblock>&lt;cache&gt;
  &lt;gateway-sender id="remoteA" parallel="true" remote-distributed-system-id="1"&gt; 
    &lt;gateway-event-filter&gt;
      &lt;class-name&gt;com.gemstone.gemfire.util.SampleEventFilter&lt;/class-name&gt;
      &lt;parameter name="param1"&gt;
        &lt;string&gt;"value1"&lt;/string&gt;
      &lt;/parameter&gt;
    &lt;/gateway-event-filter&gt;
    &lt;gateway-transport-filter&gt;
      &lt;class-name&gt;com.gemstone.gemfire.util.SampleTransportFilter&lt;/class-name&gt;
      &lt;parameter name="param1"&gt;
        &lt;string&gt;"value1"&lt;/string&gt;
      &lt;/parameter&gt;
    &lt;/gateway-transport-filter&gt;
  &lt;/gateway-sender&gt; 
&lt;/cache&gt;</codeblock>
						<codeblock>&lt;cache&gt;
  ...
  &lt;gateway-receiver start-port="1530" end-port="1551"&gt; 
    &lt;gateway-transport-filter&gt;
      &lt;class-name&gt;com.gemstone.gemfire.util.SampleTransportFilter&lt;/class-name&gt;
      &lt;parameter name="param1"&gt;
        &lt;string&gt;"value1"&lt;/string&gt;
      &lt;/parameter&gt;
    &lt;/gateway-transport-filter&gt;
  &lt;/gateway-receiver&gt;
&lt;/cache&gt;
</codeblock>
					</li>
					<li><b>gfsh
							example</b><codeblock>gfsh>create gateway-sender --id=remoteA --parallel=true --remote-distributed-id="1" 
--gateway-event-filter=com.gemstone.gemfire.util.SampleEventFilter 
--gateway-transport-filter=com.gemstone.gemfire.util.SampleTransportFilter</codeblock><p>See
								<xref
								href="../../tools_modules/gfsh/command-pages/create.xml#topic_hg2_bjz_ck"
							/>.</p><codeblock>gfsh>create gateway-receiver --start-port=1530 --end-port=1551 \
--gateway-transport-filter=com.gemstone.gemfire.util.SampleTransportFilter</codeblock>
						<note>
							<p>You
							cannot specify parameters and values for the Java class you specify with
							the <codeph>--gateway-transport-filter</codeph> option. 
							</p>
						</note>
						<p>See
								<xref
								href="../../tools_modules/gfsh/command-pages/create.xml#topic_a4x_pb1_dk"
							/>.</p></li>
					<li
						id="li_3F1D784F3E764CCCB12A56B56D5B410C"><b>API
							example</b>
						<codeblock>Cache cache = new CacheFactory().create();

GatewayEventFilter efilter = new SampleEventFilter();
GatewayTransportFilter tfilter = new SampleTransportFilter();

GatewaySenderFactory gateway = cache.createGatewaySenderFactory();
gateway.setParallel(true);
gateway.addGatewayEventFilter(efilter);
gateway.addTransportFilter(tfilter);
GatewaySender sender = gateway.create("remoteA", "1");
sender.start();
</codeblock>
						<codeblock>Cache cache = new CacheFactory().create();

GatewayTransportFilter tfilter = new SampleTransportFilter();

GatewayReceiverFactory gateway = cache.createGatewayReceiverFactory();
gateway.setStartPort(1530);
gateway.setEndPort(1551);
gateway.addTransportFilter(tfilter);
GatewayReceiver receiver = gateway.create();
receiver.start();
</codeblock>
					</li>
				</ul>
		</section>
	</body>
</topic>
