<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dita PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<dita>
	<topic id="statistics_list">
		<title><keyword keyref="product_name"/> Statistics List</title>
		<shortdesc>This section describes the primary statistics gathered by <keyword
				keyref="product_name"/> when statistics are enabled. </shortdesc>
		<body>
			<p>All statistics gathering requires the <codeph>gemfire.properties</codeph>
				<codeph>statistic-sampling-enabled</codeph> in <codeph>gemfire.properties</codeph>
				file to be true. Statistics that use time require the
					<codeph>gemfire.properties</codeph>
				<codeph>enable-time-statistics</codeph> to be true. </p>
			<p>Performance statistics are collected for each Java application or cache server that connects
				to a distributed system. </p>
		</body>
	</topic>
	<topic id="section_DEF8D3644D3246AB8F06FE09A37DC5C8">
		<title>Cache Performance (CachePerfStats)</title>
		<body>
			<p>Statistics for the <keyword keyref="product_name"/> cache. These can be used to
				determine the type and number of cache operations being performed and how much time
				they consume. </p>
			<p>Regarding <keyword keyref="product_name"/> cache transactions, transaction-related
				statistics are compiled and stored as properties in the CachePerfStats statistic
				resource. Because the transactionâ€™s data scope is the cache, these statistics are
				collected on a per-cache basis. </p>
			<p>The primary statistics are: </p>
				<table id="table_1698ABA974A9419B8AE4860C01BC8AFE">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>cacheListenerCallsCompleted</codeph>
								</entry>
								<entry>Total number of times a cache listener call has completed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>cacheListenerCallsInProgress</codeph>
								</entry>
								<entry>Current number of threads doing a cache listener call.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>cacheListenerCallTime</codeph>
								</entry>
								<entry>Total time spent doing cache listener calls. </entry>
							</row>
							<row>
								<entry>
									<codeph>cacheWriterCallsCompleted</codeph>
								</entry>
								<entry>Total number of times a cache writer call has completed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>cacheWriterCallsInProgress</codeph>
								</entry>
								<entry>Current number of threads doing a cache writer call. </entry>
							</row>
							<row>
								<entry>
									<codeph>cacheWriterCallTime</codeph>
								</entry>
								<entry>Total time spent doing cache writer calls. </entry>
							</row>
							<row>
								<entry><codeph>compressions</codeph></entry>
								<entry>Total number of compression operations.</entry>
							</row>
							<row>
								<entry><codeph>compressTime</codeph></entry>
								<entry>Total time, in nanoseconds, spent compressing data.</entry>
							</row>
							<row>
								<entry colname="1">
									<codeph>conflatedEvents</codeph>
								</entry>
								<entry colname="2">The number of events that were conflated, and not delivered to event
									listeners or gateway senders on this member. Events are
									typically conflated because a later event was already applied to
									the cache, or because a concurrent event was ignored to ensure
									cache consistency. Note that some members may discard an update
									while other members apply the update, depending on the order in
									which each member receives the update. For this reason, the
										<codeph>conflatedEvents</codeph> statistic will differ for
									each <keyword keyref="product_name"/> member. See <xref
										href="../../developing/distributed_regions/region_entry_versions.xml#topic_CF2798D3E12647F182C2CEC4A46E2045"
									/>. </entry>
							</row>
							<row>
								<entry>
									<codeph>creates</codeph>
								</entry>
								<entry>The total number of times an entry is added to this cache.
								</entry>
							</row>
							<row>
								<entry><codeph>decompressions</codeph></entry>
								<entry>Total number of decompression operations.</entry>
							</row>
							<row>
								<entry><codeph>decompressTime</codeph></entry>
								<entry>Total time, in nanoseconds, spent decompressing data.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>destroys</codeph>
								</entry>
								<entry>The total number of times a cache object entry has been
									destroyed in this cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventQueueSize</codeph>
								</entry>
								<entry>The number of cache events waiting to be processed. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventQueueThrottleCount</codeph>
								</entry>
								<entry>The total number of times a thread was delayed in adding an
									event to the event queue. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventQueueThrottleTime</codeph>
								</entry>
								<entry>The total amount of time, in nanoseconds, spent delayed by
									the event queue throttle. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventThreads</codeph>
								</entry>
								<entry>The number of threads currently processing events. </entry>
							</row>
							<row>
								<entry>
									<codeph>getInitialImageKeysReceived</codeph>
								</entry>
								<entry>Total number of keys received while doing getInitialImage
									operations. </entry>
							</row>
							<row>
								<entry>
									<codeph>getInitialImagesCompleted</codeph>
								</entry>
								<entry>Total number of times getInitialImages initiated by this
									cache have completed. </entry>
							</row>
							<row>
								<entry>
									<codeph>getInitialImagesInProgressDesc</codeph>
								</entry>
								<entry>Current number of getInitialImage operations currently in
									progress. </entry>
							</row>
							<row>
								<entry>
									<codeph>getInitialImageTime</codeph>
								</entry>
								<entry>Total time spent doing getInitialImages for region creation.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>getsDesc</codeph>
								</entry>
								<entry>The total number of times a successful get has been done on
									this cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>getTime</codeph>
								</entry>
								<entry>Total time spent doing get operations from this cache
									(including netsearch and netload). </entry>
							</row>
							<row>
								<entry>
									<codeph>invalidates</codeph>
								</entry>
								<entry>The total number of times an existing cache object entry
									value in this cache has been invalidated. </entry>
							</row>
							<row>
								<entry>
									<codeph>loadsCompleted</codeph>
								</entry>
								<entry>Total number of times a load on this cache has completed as a
									result of either a local get() or a remote netload. </entry>
							</row>
							<row>
								<entry>
									<codeph>loadsInProgress</codeph>
								</entry>
								<entry>Current number of threads in this cache doing a cache load.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>loadTime</codeph>
								</entry>
								<entry>Total time spent invoking loaders on this cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>misses</codeph>
								</entry>
								<entry>Total number of times a get on the cache did not find a value
									already in local memory. The number of hits (that is, gets that
									did not miss) can be calculated by subtracting misses from gets.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>netloadsCompleted</codeph>
								</entry>
								<entry>Total number of times a network load initiated on this cache
									has completed. </entry>
							</row>
							<row>
								<entry>
									<codeph>netloadsInProgress</codeph>
								</entry>
								<entry>Current number of threads doing a network load initiated by a
									get() in this cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>netloadTime</codeph>
								</entry>
								<entry>Total time spent doing network loads on this cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>netsearchesCompleted</codeph>
								</entry>
								<entry>Total number of times network searches initiated by this
									cache have completed. </entry>
							</row>
							<row>
								<entry>
									<codeph>netsearchesInProgress</codeph>
								</entry>
								<entry>Current number of threads doing a network search initiated by
									a get() in this cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>netsearchTimeDesc</codeph>
								</entry>
								<entry>Total time spent doing network searches for cache values.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>nonReplicatedTombstonesSize</codeph>
								</entry>
								<entry>The approximate number of bytes that are currently consumed by tombstones in
									non-replicated regions. See <xref
										href="../../developing/distributed_regions/region_entry_versions.xml#topic_CF2798D3E12647F182C2CEC4A46E2045"
									/>. </entry>
							</row>
							<row>
								<entry>
									<codeph>partitionedRegions</codeph>
								</entry>
								<entry>The current number of partitioned regions in the cache.
								</entry>
							</row>
							<row>
								<entry><codeph>postCompressedBytes</codeph></entry>
								<entry>Total number of bytes after compressing.</entry>
							</row>
							<row>
								<entry><codeph>preCompressedBytes</codeph></entry>
								<entry>Total number of bytes before compressing.</entry>
							</row>
							<row>
								<entry>
									<codeph>putAlls</codeph>
								</entry>
								<entry>The total number of times a map is added or replaced in this
									cache as a result of a local operation. Note, this only counts
									putAlls done explicitly on this cache; it does not count updates
									pushed from other caches. </entry>
							</row>
							<row>
								<entry>
									<codeph>putallTime</codeph>
								</entry>
								<entry>Total time spent replacing a map in this cache as a result of
									a local operation. This includes synchronizing on the map,
									invoking cache callbacks, sending messages to other caches and
									waiting for responses (if required). </entry>
							</row>
							<row>
								<entry>
									<codeph>puts</codeph>
								</entry>
								<entry>The total number of times an entry is added or replaced in
									this cache as a result of a local operation (put(), create(), or
									get() which results in load, netsearch, or netloading a value).
									Note, this only counts puts done explicitly on this cache; it
									does not count updates pushed from other caches. </entry>
							</row>
							<row>
								<entry>
									<codeph>putTime</codeph>
								</entry>
								<entry>Total time spent adding or replacing an entry in this cache
									as a result of a local operation. This includes synchronizing on
									the map, invoking cache callbacks, sending messages to other
									caches, and waiting for responses (if required). </entry>
							</row>
							<row>
								<entry>
									<codeph>queryExecutions</codeph>
								</entry>
								<entry>Total number of times some query has been executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>queryExecutionTime</codeph>
								</entry>
								<entry>Total time spent executing queries. </entry>
							</row>
							<row>
								<entry>
									<codeph>regions</codeph>
								</entry>
								<entry>The current number of regions in the cache. </entry>
							</row>

							<row>
								<entry>
									<codeph>replicatedTombstonesSize</codeph>
								</entry>
								<entry>The approximate number of bytes that are currently consumed by tombstones in
									replicated or partitioned regions. See <xref
										href="../../developing/distributed_regions/region_entry_versions.xml#topic_CF2798D3E12647F182C2CEC4A46E2045"
									/>. </entry>
							</row>
							<row>
								<entry>
									<codeph>tombstoneCount</codeph>
								</entry>
								<entry>The total number of tombstone entries created for performing concurrency checks. See
										<xref
										href="../../developing/distributed_regions/region_entry_versions.xml#topic_CF2798D3E12647F182C2CEC4A46E2045"
									/>. </entry>
							</row>
							<row>
								<entry>
									<codeph>tombstoneGCCount</codeph>
								</entry>
								<entry>The total number of tombstone garbage collection cycles that a member has performed.
									See <xref
										href="../../developing/distributed_regions/region_entry_versions.xml#topic_CF2798D3E12647F182C2CEC4A46E2045"
									/>. </entry>
							</row>
							<row>
								<entry>
									<codeph>txCommitChanges</codeph>
								</entry>
								<entry>Total number of changes made by committed transactions.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>txCommits</codeph>
								</entry>
								<entry>Total number of times a transaction commit has succeeded.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>txCommitTime</codeph>
								</entry>
								<entry>The total amount of time, in nanoseconds, spent doing
									successful transaction commits. </entry>
							</row>
							<row>
								<entry>
									<codeph>txConflictCheckTime</codeph>
								</entry>
								<entry>The total amount of time, in nanoseconds, spent doing
									conflict checks during transaction commit. </entry>
							</row>
							<row>
								<entry>
									<codeph>txFailedLifeTime</codeph>
								</entry>
								<entry>The total amount of time, in nanoseconds, spent in a
									transaction before a failed commit. The time measured starts at
									transaction begin and ends when commit is called. </entry>
							</row>
							<row>
								<entry>
									<codeph>txFailureChanges</codeph>
								</entry>
								<entry>Total number of changes lost by failed transactions. </entry>
							</row>
							<row>
								<entry>
									<codeph>txFailures</codeph>
								</entry>
								<entry>Total number of times a transaction commit has failed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>txFailureTime</codeph>
								</entry>
								<entry>The total amount of time, in nanoseconds, spent doing failed
									transaction commits. </entry>
							</row>
							<row>
								<entry>
									<codeph>txRollbackChanges</codeph>
								</entry>
								<entry>Total number of changes lost by explicit transaction
									rollbacks. </entry>
							</row>
							<row>
								<entry>
									<codeph>txRollbackLifeTime</codeph>
								</entry>
								<entry>The total amount of time, in nanoseconds, spent in a
									transaction before an explicit rollback. The time measured
									starts at transaction begin and ends when rollback is called.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>txRollbacks</codeph>
								</entry>
								<entry>Total number of times a transaction has been explicitly
									rolled back. </entry>
							</row>
							<row>
								<entry>
									<codeph>txRollbackTime</codeph>
								</entry>
								<entry>The total amount of time, in nanoseconds, spent doing
									explicit transaction rollbacks. </entry>
							</row>
							<row>
								<entry>
									<codeph>txSuccessLifeTime</codeph>
								</entry>
								<entry>The total amount of time, in nanoseconds, spent in a
									transaction before a successful commit. The time measured starts
									at transaction begin and ends when commit is called. </entry>
							</row>
							<row>
								<entry>
									<codeph>updates</codeph>
								</entry>
								<entry>The total number of updates originating remotely that have
									been applied to this cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>updateTime</codeph>
								</entry>
								<entry>Total time spent performing an update. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_EF5C2C59BFC74FFB8607F9571AB9A471">
		<title>Cache Server (CacheServerStats)</title>
		<body>
			<p>Statistics used for cache servers and for gateway receivers are recorded in
				CacheServerStats in a cache server. The primary statistics are: </p>
				<table id="table_61FF78F858D74ECBB1244D4B678AC0D2">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>abandonedReadRequests</codeph>
								</entry>
								<entry>Number of read operations (requests) abandoned by clients.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>abandonedWriteRequests</codeph>
								</entry>
								<entry>Number of write operations (requests) abandoned by clients.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>acceptsInProgress</codeph>
								</entry>
								<entry>Current number of server accepts that are attempting to do
									the initial handshake with the client. </entry>
							</row>
							<row>
								<entry>
									<codeph>acceptThreadStarts</codeph>
								</entry>
								<entry>Total number of threads created (starts) to deal with an
									accepted socket. Note, this is not the current number of
									threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>batchSize</codeph>
								</entry>
								<entry>The size (in bytes) of the batches received. </entry>
							</row>
							<row>
								<entry>
									<codeph>clearRegionRequests</codeph>
								</entry>
								<entry>Number of cache client operations clearRegion requests.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>clearRegionResponses</codeph>
								</entry>
								<entry>Number of clearRegion responses written to the cache client.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>clientNotificationRequests</codeph>
								</entry>
								<entry>Number of cache client operations notification requests.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>clientReadyRequests</codeph>
								</entry>
								<entry>Number of cache client ready requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>clientReadyResponses</codeph>
								</entry>
								<entry>Number of client ready responses written to the cache client.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>closeConnectionRequests</codeph>
								</entry>
								<entry>Number of cache client close connection operations requests.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>connectionLoad</codeph>
								</entry>
								<entry>The load from client to server connections as reported by the
									load probe installed in this server. </entry>
							</row>
							<row>
								<entry>
									<codeph>connectionsTimedOut</codeph>
								</entry>
								<entry>Total number of connections that have been timed out by the
									server because of client inactivity. </entry>
							</row>
							<row>
								<entry>
									<codeph>connectionThreads</codeph>
								</entry>
								<entry>Current number of threads dealing with a client connection.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>connectionThreadStarts</codeph>
								</entry>
								<entry>Total number of threads created (starts) to deal with a
									client connection. Note, this is not the current number of
									threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeyRequests</codeph>
								</entry>
								<entry>Number of cache client operations containsKey requests.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeyResponses</codeph>
								</entry>
								<entry>Number of containsKey responses written to the cache client.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>currentClientConnections</codeph>
								</entry>
								<entry>Number of sockets accepted. </entry>
							</row>
							<row>
								<entry>
									<codeph>currentClients</codeph>
								</entry>
								<entry>Number of client virtual machines (clients) connected.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRegionRequests</codeph>
								</entry>
								<entry>Number of cache client operations destroyRegion requests.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRegionResponses</codeph>
								</entry>
								<entry>Number of destroyRegion responses written to the cache
									client. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRequests</codeph>
								</entry>
								<entry>Number of cache client operations destroy requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyResponses</codeph>
								</entry>
								<entry>Number of destroy responses written to the cache client.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>failedConnectionAttempts</codeph>
								</entry>
								<entry>Number of failed connection attempts. </entry>
							</row>
							<row>
								<entry>
									<codeph>getRequests</codeph>
								</entry>
								<entry>Number of cache client operations get requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>getResponses</codeph>
								</entry>
								<entry>Number of getResponses written to the cache client. </entry>
							</row>
							<row>
								<entry>
									<codeph>loadPerConnection</codeph>
								</entry>
								<entry>The estimate of how much load i.s added for each new
									connection as reported by the load probe installed in this
									server. </entry>
							</row>
							<row>
								<entry>
									<codeph>loadPerQueue</codeph>
								</entry>
								<entry>The estimate of how much load would be added for each new
									subscription connection as reported by the load probe installed
									in this server. </entry>
							</row>
							<row>
								<entry>
									<codeph>messageBytesBeingReceived</codeph>
								</entry>
								<entry>Current number of bytes consumed by messages being received
									or processed. </entry>
							</row>
							<row>
								<entry>
									<codeph>messagesBeingReceived</codeph>
								</entry>
								<entry>Current number of messages being received off the network or
									being processed after reception. </entry>
							</row>
							<row>
								<entry>
									<codeph>outOfOrderGatewayBatchIds</codeph>
								</entry>
								<entry>Number of Out of Order batch IDs (batches). </entry>
							</row>
							<row>
								<entry>
									<codeph>processBatchRequests</codeph>
								</entry>
								<entry>Number of cache client operations processBatch requests.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>processBatchResponses</codeph>
								</entry>
								<entry>Number of processBatch responses written to the cache client.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>processBatchTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in processing a cache
									client processBatch request. </entry>
							</row>
							<row>
								<entry>
									<codeph>processClearRegionTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in processing a cache
									client clearRegion request, including the time to clear the
									region from the cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>processClientNotificationTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in processing a cache
									client notification request. </entry>
							</row>
							<row>
								<entry>
									<codeph>processClientReadyTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in processing a cache
									client ready request, including the time to destroy an object
									from the cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>processCloseConnectionTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in processing a cache
									client close connection request. </entry>
							</row>
							<row>
								<entry>
									<codeph>processContainsKeyTime</codeph>
								</entry>
								<entry>Total time spent, in nanoseconds, processing a containsKey
									request. </entry>
							</row>
							<row>
								<entry>
									<codeph>processDestroyRegionTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in processing a cache
									client destroyRegion request, including the time to destroy the
									region from the cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>processDestroyTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in processing a cache
									client destroy request, including the time to destroy an object
									from the cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>processGetTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in processing a cache
									client get request, including the time to get an object from the
									cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>processPutAllTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in processing a cache
									client putAll request, including the time to put all objects
									into the cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>processPutTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in processing a cache
									client put request, including the time to put an object into the
									cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>processQueryTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in processing a cache
									client query request, including the time to destroy an object
									from the cache. </entry>
							</row>
							<row>
								<entry>
									<codeph>processUpdateClientNotificationTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in processing a client
									notification update request. </entry>
							</row>
							<row>
								<entry>
									<codeph>putAllRequests</codeph>
								</entry>
								<entry>Number of cache client operations putAll requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>putAllResponses</codeph>
								</entry>
								<entry>Number of putAllResponses written to the cache client.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>putRequests</codeph>
								</entry>
								<entry>Number of cache client operations put requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>putResponses</codeph>
								</entry>
								<entry>Number of putResponses written to the cache client. </entry>
							</row>
							<row>
								<entry>
									<codeph>queryRequests</codeph>
								</entry>
								<entry>Number of cache client operations query requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>queryResponses</codeph>
								</entry>
								<entry>Number of query responses written to the cache client.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>queueLoad</codeph>
								</entry>
								<entry>The load from subscription queues as reported by the load
									probe installed in this server </entry>
							</row>
							<row>
								<entry>
									<codeph>readClearRegionRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in reading clearRegion
									requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>readClientNotificationRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in reading client
									notification requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>readClientReadyRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in reading cache client
									ready requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>readCloseConnectionRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in reading close connection
									requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>readContainsKeyRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent reading containsKey
									requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>readDestroyRegionRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in reading destroyRegion
									requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>readDestroyRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in reading destroy
									requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>readGetRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in reading get requests.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>readProcessBatchRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in reading processBatch
									requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>readPutAllRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in reading putAll requests.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>readPutRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in reading put requests.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>readQueryRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in reading query requests.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>readUpdateClientNotificationRequestTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in reading client
									notification update requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>receivedBytes</codeph>
								</entry>
								<entry>Total number of bytes received from clients. </entry>
							</row>
							<row>
								<entry>
									<codeph>sentBytes</codeph>
								</entry>
								<entry>Total number of bytes sent to clients. </entry>
							</row>
							<row>
								<entry>
									<codeph>threadQueueSize</codeph>
								</entry>
								<entry>Current number of connections waiting for a thread to start
									processing their message. </entry>
							</row>
							<row>
								<entry>
									<codeph>updateClientNotificationRequests</codeph>
								</entry>
								<entry>Number of cache client notification update requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>writeClearRegionResponseTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in writing clearRegion
									responses. </entry>
							</row>
							<row>
								<entry>
									<codeph>writeClientReadyResponseTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in writing client ready
									responses. </entry>
							</row>
							<row>
								<entry>
									<codeph>writeContainsKeyResponseTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent writing containsKey
									responses. </entry>
							</row>
							<row>
								<entry>
									<codeph>writeDestroyRegionResponseTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in writing destroyRegion
									responses. </entry>
							</row>
							<row>
								<entry>
									<codeph>writeDestroyResponseTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in writing destroy
									responses. </entry>
							</row>
							<row>
								<entry>
									<codeph>writeGetResponseTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in writing get responses.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>writeProcessBatchResponseTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in writing processBatch
									responses. </entry>
							</row>
							<row>
								<entry>
									<codeph>writePutAllResponseTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in writing putAll
									responses. </entry>
							</row>
							<row>
								<entry>
									<codeph>writePutResponseTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in writing put responses.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>writeQueryResponseTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent in writing query responses.
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_B08C0783BBF9489E8BB48B4AEC597C62">
		<title>Client-Side Notifications (CacheClientUpdaterStats)</title>
		<body>
			<p>Statistics in a client that pertain to server-to-client data pushed from the server
				over a queue to the client (they are the client side of the serverâ€™s
					<codeph>CacheClientNotifierStatistics</codeph>) : </p>
				<table id="table_5298856BF72E4091BE222CB32C828114">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>receivedBytes</codeph>
								</entry>
								<entry>Total number of bytes received from the server. </entry>
							</row>
							<row>
								<entry>
									<codeph>messagesBeingReceived</codeph>
								</entry>
								<entry>Current number of message being received off the network or
									being processed after reception. </entry>
							</row>
							<row>
								<entry>
									<codeph>messageBytesBeingReceived</codeph>
								</entry>
								<entry>Current number of bytes consumed by messages being received
									or processed. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_04B7D7387E584712B7710B5ED1E876BB">
		<title>Client-to-Server Messaging Performance (ClientStats)</title>
		<body>
			<p>These statistics are in a client and they describe all the messages sent from the
				client to a specific server. The primary statistics are: </p>
				<table id="table_EA530FCA5A7843B6BF4498F9E7907E29">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>clearFailures</codeph>
								</entry>
								<entry>Total number of clear attempts that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>clears</codeph>
								</entry>
								<entry>Total number of clears completed successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>clearSendFailures</codeph>
								</entry>
								<entry>Total number of clearSends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>clearSends</codeph>
								</entry>
								<entry>Total number of clearSends that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>clearSendsInProgress</codeph>
								</entry>
								<entry>Current number of clearSends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>clearSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing clearSends.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>clearsInProgress</codeph>
								</entry>
								<entry>Current number of clears being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>clearTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing clears.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>clearTimeouts</codeph>
								</entry>
								<entry>Total number of clear attempts that have timed out. </entry>
							</row>
							<row>
								<entry>
									<codeph>closeConFailures</codeph>
								</entry>
								<entry>Total number of closeCon attempts that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>closeCons</codeph>
								</entry>
								<entry>Total number of closeCons that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>closeConSendFailures</codeph>
								</entry>
								<entry>Total number of closeConSends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>closeConSends</codeph>
								</entry>
								<entry>Total number of closeConSends that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>closeConSendsInProgress</codeph>
								</entry>
								<entry>Current number of closeConSends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>closeConSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									closeConSends. </entry>
							</row>
							<row>
								<entry>
									<codeph>closeConsInProgress</codeph>
								</entry>
								<entry>Current number of closeCons being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>closeConTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing closeCons.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>closeConTimeouts</codeph>
								</entry>
								<entry>Total number of closeCon attempts that have timed out.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>connections</codeph>
								</entry>
								<entry>Current number of connections. </entry>
							</row>
							<row>
								<entry>
									<codeph>connects</codeph>
								</entry>
								<entry>Total number of times a connection has been created. </entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeyFailures</codeph>
								</entry>
								<entry>Total number of containsKey attempts that have failed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeys</codeph>
								</entry>
								<entry>Total number of containsKeys that completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeySendFailures</codeph>
								</entry>
								<entry>Total number of containsKeySends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeySends</codeph>
								</entry>
								<entry>Total number of containsKeySends that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeySendsInProgress</codeph>
								</entry>
								<entry>Current number of containsKeySends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeySendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									containsKeyends. </entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeysInProgress</codeph>
								</entry>
								<entry>Current number of containsKeys being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeyTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									containsKeys. </entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeyTimeouts</codeph>
								</entry>
								<entry>Total number of containsKey attempts that have timed out.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>destroyFailures</codeph>
								</entry>
								<entry>Total number of destroy attempts that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRegionFailures</codeph>
								</entry>
								<entry>Total number of destroyRegion attempts that have failed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRegions</codeph>
								</entry>
								<entry>Total number of destroyRegions that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRegionSendFailures</codeph>
								</entry>
								<entry>Total number of destroyRegionSends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRegionSends</codeph>
								</entry>
								<entry>Total number of destroyRegionSends that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRegionSendsInProgress</codeph>
								</entry>
								<entry>Current number of destroyRegionSends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRegionSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									destroyRegionSends. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRegionsInProgress</codeph>
								</entry>
								<entry>Current number of destroyRegions being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRegionTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									destroyRegions. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRegionTimeouts</codeph>
								</entry>
								<entry>Total number of destroyRegion attempts that have timed out.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>destroys</codeph>
								</entry>
								<entry>Total number of destroys that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>destroySendFailures</codeph>
								</entry>
								<entry>Total number of destroySends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroySends</codeph>
								</entry>
								<entry>Total number of destroySends that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroySendsInProgress</codeph>
								</entry>
								<entry>Current number of destroySends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroySendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									destroySends. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroysInProgress</codeph>
								</entry>
								<entry>Current number of destroys being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing destroys.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>destroyTimeouts</codeph>
								</entry>
								<entry>Total number of destroy attempts that have timed out.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>disconnects</codeph>
								</entry>
								<entry>Total number of times a connection has been destroyed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>gatewayBatchFailures</codeph>
								</entry>
								<entry>Total number of gatewayBatch attempts that have failed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>gatewayBatchs</codeph>
								</entry>
								<entry>Total number of gatewayBatchs completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>gatewayBatchSendFailures</codeph>
								</entry>
								<entry>Total number of gatewayBatchSends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>gatewayBatchSends</codeph>
								</entry>
								<entry>Total number of gatewayBatchSends that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>gatewayBatchSendsInProgress</codeph>
								</entry>
								<entry>Current number of gatewayBatchSends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>gatewayBatchSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									gatewayBatchSends. </entry>
							</row>
							<row>
								<entry>
									<codeph>gatewayBatchsInProgress</codeph>
								</entry>
								<entry>Current number of gatewayBatchs being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>gatewayBatchTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									gatewayBatchs. </entry>
							</row>
							<row>
								<entry>
									<codeph>gatewayBatchTimeouts</codeph>
								</entry>
								<entry>Total number of gatewayBatch attempts that have timed out.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>getAllFailures</codeph>
								</entry>
								<entry>Total number of getAll attempts that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>getAlls</codeph>
								</entry>
								<entry>Total number of getAlls that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>getAllSendFailures</codeph>
								</entry>
								<entry>Total number of getAllSends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>getAllSends</codeph>
								</entry>
								<entry>Total number of getAllSends that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>getAllSendsInProgress</codeph>
								</entry>
								<entry>Current number of getAllSends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>getAllSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									getAllSends. </entry>
							</row>
							<row>
								<entry>
									<codeph>getAllsInProgress</codeph>
								</entry>
								<entry>Current number of getAlls being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>getAllTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing getAlls.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>getAllTimeouts</codeph>
								</entry>
								<entry>Total number of getAll attempts that have timed out. </entry>
							</row>
							<row>
								<entry>
									<codeph>getFailures</codeph>
								</entry>
								<entry>Total number of get attempts that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>gets</codeph>
								</entry>
								<entry>Total number of gets that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>getSendFailures</codeph>
								</entry>
								<entry>Total number of getSends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>getSends</codeph>
								</entry>
								<entry>Total number of getSends that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>getSendsInProgress</codeph>
								</entry>
								<entry>Current number of getSends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>getSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing getSends.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>getsInProgress</codeph>
								</entry>
								<entry>Current number of gets being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>getTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing gets.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>getTimeouts</codeph>
								</entry>
								<entry>Total number of get attempts that have timed out. </entry>
							</row>
							<row>
								<entry>
									<codeph>keySetFailures</codeph>
								</entry>
								<entry>Total number of keySet attempts that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>keySets</codeph>
								</entry>
								<entry>Total number of keySets that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>keySetSendFailures</codeph>
								</entry>
								<entry>Total number of keySetSends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>keySetSends</codeph>
								</entry>
								<entry>Total number of keySetSends that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>keySetSendsInProgress</codeph>
								</entry>
								<entry>Current number of keySetSends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>keySetSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									keySetSends. </entry>
							</row>
							<row>
								<entry>
									<codeph>keySetsInProgress</codeph>
								</entry>
								<entry>Current number of keySets being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>keySetTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing keySets.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>keySetTimeouts</codeph>
								</entry>
								<entry>Total number of keySet attempts that have timed out. </entry>
							</row>
							<row>
								<entry>
									<codeph>makePrimaryFailures</codeph>
								</entry>
								<entry>Total number of makePrimary attempts that have failed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>makePrimarys</codeph>
								</entry>
								<entry>Total number of makePrimarys that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>makePrimarySendFailures</codeph>
								</entry>
								<entry>Total number of makePrimarySends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>makePrimarySends</codeph>
								</entry>
								<entry>Total number of makePrimarySends that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>makePrimarySendsInProgress</codeph>
								</entry>
								<entry>Current number of makePrimarySends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>makePrimarySendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									makePrimarySends. </entry>
							</row>
							<row>
								<entry>
									<codeph>makePrimarysInProgress</codeph>
								</entry>
								<entry>Current number of makePrimarys being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>makePrimaryTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									makePrimarys. </entry>
							</row>
							<row>
								<entry>
									<codeph>makePrimaryTimeouts</codeph>
								</entry>
								<entry>Total number of makePrimary attempts that have timed out.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>messageBytesBeingReceived</codeph>
								</entry>
								<entry>Current number of bytes consumed by messages being received
									or processed. </entry>
							</row>
							<row>
								<entry>
									<codeph>messagesBeingReceived</codeph>
								</entry>
								<entry>Current number of messages being received off the network or
									being processed after reception. </entry>
							</row>
							<row>
								<entry>
									<codeph>opFailures</codeph>
								</entry>
								<entry>Total number of op attempts that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>ops</codeph>
								</entry>
								<entry>Total number of ops that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>opSendFailures</codeph>
								</entry>
								<entry>Total number of opSends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>opSends</codeph>
								</entry>
								<entry>Total number of opSends that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>opSendsInProgress</codeph>
								</entry>
								<entry>Current number of opSends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>opSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing opSends.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>opsInProgress</codeph>
								</entry>
								<entry>Current number of ops being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>opTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing ops.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>opTimeouts</codeph>
								</entry>
								<entry>Total number of op attempts that have timed out. </entry>
							</row>
							<row>
								<entry>
									<codeph>pingFailures</codeph>
								</entry>
								<entry>Total number of ping attempts that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>pings</codeph>
								</entry>
								<entry>Total number of pings that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>pingSendFailures</codeph>
								</entry>
								<entry>Total number of pingSends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>pingSends</codeph>
								</entry>
								<entry>Total number of pingSends that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>pingSendsInProgress</codeph>
								</entry>
								<entry>Current number of pingSends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>pingSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing pingSends.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>pingsInProgress</codeph>
								</entry>
								<entry>Current number of pings being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>pingTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing pings.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>pingTimeouts</codeph>
								</entry>
								<entry>Total number of ping attempts that have timed out. </entry>
							</row>
							<row>
								<entry>
									<codeph>primaryAckFailures</codeph>
								</entry>
								<entry>Total number of primaryAck attempts that have failed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>primaryAcks</codeph>
								</entry>
								<entry>Total number of primaryAcks that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>primaryAckSendFailures</codeph>
								</entry>
								<entry>Total number of primaryAckSends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>primaryAckSends</codeph>
								</entry>
								<entry>Total number of primaryAckSends that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>primaryAckSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									primaryAckSends. </entry>
							</row>
							<row>
								<entry>
									<codeph>primaryAcksInProgress</codeph>
								</entry>
								<entry>Current number of primaryAcks being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>primaryAckTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									primaryAcks. </entry>
							</row>
							<row>
								<entry>
									<codeph>primaryAckTimeouts</codeph>
								</entry>
								<entry>Total number of primaryAck attempts that have timed out.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>putAllFailures</codeph>
								</entry>
								<entry>Total number of putAll attempts that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>putAlls</codeph>
								</entry>
								<entry>Total number of putAlls that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>putAllSendFailures</codeph>
								</entry>
								<entry>Total number of putAllSends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>putAllSends</codeph>
								</entry>
								<entry>Total number of putAllSends that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>putAllSendsInProgress</codeph>
								</entry>
								<entry>Current number of putAllSends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>putAllSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									putAllSends. </entry>
							</row>
							<row>
								<entry>
									<codeph>putAllsInProgress</codeph>
								</entry>
								<entry>Current number of putAlls being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>putAllTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing putAlls.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>putAllTimeouts</codeph>
								</entry>
								<entry>Total number of putAll attempts that have timed out. </entry>
							</row>
							<row>
								<entry>
									<codeph>putFailures</codeph>
								</entry>
								<entry>Total number of put attempts that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>puts</codeph>
								</entry>
								<entry>Total number of puts that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>putSendFailures</codeph>
								</entry>
								<entry>Total number of putSends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>putSends</codeph>
								</entry>
								<entry>Total number of putSends that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>putSendsInProgress</codeph>
								</entry>
								<entry>Current number of putSends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>putSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing putSends.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>putsInProgress</codeph>
								</entry>
								<entry>Current number of puts being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>putTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing puts.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>putTimeouts</codeph>
								</entry>
								<entry>Total number of put attempts that have timed out. </entry>
							</row>
							<row>
								<entry>
									<codeph>queryFailures</codeph>
								</entry>
								<entry>Total number of query attempts that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>querys</codeph>
								</entry>
								<entry>Total number of querys completed successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>querySendFailures</codeph>
								</entry>
								<entry>Total number of querySends that have failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>querySends</codeph>
								</entry>
								<entry>Total number of querySends that have completed successfully.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>querySendsInProgress</codeph>
								</entry>
								<entry>Current number of querySends being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>querySendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing querySends.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>querysInProgress</codeph>
								</entry>
								<entry>Current number of querys being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>queryTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds. spent doing querys.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>queryTimeouts</codeph>
								</entry>
								<entry>Total number of query attempts that have timed out. </entry>
							</row>
							<row>
								<entry>
									<codeph>readyForEvents</codeph>
								</entry>
								<entry>Total number of readyForEventss that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>readyForEventsFailures</codeph>
								</entry>
								<entry>Total number of readyForEvents attempts that have failed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>readyForEventsInProgress</codeph>
								</entry>
								<entry>Current number of readyForEventss being executed </entry>
							</row>
							<row>
								<entry>
									<codeph>readyForEventsSendFailures</codeph>
								</entry>
								<entry>Total number of readyForEventsSends that have failed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>readyForEventsSends</codeph>
								</entry>
								<entry>Total number of readyForEventsSends that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>readyForEventsSendsInProgress</codeph>
								</entry>
								<entry>Current number of readyForEventsSends being executed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>readyForEventsSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									readyForEventsSends. </entry>
							</row>
							<row>
								<entry>
									<codeph>readyForEventsTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									readyForEvents. </entry>
							</row>
							<row>
								<entry>
									<codeph>readyForEventsTimeouts</codeph>
								</entry>
								<entry>Total number of readyForEvents attempts that have timed out.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>receivedBytes</codeph>
								</entry>
								<entry>Total number of bytes received from the server. </entry>
							</row>
							<row>
								<entry>
									<codeph>registerInstantiators</codeph>
								</entry>
								<entry>Total number of registerInstantiators completed successfully
								</entry>
							</row>
							<row>
								<entry>
									<codeph>registerInstantiatorsFailures</codeph>
								</entry>
								<entry>Total number of registerInstantiators attempts that have
									failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>registerInstantiatorsSendFailures</codeph>
								</entry>
								<entry>Total number of registerInstantiators sends that have failed
								</entry>
							</row>
							<row>
								<entry>
									<codeph>registerInstantiatorsSends</codeph>
								</entry>
								<entry>Total number of registerInstantiators sends that have
									completed successfully </entry>
							</row>
							<row>
								<entry>
									<codeph>registerInstantiatorsSendsInProgress</codeph>
								</entry>
								<entry>Current number of registerInstantiators sends being executed
								</entry>
							</row>
							<row>
								<entry>
									<codeph>registerInstantiatorsSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									registerInstantiatorsSends. </entry>
							</row>
							<row>
								<entry>
									<codeph>registerInstantiatorssInProgress</codeph>
								</entry>
								<entry>Current number of registerInstantiators being executed
								</entry>
							</row>
							<row>
								<entry>
									<codeph>registerInstantiatorsTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									registerInstantiators. </entry>
							</row>
							<row>
								<entry>
									<codeph>registerInstantiatorsTimeouts</codeph>
								</entry>
								<entry>Total number of registerInstantiators attempts that have
									timed out. </entry>
							</row>
							<row>
								<entry>
									<codeph>registerInterestFailures</codeph>
								</entry>
								<entry>Total number of registerInterest attempts that have failed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>registerInterests</codeph>
								</entry>
								<entry>Total number of registerInterests that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>registerInterestSendFailures</codeph>
								</entry>
								<entry>Total number of registerInterestSends that have failed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>registerInterestSends</codeph>
								</entry>
								<entry>Total number of registerInterestSends that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>registerInterestSendsInProgress</codeph>
								</entry>
								<entry>Current number of registerInterestSends being executed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>registerInterestSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									registerInterestSends. </entry>
							</row>
							<row>
								<entry>
									<codeph>registerInterestsInProgress</codeph>
								</entry>
								<entry>Current number of registerInterests being executed. </entry>
							</row>
							<row>
								<entry>
									<codeph>registerInterestTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									registerInterests. </entry>
							</row>
							<row>
								<entry>
									<codeph>registerInterestTimeouts</codeph>
								</entry>
								<entry>Total number of registerInterest attempts that have timed
									out. </entry>
							</row>
							<row>
								<entry>
									<codeph>sentBytes</codeph>
								</entry>
								<entry>Total number of bytes sent to the server. </entry>
							</row>
							<row>
								<entry>
									<codeph>unregisterInterestFailures</codeph>
								</entry>
								<entry>Total number of unregisterInterest attempts that have failed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>unregisterInterests</codeph>
								</entry>
								<entry>Total number of unregisterInterests that have completed
									successfully </entry>
							</row>
							<row>
								<entry>
									<codeph>unregisterInterestSendFailures</codeph>
								</entry>
								<entry>Total number of unregisterInterestSends that have failed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>unregisterInterestSends</codeph>
								</entry>
								<entry>Total number of unregisterInterestSends that have completed
									successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>unregisterInterestSendsInProgress</codeph>
								</entry>
								<entry>Current number of unregisterInterestSends being executed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>unregisterInterestSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									unregisterInterestSends. </entry>
							</row>
							<row>
								<entry>
									<codeph>unregisterInterestsInProgress</codeph>
								</entry>
								<entry>Current number of unregisterInterests being executed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>unregisterInterestTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									unregisterInterests. </entry>
							</row>
							<row>
								<entry>
									<codeph>unregisterInterestTimeouts</codeph>
								</entry>
								<entry>Total number of unregisterInterest attempts that have timed
									out. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_6C247F61DB834C079A16BE92789D4692">
		<title>Client Connection Pool (PoolStats)</title>
		<body>
			<p>These statistics are in a client and they describe one of the clientâ€™s connection
				pools. The primary statistics are: </p>
				<table id="table_0330392DC2E24F64894616A57E0070CE">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>connections</codeph>
								</entry>
								<entry>Current number of connections. </entry>
							</row>
							<row>
								<entry>
									<codeph>connectionWaits</codeph>
								</entry>
								<entry>Total number of times a thread completed waiting for a
									connection (either by timing out or by getting a connection).
								</entry>
							</row>
							<row>
								<entry>
									<codeph>connectionWaitsInProgress</codeph>
								</entry>
								<entry>Current number of threads waiting for a connection. </entry>
							</row>
							<row>
								<entry>
									<codeph>connectionWaitTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent waiting for a connection.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>connects</codeph>
								</entry>
								<entry>Total number of times a connection has been created. </entry>
							</row>
							<row>
								<entry>
									<codeph>disconnects</codeph>
								</entry>
								<entry>Total number of times a connection has been destroyed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>ENDPOINTS_KNOWN</codeph>
								</entry>
								<entry>Current number of servers discovered. </entry>
							</row>
							<row>
								<entry>
									<codeph>idleChecks</codeph>
								</entry>
								<entry>Total number of checks done for idle expiration. </entry>
							</row>
							<row>
								<entry>
									<codeph>idleDisconnects</codeph>
								</entry>
								<entry>Total number of disconnects done due to idle expiration.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>INITIAL_CONTACTS</codeph>
								</entry>
								<entry>Number of contacts initially made the user. </entry>
							</row>
							<row>
								<entry>
									<codeph>KNOWN_LOCATORS</codeph>
								</entry>
								<entry>Current number of locators discovered. </entry>
							</row>
							<row>
								<entry>
									<codeph>lifetimeChecks</codeph>
								</entry>
								<entry>Total number of checks done for lifetime expiration. </entry>
							</row>
							<row>
								<entry>
									<codeph>lifetimeConnects</codeph>
								</entry>
								<entry>Total number of connects done due to lifetime expiration.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>lifetimeDisconnects</codeph>
								</entry>
								<entry>Total number of disconnects done due to lifetime expiration.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>lifetimeExtensions</codeph>
								</entry>
								<entry>Total number of times a connection's lifetime has been
									extended because the servers are still balanced. </entry>
							</row>
							<row>
								<entry>
									<codeph>minPoolSizeConnects</codeph>
								</entry>
								<entry>Total number of connects done to maintain minimum pool size.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>QUEUE_SERVERS</codeph>
								</entry>
								<entry>Number of servers hosting this client.s subscription queue.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>REQUESTS_TO_LOCATOR</codeph>
								</entry>
								<entry>Number of requests from this connection pool to a locator.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>RESPONSES_FROM_LOCATOR</codeph>
								</entry>
								<entry>Number of responses from the locator to this connection pool.
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
<!--   new table starts here -->
	<topic id="section_66C0E7748501480B85209D57D24256D5">
		<title>Continuous Querying (CQStatistics)</title>
		<body>
			<p>These statistics are for continuous querying information. The statistics are: </p>
				<table id="table_DF7B9921C2B0440A95AE6B0D042490F9">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>CQS_CREATED</codeph>
								</entry>
								<entry>Number of CQ operations created. </entry>
							</row>
							<row>
								<entry>
									<codeph>CQS_ACTIVE</codeph>
								</entry>
								<entry>Number of CQ operations actively executing. </entry>
							</row>
							<row>
								<entry>
									<codeph>CQS_STOPPED</codeph>
								</entry>
								<entry>Number of CQ operations stopped. </entry>
							</row>
							<row>
								<entry>
									<codeph>CQS_CLOSED</codeph>
								</entry>
								<entry>Number of CQ operations closed. </entry>
							</row>
							<row>
								<entry>
									<codeph>CQS_ON_CLIENT</codeph>
								</entry>
								<entry>Number of CQ operations on the client. </entry>
							</row>
							<row>
								<entry>
									<codeph>CLIENTS_WITH_CQS</codeph>
								</entry>
								<entry>Number of Clients with CQ operations. </entry>
							</row>
							<row>
								<entry>
									<codeph>CQ_QUERY_EXECUTION_TIME</codeph>
								</entry>
								<entry>Time taken, in nanoseconds, for CQ query execution. </entry>
							</row>
							<row>
								<entry>
									<codeph>CQ_QUERY_EXECUTIONS_COMPLETED</codeph>
								</entry>
								<entry>Number of CQ query executions operations. </entry>
							</row>
							<row>
								<entry>
									<codeph>CQ_QUERY_EXECUTION_IN_PROGRESS</codeph>
								</entry>
								<entry>CQ Query execution operations in progress. </entry>
							</row>
							<row>
								<entry>
									<codeph>UNIQUE_CQ_QUERY</codeph>
								</entry>
								<entry>Number of unique CQ queries. </entry>
							</row>
							<row>
								<entry>
									<codeph>closeCQFailures</codeph>
								</entry>
								<entry>Total number of closeCQ attempts that have failed. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>closeCQs</codeph>
								</entry>
								<entry>Total number of closeCQs that have completed successfully.  For client-to-server messaging performance. 
								</entry>
							</row>
							<row>
								<entry>
									<codeph>closeCQSendFailures</codeph>
								</entry>
								<entry>Total number of closeCQSends that have failed. For client-to-server messaging performance.  </entry>
							</row>
							<row>
								<entry>
									<codeph>closeCQSends</codeph>
								</entry>
								<entry>Total number of closeCQSends that have completed
									successfully. For client-to-server messaging performance.  </entry>
							</row>
							<row>
								<entry>
									<codeph>closeCQSendsInProgress</codeph>
								</entry>
								<entry>Current number of closeCQSends being executed. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>closeCQSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									closeCQSends. For client-to-server messaging performance.  </entry>
							</row>
							<row>
								<entry>
									<codeph>closeCQsInProgress</codeph>
								</entry>
								<entry>Current number of closeCQs being executed. For client-to-server messaging performance.  </entry>
							</row>
							<row>
								<entry>
									<codeph>closeCQTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing closeCQs. For client-to-server messaging performance. 
								</entry>
							</row>
							<row>
								<entry>
									<codeph>closeCQTimeouts</codeph>
								</entry>
								<entry>Total number of closeCQ attempts that have timed out. For client-to-server messaging performance. 
								</entry>
							</row>
							<row>
								<entry>
									<codeph>createCQFailures</codeph>
								</entry>
								<entry>Total number of createCQ attempts that have failed. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>createCQs</codeph>
								</entry>
								<entry>Total number of createCQs that have completed successfully. For client-to-server messaging performance.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>createCQSendFailures</codeph>
								</entry>
								<entry>Total number of createCQSends that have failed. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>createCQSends</codeph>
								</entry>
								<entry>Total number of createCQSends that have completed
									successfully. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>createCQSendsInProgress</codeph>
								</entry>
								<entry>Current number of createCQSends being executed. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>createCQSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									createCQSends. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>createCQsInProgress</codeph>
								</entry>
								<entry>Current number of createCQs being executed. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>createCQTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing createCQs. For client-to-server messaging performance.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>createCQTimeouts</codeph>
								</entry>
								<entry>Total number of createCQ attempts that have timed out. For client-to-server messaging performance.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>stopCQFailures</codeph>
								</entry>
								<entry>Total number of stopCQ attempts that have failed. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>stopCQs</codeph>
								</entry>
								<entry>Total number of stopCQs that have completed successfully. For client-to-server messaging performance.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>stopCQSendFailures</codeph>
								</entry>
								<entry>Total number of stopCQSends that have failed. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>stopCQSends</codeph>
								</entry>
								<entry>Total number of stopCQSends that have completed successfully. For client-to-server messaging performance.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>stopCQSendsInProgress</codeph>
								</entry>
								<entry>Current number of stopCQSends being executed. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>stopCQSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing
									stopCQSends. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>stopCQsInProgress</codeph>
								</entry>
								<entry>Current number of stopCQs being executed. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>stopCQTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing stopCQs. For client-to-server messaging performance.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>stopCQTimeouts</codeph>
								</entry>
								<entry>Total number of stopCQ attempts that have timed out. For client-to-server messaging performance. </entry>
							</row>
							<row>
								<entry>
									<codeph>cqCount</codeph>
								</entry>
								<entry>Number of CQs operations on the client. For server notification to a single client. </entry>
							</row>
							<row>
								<entry>
									<codeph>cqProcessingTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent by the cache client
									notifier processing CQs. For server notification to all clients. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
<!--   new table ends here -->
	<topic id="section_D4ABED3FF94245C0BEE0F6FC9481E867">
		<title>Delta Propagation (DeltaPropagationStatistics)</title>
		<body>
			<p>These statistics are for delta propagation between members. The primary statistics
				are: </p>
				<table id="table_9768796345CA4DF6947D7DD548928CFE">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>deltaFullValuePuts</codeph>
								</entry>
								<entry>Total number of full value puts processed successfully in
									response to failed delta puts. </entry>
							</row>
							<row>
								<entry>
									<codeph>deltaFullValueRequests</codeph>
								</entry>
								<entry>Number of full value requests received from a client after
									failing to apply delta and processed successfully by this
									server. </entry>
							</row>
							<row>
								<entry>
									<codeph>deltaMessageFailures</codeph>
								</entry>
								<entry>The number of distribution messages containing delta that
									could not be processed at receiving side. </entry>
							</row>
							<row>
								<entry>
									<codeph>deltaMessageFailures</codeph>
								</entry>
								<entry>Current number of delta messages received but could not be
									processed after reception. </entry>
							</row>
							<row>
								<entry>
									<codeph>deltaPutFailures</codeph>
								</entry>
								<entry>Number of failures encountered while processing delta
									received from a client on this server. </entry>
							</row>
							<row>
								<entry>
									<codeph>deltaPuts</codeph>
								</entry>
								<entry>Total number of puts containing delta. </entry>
							</row>
							<row>
								<entry>
									<codeph>deltaPutsTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent constructing
									delta part of puts. </entry>
							</row>
							<row>
								<entry>
									<codeph>fullDeltaMessages</codeph>
								</entry>
								<entry>Current number of full value delta messages received off
									network and processed after reception. </entry>
							</row>
							<row>
								<entry>
									<codeph>fullDeltaRequests</codeph>
								</entry>
								<entry>Number of full value requests made by this server to the
									sender client after failing to apply delta. </entry>
							</row>
							<row>
								<entry>
									<codeph>fullValueDeltaMessagesRequested</codeph>
								</entry>
								<entry>The number of distribution messages containing full value
									requested by this <keyword keyref="product_name"/> system after
									failing to apply received delta. </entry>
							</row>
							<row>
								<entry>
									<codeph>fullValueDeltaMessagesSent</codeph>
								</entry>
								<entry>The number of distribution messages sent in response to full
									value requests by a remote <keyword keyref="product_name"/>
									System as a result of failure in applying delta. </entry>
							</row>
							<row>
								<entry>
									<codeph>partitionMessagesWithDeltaFailures</codeph>
								</entry>
								<entry>Number of failures while processing PartitionMessages
									containing delta. </entry>
							</row>
							<row>
								<entry>
									<codeph>partitionMessagesWithDeltaProcessed</codeph>
								</entry>
								<entry>Number of PartitionMessages containing delta processed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>partitionMessagesWithDeltaProcessedTime</codeph>
								</entry>
								<entry>Total time spent applying deltas. </entry>
							</row>
							<row>
								<entry>
									<codeph>partitionMessagesWithDeltaSent</codeph>
								</entry>
								<entry>Number of PartitionMessages containing delta sent. </entry>
							</row>
							<row>
								<entry>
									<codeph>partitionMessagesWithDeltaSentTime</codeph>
								</entry>
								<entry>Total time spent extractng deltas. </entry>
							</row>
							<row>
								<entry>
									<codeph>partitionMessagesWithFullValueDeltaRequested</codeph>
								</entry>
								<entry>Number of requests for PartitionMessages containing full
									delta value as a result of failure in applying delta. </entry>
							</row>
							<row>
								<entry>
									<codeph>partitionMessagesWithFullValueDeltaSent</codeph>
								</entry>
								<entry>Number of PartitionMessages containing full delta value sent.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>preparedDeltaMessages</codeph>
								</entry>
								<entry>The number of distribution messages containing delta that
									this <keyword keyref="product_name"/> system has prepared for
									distribution. </entry>
							</row>
							<row>
								<entry>
									<codeph>preparedDeltaMessages</codeph>
								</entry>
								<entry>Number of client messages being prepared for dispatch, which
									have delta part in them. </entry>
							</row>
							<row>
								<entry>
									<codeph>preparedDeltaMessagesTime</codeph>
								</entry>
								<entry>The total amount of time this distribution manager has spent
									preparing delta parts of messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>processedDeltaMessages</codeph>
								</entry>
								<entry>The number of distribution messages containing delta that
									this <keyword keyref="product_name"/> system has processed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>processedDeltaMessages</codeph>
								</entry>
								<entry>Current number of delta messages received off network and
									processed after reception. </entry>
							</row>
							<row>
								<entry>
									<codeph>processedDeltaMessagesTime</codeph>
								</entry>
								<entry>The amount of time this distribution manager has spent in
									applying delta on its existing value. </entry>
							</row>
							<row>
								<entry>
									<codeph>processedDeltaMessagesTime</codeph>
								</entry>
								<entry>Total time spent applying received delta parts on existing
									messages at clients. </entry>
							</row>
							<row>
								<entry>
									<codeph>processedDeltaPuts</codeph>
								</entry>
								<entry>Number of cache client put requests containing delta received
									from a client and processed successfuly. </entry>
							</row>
							<row>
								<entry>
									<codeph>processedDeltaPutsTime</codeph>
								</entry>
								<entry>Total time spent in applying delta received from a client on
									existing value in this server's region. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_6C2BECC63A83456190B029DEDB8F4BE3">
		<title>Disk Space Usage (DiskDirStatistics)</title>
		<body>
			<p>These statistics pertain to the disk usage for a regionâ€™s disk directory. The primary
				statistics are: </p>
				<table id="table_5A7A88EA731B4B758FBBEF4555CCE3EE">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>diskSpace</codeph>
								</entry>
								<entry>The total number of bytes currently being used on disk in
									this directory for oplog files. </entry>
							</row>
							<row>
								<entry>
									<codeph>maximumSpace</codeph>
								</entry>
								<entry>The configured maximum number of bytes allowed in this
									directory for oplog files. Note that some product configurations
									allow this maximum to be exceeded.</entry>
							</row>
							<row>
								<entry>
									<codeph>volumeFreeSpace</codeph>
								</entry>
								<entry>The total free space in bytes on the disk volume.</entry>
							</row>
							<row>
								<entry>
									<codeph>volumeFreeSpaceChecks</codeph>
								</entry>
								<entry>The total number of disk space checks.</entry>
							</row>
							<row>
								<entry>
									<codeph>volumeFreeSpaceTime</codeph>
								</entry>
								<entry>The total time, in nanseconds, spent checking disk
									usage.</entry>
							</row>
							<row>
								<entry>
									<codeph>volumeSize</codeph>
								</entry>
								<entry>The total size in bytes of the disk volume.</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_983BFC6D53C74829A04A91C39E06315F">
		<title>Disk Usage and Performance (DiskRegionStatistics)</title>
		<body>
			<p>Statistics regarding operations performed on a disk region for persistence/overflow.
				The primary statistics are: </p>
				<table id="table_9441FF30E5F04589810885A299194F6C">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="1.02*"/>
						<colspec colname="2" colnum="2" colwidth="1*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>bufferSize</codeph>
								</entry>
								<entry>Current number of bytes buffered to be written to the disk.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>commits</codeph>
								</entry>
								<entry>Total number of commits. </entry>
							</row>
							<row>
								<entry>
									<codeph>commitTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing commits.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>entriesInVM</codeph>
								</entry>
								<entry>Current number of entries whose value resides in the member.
									The value may also have been written to the disk. </entry>
							</row>
							<row>
								<entry>
									<codeph>entriesOnDisk</codeph>
								</entry>
								<entry>Current number of entries whose value is on the disk and is
									not in memory. This is true of overflowed entries. It is also
									true of recovered entries that have not yet been faulted in.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>flushedBytes</codeph>
								</entry>
								<entry>Total number of bytes flushed out of the async write buffer
									to the disk. </entry>
							</row>
							<row>
								<entry>
									<codeph>flushes</codeph>
								</entry>
								<entry>Total number of times the async write buffer has been
									flushed. </entry>
							</row>
							<row>
								<entry>
									<codeph>flushTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing a buffer
									flush. </entry>
							</row>
							<row>
								<entry>
									<codeph>readBytes</codeph>
								</entry>
								<entry>Total number of bytes that have been read from the disk.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>reads</codeph>
								</entry>
								<entry>Total number of region entries that have been read from the
									disk. </entry>
							</row>
							<row>
								<entry>
									<codeph>readTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent reading from the
									disk. </entry>
							</row>
							<row>
								<entry>
									<codeph>recoveredBytes</codeph>
								</entry>
								<entry>Total number of bytes that have been read from disk during a
									recovery. </entry>
							</row>
							<row>
								<entry>
									<codeph>recoveryTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent doing a recovery.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>removes</codeph>
								</entry>
								<entry>Total number of region entries that have been removed from
									the disk. </entry>
							</row>
							<row>
								<entry>
									<codeph>removeTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent removing from the
									disk. </entry>
							</row>
							<row>
								<entry>
									<codeph>writes</codeph>
								</entry>
								<entry>Total number of region entries that have been written to
									disk. A write is done every time an entry is created on disk or
									every time its value is modified on the disk. </entry>
							</row>
							<row>
								<entry>
									<codeph>writeTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent writing to the
									disk. </entry>
							</row>
							<row>
								<entry>
									<codeph>writtenBytes</codeph>
								</entry>
								<entry>Total number of bytes that have been written to the disk.
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_ACB4161F10D64BC0B15871D003FF6FDF">
		<title>Distributed System Messaging (DistributionStats)</title>
		<body>
			<p>Statistics on the <keyword keyref="product_name"/> distribution layer. These
				statistcs can be used to tell how much message traffic exists between this member
				and other distributed system members. </p>
			<p>The primary statistics are:</p>
			<table id="table_42800D6681D0416B82744AB70CF05DDE">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>asyncConflatedMsgsDesc</codeph>
								</entry>
								<entry>The total number of queued conflated messages used for
									asynchronous queues. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncDequeuedMsgsDesc</codeph>
								</entry>
								<entry>The total number of queued messages that have been removed
									from the queue and successfully sent. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncDistributionTimeoutExceededDesc</codeph>
								</entry>
								<entry>Total number of times the async-distribution-timeout has been
									exceeded during a socket write. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncQueueAddTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent in adding
									messages to async queue. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncQueuedMsgsDesc</codeph>
								</entry>
								<entry>The total number of queued messages used for asynchronous
									queues. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncQueueFlushesCompletedDesc</codeph>
								</entry>
								<entry>Total number of asynchronous queue flushes completed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>asyncQueueFlushesInProgressDesc</codeph>
								</entry>
								<entry>Current number of asynchronous queues being flushed. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncQueueFlushTimeDesc</codeph>
								</entry>
								<entry>Total time spent flushing asynchronous queues. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncQueueRemoveTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent in removing
									messages from async queue. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncQueuesDesc</codeph>
								</entry>
								<entry>Current number of queues for asynchronous messaging. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncQueueSizeDesc</codeph>
								</entry>
								<entry>Current size in bytes used for asynchronous queues. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncQueueSizeExceededDesc</codeph>
								</entry>
								<entry>Total number of asynchronous queues that have exceeded the
									maximum size. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncQueueTimeoutExceededDesc</codeph>
								</entry>
								<entry>Total number of asynchronous queues that have timed out by
									being blocked for more than async-queue-timeout milliseconds.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>asyncSocketWriteBytes</codeph>
								</entry>
								<entry>Total number of bytes sent out on non-blocking sockets.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>asyncSocketWriteRetries</codeph>
								</entry>
								<entry>Total number of retries needed to write a single block of
									data using non-blocking socket write calls. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncSocketWrites</codeph>
								</entry>
								<entry>Total number of non-blocking socket write calls completed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>asyncSocketWritesInProgress</codeph>
								</entry>
								<entry>Current number of non-blocking socket write calls in
									progress. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncSocketWriteTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent in non-blocking
									socket write calls. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncThreadCompletedDesc</codeph>
								</entry>
								<entry>Total number of iterations of work performed by asynchronous
									message queue threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncThreadInProgressDesc</codeph>
								</entry>
								<entry>Current iterations of work performed by asynchronous message
									queue threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncThreadsDesc</codeph>
								</entry>
								<entry>Total number of asynchronous message queue threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>asyncThreadTimeDesc</codeph>
								</entry>
								<entry>Total time spent by asynchronous message queue threads
									performing iterations. </entry>
							</row>
							<row>
								<entry>
									<codeph>batchCopyTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent copying messages
									for batched transmission. </entry>
							</row>
							<row>
								<entry>
									<codeph>batchFlushTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent flushing batched
									messages to the network. </entry>
							</row>
							<row>
								<entry>
									<codeph>batchSendTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent queueing and
									flushing message batches. </entry>
							</row>
							<row>
								<entry>
									<codeph>batchWaitTime</codeph>
								</entry>
								<entry>Reserved for future use </entry>
							</row>
							<row>
								<entry>
									<codeph>broadcastMessagesDesc</codeph>
								</entry>
								<entry>The number of distribution messages that the <keyword
										keyref="product_name"/> system has broadcast. A broadcast
									message is one sent to every other manager in the group.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>broadcastMessagesTimeDesc</codeph>
								</entry>
								<entry>The total amount of time this distribution manager has spent
									broadcasting messages. A broadcast message is one sent to every
									other manager in the group. </entry>
							</row>
							<row>
								<entry>
									<codeph>bufferAcquires</codeph>
								</entry>
								<entry>Total number of times a buffer has been acquired. </entry>
							</row>
							<row>
								<entry>
									<codeph>bufferAcquiresInProgress</codeph>
								</entry>
								<entry>Current number of threads waiting to acquire a buffer.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>bufferAcquireTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent acquiring a
									socket. </entry>
							</row>
							<row>
								<entry>
									<codeph>commitWaitsDesc</codeph>
								</entry>
								<entry>The number of transaction commits that had to wait for a
									response before they could complete. </entry>
							</row>
							<row>
								<entry>
									<codeph>deserializations</codeph>
								</entry>
								<entry>Total number of object deserialization calls. </entry>
							</row>
							<row>
								<entry>
									<codeph>deserializationTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent deserializing
									objects. </entry>
							</row>
							<row>
								<entry>
									<codeph>deserializedBytes</codeph>
								</entry>
								<entry>Total number of bytes consumed by object deserialization.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>failedAcceptsDesc</codeph>
								</entry>
								<entry>Total number of times an accept (receiver creation) of a
									connect from some other member has failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>failedConnectsDesc</codeph>
								</entry>
								<entry>Total number of times a connect (sender creation) to some
									other member has failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>final</codeph>
								</entry>
								<entry>String distributeMessageTimeDesc = The amount of time it
									takes to prepare a message and send it on the network. This
									includes sentMessagesTime. </entry>
							</row>
							<row>
								<entry>
									<codeph>flowControlRequests</codeph>
								</entry>
								<entry>Total number of flow control credit requests sent to other
									processes. </entry>
							</row>
							<row>
								<entry>
									<codeph>flowControlResponses</codeph>
								</entry>
								<entry>Total number of flow control credit responses sent to a
									requestor. </entry>
							</row>
							<row>
								<entry>
									<codeph>flowControlThrottleWaitsInProgress</codeph>
								</entry>
								<entry>Number of threads blocked waiting due to flow-control
									throttle requests from other members. </entry>
							</row>
							<row>
								<entry>
									<codeph>flowControlWaitsInProgress</codeph>
								</entry>
								<entry>Number of threads blocked waiting for flow-control recharges
									from other processes. </entry>
							</row>
							<row>
								<entry>
									<codeph>flowControlWaitTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent waiting for other
									processes to recharge the flow of the control meter. </entry>
							</row>
							<row>
								<entry>
									<codeph>highPriorityQueueSizeDesc</codeph>
								</entry>
								<entry>The number of high priority distribution messages currently
									waiting to be processed. </entry>
							</row>
							<row>
								<entry>
									<codeph>highPriorityQueueThrottleCounDesc</codeph>
								</entry>
								<entry>The total number of times a thread was delayed in adding a
									normal message to the high priority queue. </entry>
							</row>
							<row>
								<entry>
									<codeph>highPriorityQueueThrottleTimeDesc</codeph>
								</entry>
								<entry>The total amount of time, in nanoseconds, spent delayed by
									the high priority queue throttle. </entry>
							</row>
							<row>
								<entry>
									<codeph>highPriorityThreadJobsDesc</codeph>
								</entry>
								<entry>The number of messages currently being processed by high
									priority processor threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>highPriorityThreadsDesc</codeph>
								</entry>
								<entry>The number of threads currently processing high priority
									messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>highPriorityThreadStarts</codeph>
								</entry>
								<entry>Total number of times a thread has been created for the pool
									handling high priority messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>jChannelUpTime</codeph>
								</entry>
								<entry>Up Time spent in JChannel including jgroup stack. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgDirAckdownTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups DirAck processing down
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgDirAcksReceived</codeph>
								</entry>
								<entry>Number of DirAck acks received. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgDirAckupTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups DirAck processing up
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgDISCOVERYdownTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups DISCOVERY processing
									down events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgDISCOVERYupTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups DISCOVERY processing
									up events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgDownTime</codeph>
								</entry>
								<entry>Down Time spent in JGroups stacks. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgFCautoRequests</codeph>
								</entry>
								<entry>Number of times JGroups FC automatically sent replenishment
									requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgFCdownTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups FC processing down
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgFCreplenish</codeph>
								</entry>
								<entry>Number of times JGroups FC received replenishments messages
									from receivers. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgFCresumes</codeph>
								</entry>
								<entry>Number of times JGroups FC resumed sends events due to
									backpressure. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgFCsendBlocks</codeph>
								</entry>
								<entry>Number of times JGroups FC halted send events due to
									backpressure. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgFCsentCredits</codeph>
								</entry>
								<entry>Number of times JGroups FC sent credits events to a sender.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>jgFCsentThrottleRequests</codeph>
								</entry>
								<entry>Number of times JGroups FC sent throttle events requests to a
									sender. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgFCupTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups FC processing up
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgFDdownTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups FD processing down
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgFDupTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups FD processing up
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgFRAG2downTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups FRAG2 processing down
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgFRAG2upTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups FRAG2 processing up
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgFragmentationsPerformed</codeph>
								</entry>
								<entry>Number of message fragmentation operations performed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>jgFragmentsCreated</codeph>
								</entry>
								<entry>Number of message fragments created. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgGMSdownTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups GMS processing down
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgGMSupTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups GMS processing up
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgNAKACKdownTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups NAKACK processing down
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgNAKACKreceivedMessages</codeph>
								</entry>
								<entry>Number of received messages awaiting stability in NAKACK.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>jgNAKACKsentMessages</codeph>
								</entry>
								<entry>Number of sent messages awaiting stability in NAKACK.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>jgNAKACKupTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups NAKACK processing up
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgSTABILITYmessages</codeph>
								</entry>
								<entry>Number of STABILITY messages received by JGroups. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgSTABLEdownTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups STABLE processing down
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgSTABLEmessages</codeph>
								</entry>
								<entry>Number of STABLE messages received by JGroups. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgSTABLEmessagesSent</codeph>
								</entry>
								<entry>Number of STABLE messages sent by JGroups. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgSTABLEsuspendTime</codeph>
								</entry>
								<entry>Amount of time JGroups STABLE is suspended. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgSTABLEupTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups STABLE processing up
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgTCPGOSSIPdownTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups TCPGOSSIP processing
									down events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgTCPGOSSIPupTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups TCPGOSSIP processing
									up events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgUDPdownTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups UDP processing down
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgUDPupTime</codeph>
								</entry>
								<entry>Time, in nanosecnds, spent in JGroups UDP processing up
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgUNICASTdataReceivedTime</codeph>
								</entry>
								<entry>Amount of time spent in JGroups UNICAST send. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgUNICASTdownTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups UNICAST processing
									down events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgUNICASTreceivedMessages</codeph>
								</entry>
								<entry>Number of received messages awaiting receipt of prior
									messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgUNICASTsentHighPriorityMessages</codeph>
								</entry>
								<entry>Number of un-acked high priority messages </entry>
							</row>
							<row>
								<entry>
									<codeph>jgUNICASTsentMessages</codeph>
								</entry>
								<entry>Number of un-acked normal priority messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgUNICASTupTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups UNICAST processing up
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgUpTime</codeph>
								</entry>
								<entry>Up Time spent in JGroups stacks. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgVIEWSYNCdownTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups VIEWSYNC processing
									down events. </entry>
							</row>
							<row>
								<entry>
									<codeph>jgVIEWSYNCupTime</codeph>
								</entry>
								<entry>Time, in nanoseconds, spent in JGroups VIEWSYNC processing up
									events. </entry>
							</row>
							<row>
								<entry>
									<codeph>lostConnectionLeaseDesc</codeph>
								</entry>
								<entry>Total number of times an unshared sender socket has remained
									idle long enough that its lease expired. </entry>
							</row>
							<row>
								<entry>
									<codeph>mcastReadBytes</codeph>
								</entry>
								<entry>Total number of bytes received in multicast datagrams.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>mcastReads</codeph>
								</entry>
								<entry>Total number of multicast datagrams received. </entry>
							</row>
							<row>
								<entry>
									<codeph>mcastRetransmitRequests</codeph>
								</entry>
								<entry>Total number of multicast datagram socket retransmission
									requests sent to other processes. </entry>
							</row>
							<row>
								<entry>
									<codeph>mcastRetransmits</codeph>
								</entry>
								<entry>Total number of multicast datagram socket retransmissions.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>mcastWriteBytes</codeph>
								</entry>
								<entry>Total number of bytes sent out on multicast datagram sockets.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>mcastWrites</codeph>
								</entry>
								<entry>Total number of multicast datagram socket write calls.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>mcastWriteTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent in multicast
									datagram socket write calls. </entry>
							</row>
							<row>
								<entry>
									<codeph>messageBytesBeingReceived</codeph>
								</entry>
								<entry>Current number of bytes consumed by messages being received
									or processed. </entry>
							</row>
							<row>
								<entry>
									<codeph>messageChannelTimeDesc</codeph>
								</entry>
								<entry>The total amount of time received messages spent in the
									distribution channel. </entry>
							</row>
							<row>
								<entry>
									<codeph>messageProcessingScheduleTimeDesc</codeph>
								</entry>
								<entry>The amount of time this distribution manager has spent
									dispatching a message to processor threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>messagesBeingReceived</codeph>
								</entry>
								<entry>Current number of messages being received off the network or
									being processed after reception. </entry>
							</row>
							<row>
								<entry>
									<codeph>msgDeserializationTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent deserializing
									messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>msgSerializationTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent serializing
									messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>nodesDesc</codeph>
								</entry>
								<entry>The current number of members in this distributed system.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>overflowQueueSizeDesc</codeph>
								</entry>
								<entry>The number of normal distribution messages currently waiting
									to be processed. </entry>
							</row>
							<row>
								<entry>
									<codeph>overflowQueueThrottleCountDesc</codeph>
								</entry>
								<entry>The total number of times a thread was delayed in adding a
									normal message to the overflow queue. </entry>
							</row>
							<row>
								<entry>
									<codeph>overflowQueueThrottleTimeDesc</codeph>
								</entry>
								<entry>The total amount of time, in nanoseconds, spent delayed by
									the overflow queue throttle. </entry>
							</row>
							<row>
								<entry>
									<codeph>partitionedRegionThreadJobsDesc</codeph>
								</entry>
								<entry>The number of messages currently being processed by
									partitioned region threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>partitionedRegionThreadsDesc</codeph>
								</entry>
								<entry>The number of threads currently processing partitioned region
									messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>partitionedRegionThreadStarts</codeph>
								</entry>
								<entry>Total number of times a thread has been created for the pool
									handling partitioned region messages. </entry>
							</row>
							<row>
								<entry><codeph>pdxDeserializations</codeph>
								</entry>
								<entry>Total number of PDX deserializations. </entry>
							</row>
							<row>
								<entry><codeph>pdxDeserializedBytes</codeph>
								</entry>
								<entry>Total number of bytes read by PDX deserialization. </entry>
							</row>
							<row>
								<entry><codeph>pdxInstanceCreations</codeph>
								</entry>
								<entry>Total number of times a PdxInstance has been created by
									deserialization. </entry>
							</row>
							<row>
								<entry><codeph>pdxInstanceDeserializations</codeph>
								</entry>
								<entry>Total number of times getObject has been called on a
									PdxInstance. </entry>
							</row>
							<row>
								<entry><codeph>pdxInstanceDeserializationTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent deserializing
									PdxInstances by calling getObject. </entry>
							</row>
							<row>
								<entry><codeph>pdxSerializations</codeph>
								</entry>
								<entry>Total number of PDX serializations. </entry>
							</row>
							<row>
								<entry><codeph>pdxSerializedBytes</codeph>
								</entry>
								<entry>Total number of bytes produced by PDX serialization. </entry>
							</row>
							<row>
								<entry>
									<codeph>processedMessagesDesc</codeph>
								</entry>
								<entry>The number of distribution messages that the <keyword
										keyref="product_name"/> system has processed. </entry>
							</row>
							<row>
								<entry>
									<codeph>processedMessagesTimeDesc</codeph>
								</entry>
								<entry>The amount of time this distribution manager has spent in
									message.process(). </entry>
							</row>
							<row>
								<entry>
									<codeph>processingThreadJobsDesc</codeph>
								</entry>
								<entry>The number of messages currently being processed by pooled
									message processor threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>processingThreadsDesc</codeph>
								</entry>
								<entry>The number of threads currently processing normal messages.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>processingThreadStarts</codeph>
								</entry>
								<entry>Total number of times a thread has been created for the pool
									processing normal messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>receivedBytesDesc</codeph>
								</entry>
								<entry>The number of distribution message bytes that the <keyword
										keyref="product_name"/> system has received. </entry>
							</row>
							<row>
								<entry>
									<codeph>receivedMessagesDesc</codeph>
								</entry>
								<entry>The number of distribution messages that the <keyword
										keyref="product_name"/> system has received. </entry>
							</row>
							<row>
								<entry>
									<codeph>receiverConnectionsDesc</codeph>
								</entry>
								<entry>Current number of sockets dedicated to receiving messages.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>receiverDirectBufferSizeDesc</codeph>
								</entry>
								<entry>Current number of bytes allocated from direct memory as
									buffers for incoming messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>receiverHeapBufferSizeDesc</codeph>
								</entry>
								<entry>Current number of bytes allocated from Java heap memory as
									buffers for incoming messages.S </entry>
							</row>
							<row>
								<entry>
									<codeph>reconnectAttemptsDesc</codeph>
								</entry>
								<entry>Total number of times an established connection was lost and
									a reconnect was attempted. </entry>
							</row>
							<row>
								<entry>
									<codeph>replyHandoffTimeDesc</codeph>
								</entry>
								<entry>Total number of seconds to switch thread contexts from
									processing thread to application thread. </entry>
							</row>
							<row>
								<entry>
									<codeph>replyMessageTimeDesc</codeph>
								</entry>
								<entry>The amount of time spent processing reply messages; </entry>
							</row>
							<row>
								<entry>
									<codeph>replyTimeoutsDesc</codeph>
								</entry>
								<entry>Total number of message replies that have timed out. </entry>
							</row>
							<row>
								<entry>
									<codeph>replyWaitMaxTimeDesc</codeph>
								</entry>
								<entry>Maximum time spent transmitting and then waiting for a reply
									to a message. See sentMessagesMaxTime for related information.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>replyWaitsCompletedDesc</codeph>
								</entry>
								<entry>Total number of times waits for a reply have completed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>replyWaitsInProgressDesc</codeph>
								</entry>
								<entry>Current number of threads waiting for a reply. </entry>
							</row>
							<row>
								<entry>
									<codeph>replyWaitTimeDesc</codeph>
								</entry>
								<entry>Total time spent waiting for a reply to a message. </entry>
							</row>
							<row>
								<entry>
									<codeph>senderDirectBufferSizeDesc</codeph>
								</entry>
								<entry>Current number of bytes allocated from direct memory as
									buffers for outgoing messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>senderHeapBufferSizeDesc</codeph>
								</entry>
								<entry>Current number of bytes allocated from Java heap memory as
									buffers for outgoing messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>sentBytesDesc</codeph>
								</entry>
								<entry>The number of distribution message bytes that the <keyword
										keyref="product_name"/> system has sent. </entry>
							</row>
							<row>
								<entry>
									<codeph>sentCommitMessagesDesc</codeph>
								</entry>
								<entry>The number of transaction commit messages that the <keyword
										keyref="product_name"/> system has created to be sent. Note,
									it is possible for a commit to only create one message even
									though it will end up being sent to multiple recipients.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>sentMessagesDesc</codeph>
								</entry>
								<entry>The number of distribution messages that the <keyword
										keyref="product_name"/> system has sent, which includes
									broadcastMessages. </entry>
							</row>
							<row>
								<entry>
									<codeph>sentMessagesMaxTimeDesc</codeph>
								</entry>
								<entry>The highest amount of time this distribution manager has
									spent distributing a single message to the network. </entry>
							</row>
							<row>
								<entry>
									<codeph>sentMessagesTimeDesc</codeph>
								</entry>
								<entry>The total amount of time this distribution manager has spent
									sending messages, which includes broadcastMessagesTime. </entry>
							</row>
							<row>
								<entry>
									<codeph>serializations</codeph>
								</entry>
								<entry>Total number of object serialization calls. </entry>
							</row>
							<row>
								<entry>
									<codeph>serializationTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent serializing
									objects. </entry>
							</row>
							<row>
								<entry>
									<codeph>serializedBytes</codeph>
								</entry>
								<entry>Total number of bytes produced by object serialization.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>serialPooledThreadDesc</codeph>
								</entry>
								<entry>The number of threads created in the
									SerialQueuedExecutorPool. </entry>
							</row>
							<row>
								<entry>
									<codeph>serialPooledThreadJobsDesc</codeph>
								</entry>
								<entry>The number of messages currently being processed by pooled
									serial processor threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>serialPooledThreadStarts</codeph>
								</entry>
								<entry>Total number of times a thread has been created for the
									serial pool(s). </entry>
							</row>
							<row>
								<entry>
									<codeph>serialQueueBytesDesc</codeph>
								</entry>
								<entry>The approximate number of bytes consumed by serial
									distribution messages currently waiting to be processed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>serialQueueSizeDesc</codeph>
								</entry>
								<entry>The number of serial distribution messages currently waiting
									to be processed. </entry>
							</row>
							<row>
								<entry>
									<codeph>serialQueueThrottleCountDesc</codeph>
								</entry>
								<entry>The total number of times a thread was delayed in adding a
									ordered message to the serial queue. </entry>
							</row>
							<row>
								<entry>
									<codeph>serialQueueThrottleTimeDesc</codeph>
								</entry>
								<entry>The total amount of time, in nanoseconds, spent delayed by
									the serial queue throttle. </entry>
							</row>
							<row>
								<entry>
									<codeph>serialThreadJobsDesc</codeph>
								</entry>
								<entry>The number of messages currently being processed by serial
									threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>serialThreadsDesc</codeph>
								</entry>
								<entry>The number of threads currently processing serial/ordered
									messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>serialThreadStarts</codeph>
								</entry>
								<entry>Total number of times a thread has been created for the
									serial message executor. </entry>
							</row>
							<row>
								<entry>
									<codeph>sharedOrderedSenderConnectionsDesc</codeph>
								</entry>
								<entry>Current number of shared sockets dedicated to sending ordered
									messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>sharedUnorderedSenderConnectionsDesc</codeph>
								</entry>
								<entry>Current number of shared sockets dedicated to sending
									unordered messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>socketLocks</codeph>
								</entry>
								<entry>Total number of times a socket has been locked. </entry>
							</row>
							<row>
								<entry>
									<codeph>socketLockTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent locking a socket.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>syncSocketWriteBytes</codeph>
								</entry>
								<entry>Total number of bytes sent out in synchronous/blocking mode
									on sockets. </entry>
							</row>
							<row>
								<entry>
									<codeph>syncSocketWrites</codeph>
								</entry>
								<entry>Total number of completed synchronous/blocking socket write
									calls. </entry>
							</row>
							<row>
								<entry>
									<codeph>syncSocketWritesInProgress</codeph>
								</entry>
								<entry>Current number of synchronous/blocking socket write calls in
									progress. </entry>
							</row>
							<row>
								<entry>
									<codeph>syncSocketWriteTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent in
									synchronous/blocking socket write calls. </entry>
							</row>
							<row>
								<entry>
									<codeph>threadOrderedSenderConnectionsDesc</codeph>
								</entry>
								<entry>Current number of thread sockets dedicated to sending ordered
									messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>threadUnorderedSenderConnectionsDesc</codeph>
								</entry>
								<entry>Current number of thread sockets dedicated to sending
									unordered messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>TOSentMsgs</codeph>
								</entry>
								<entry>Total number of messages sent on thread owned senders.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>ucastFlushes</codeph>
								</entry>
								<entry>Total number of flushes of the unicast datagram protocol,
									prior to sending a multicast message. </entry>
							</row>
							<row>
								<entry>
									<codeph>ucastFlushTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent waiting for
									acknowledgements for outstanding unicast datagram messages.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>ucastReadBytes</codeph>
								</entry>
								<entry>Total number of bytes received in unicast datagrams. </entry>
							</row>
							<row>
								<entry>
									<codeph>ucastReads</codeph>
								</entry>
								<entry>Total number of unicast datagrams received. </entry>
							</row>
							<row>
								<entry>
									<codeph>ucastRetransmits</codeph>
								</entry>
								<entry>Total number of unicast datagram socket retransmissions.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>ucastWriteBytes</codeph>
								</entry>
								<entry>Total number of bytes sent out on unicast datagram sockets.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>ucastWrites</codeph>
								</entry>
								<entry>Total number of unicast datagram socket write calls. </entry>
							</row>
							<row>
								<entry>
									<codeph>ucastWriteTime</codeph>
								</entry>
								<entry>Total amount of time, in nanoseconds, spent in unicast
									datagram socket write calls. </entry>
							</row>
							<row>
								<entry><codeph>udpDispatchRequestTime</codeph></entry>
								<entry>The total amount of time, in nanoseconds, spent deserializing
									and dispatching UDP messages in the message-reader
									thread.</entry>
							</row>
							<row>
								<entry>
									<codeph>viewThreadJobsDesc</codeph>
								</entry>
								<entry>The number of messages currently being processed by view
									threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>viewThreadsDesc</codeph>
								</entry>
								<entry>The number of threads currently processing view messages.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>viewThreadStarts</codeph>
								</entry>
								<entry>Total number of times a thread has been created for the view
									message executor. </entry>
							</row>
							<row>
								<entry>
									<codeph>waitingQueueSizeDesc</codeph>
								</entry>
								<entry>The number of distribution messages currently waiting for
									some other resource before they can be processed. </entry>
							</row>
							<row>
								<entry>
									<codeph>waitingThreadJobsDesc</codeph>
								</entry>
								<entry>The number of messages currently being processed by waiting
									pooly processor threads. </entry>
							</row>
							<row>
								<entry>
									<codeph>waitingThreadsDesc</codeph>
								</entry>
								<entry>The number of threads currently processing messages that had
									to wait for a resource. </entry>
							</row>
							<row>
								<entry>
									<codeph>waitingThreadStarts</codeph>
								</entry>
								<entry>Total number of times a thread has been created for the
									waiting pool. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			<section>
				<title>Distribution Statistics Related to Slow Receivers</title>
				<p>The distribution statistics provide statistics pertaining to slow receivers. The
					primary statistics are: </p>
					<table id="table_4F99325D5EC3441CB39D802A742BD80C">
						<tgroup cols="2">
							<colspec colname="1" colnum="1" colwidth="*"/>
							<colspec colname="2" colnum="2" colwidth="*"/>
							<thead>
								<row>
									<entry>Statistic </entry>
									<entry>Description </entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>
										<codeph>asyncDistributionTimeoutExceeded</codeph>
									</entry>
									<entry>Incremented every time an asyncSocketWrite has exceeded
										async-distribution-timeout and an async queue has been
										created. </entry>
								</row>
								<row>
									<entry>
										<codeph>asyncQueue*</codeph>
									</entry>
									<entry>Provide information about queues the producer is managing
										for its consumers. There are no statistics maintained for
										individual consumers. The following are the primary
										statistics of this type. </entry>
								</row>
								<row>
									<entry>
										<codeph>asyncQueues</codeph>
									</entry>
									<entry>Indicates the number of queues currently in the producer.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>asyncQueueSizeExceeded</codeph>
									</entry>
									<entry>Incremented every time a queue has exceeded
											<codeph>async-max-queue-size</codeph> and the receiver
										has been sent a disconnect message. </entry>
								</row>
								<row>
									<entry>
										<codeph>asyncQueueTimeoutExceeded</codeph>
									</entry>
									<entry>Incremented every time a queue flushing has exceeded
											<codeph>async-queue-timeout</codeph> and the receiver
										has been sent a disconnect message. </entry>
								</row>
								<row>
									<entry>
										<codeph>asyncSocketWrite*</codeph>
									</entry>
									<entry>Used anytime a producer is distributing to one or more
										consumers with a non-zero distribution timeout. These
										statistics also reflect the writes done by the threads that
										service asynchronous queues. </entry>
								</row>
							</tbody>
						</tgroup>
					</table>
			</section>
		</body>
	</topic>
	<topic id="section_78D346A580724E1EA645E31626EECE40">
		<title>Distributed Lock Services (DLockStats)</title>
		<body>
			<p>These statistics are for distributed lock services. The primary statistics are: </p>
				<table id="table_EC59A9C5359C4729B431B49ECE381EDF">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>becomeGrantorRequestsDesc</codeph>
								</entry>
								<entry>Total number of times this member has explicitly requested to
									become lock grantor. </entry>
							</row>
							<row>
								<entry>
									<codeph>createGrantorsCompletedDesc</codeph>
								</entry>
								<entry>Total number of initial grantors created in this process.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>createGrantorsInProgressDesc</codeph>
								</entry>
								<entry>Current number of initial grantors being created in this
									process. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyReadsDesc</codeph>
								</entry>
								<entry>The current number of DLockService destroy read locks held by
									this process. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyReadWaitFailedTimeDesc</codeph>
								</entry>
								<entry>Total time spent waiting for a DLockService destroy read lock
									that was not obtained. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyReadWaitsCompletedDesc</codeph>
								</entry>
								<entry>Total number of times a DLockService destroy read lock wait
									has completed successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyReadWaitsFailedDesc</codeph>
								</entry>
								<entry>Total number of times a DLockService destroy read lock wait
									has completed unsuccessfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyReadWaitsInProgressDesc</codeph>
								</entry>
								<entry>Current number of threads waiting for a DLockService destroy
									read lock. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyReadWaitTimeDesc</codeph>
								</entry>
								<entry>Total time spent waiting for a DLockService destroy read lock
									that was obtained. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyWritesDesc</codeph>
								</entry>
								<entry>The current number of DLockService destroy write locks held
									by this process. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyWriteWaitFailedTimeDesc</codeph>
								</entry>
								<entry>Total time spent waiting for a DLockService destroy write
									lock that was not obtained. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyWriteWaitsCompletedDesc</codeph>
								</entry>
								<entry>Total number of times a DLockService destroy write lock wait
									has completed successfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyWriteWaitsFailedDesc</codeph>
								</entry>
								<entry>Total number of times a DLockService destroy write lock wait
									has completed unsuccessfully. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyWriteWaitsInProgressDesc</codeph>
								</entry>
								<entry>Current number of writes waiting for a DLockService destroy
									write lock. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyWriteWaitTimeDesc</codeph>
								</entry>
								<entry>Total time spent waiting for a DLockService destroy write
									lock that was obtained. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantorsDesc</codeph>
								</entry>
								<entry>The current number of lock grantors hosted by this system
									member. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantorThreadExpireAndGrantLocksTimeDesc</codeph>
								</entry>
								<entry>Total time spent by grantor thread(s) performing
									expireAndGrantLocks tasks. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantorThreadHandleRequestTimeoutsTimeDesc</codeph>
								</entry>
								<entry>Total time spent by grantor thread(s) performing
									handleRequestTimeouts tasks."; </entry>
							</row>
							<row>
								<entry>
									<codeph>grantorThreadRemoveUnusedTokensTimeDesc</codeph>
								</entry>
								<entry>Total time spent by grantor thread(s) performing
									removeUnusedTokens tasks. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantorThreadsCompletedDesc</codeph>
								</entry>
								<entry>Total number of iterations of work performed by grantor
									thread(s). </entry>
							</row>
							<row>
								<entry>
									<codeph>grantorThreadsInProgressDesc</codeph>
								</entry>
								<entry>Current iterations of work performed by grantor thread.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>grantorThreadTimeDesc</codeph>
								</entry>
								<entry>Total time spent by grantor thread(s) performing all grantor
									tasks. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantorWaitFailedTimeDesc</codeph>
								</entry>
								<entry>Total time spent waiting for the grantor latch which resulted
									in failure. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantorWaitsCompletedDesc</codeph>
								</entry>
								<entry>Total number of times waiting threads completed waiting for
									the grantor latch to open. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantorWaitsFailedDesc</codeph>
								</entry>
								<entry>Total number of times waiting threads failed to finish
									waiting for the grantor latch to open. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantorWaitsInProgressDesc</codeph>
								</entry>
								<entry>Current number of threads waiting for grantor latch to open.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>grantorWaitTimeDesc</codeph>
								</entry>
								<entry>Total time spent waiting for the grantor latch which resulted
									in success. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitDestroyedTimeDesc</codeph>
								</entry>
								<entry>Total time spent granting of lock requests that failed
									because lock service was destroyed. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitFailedTimeDesc</codeph>
								</entry>
								<entry>Total time spent granting of lock requests that failed
									because try locks failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitNotGrantorTimeDesc</codeph>
								</entry>
								<entry>Total time spent granting of lock requests that failed
									because not grantor. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitNotHolderTimeDesc</codeph>
								</entry>
								<entry>Total time spent granting of lock requests that failed
									because reentrant was not holder. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitsCompletedDesc</codeph>
								</entry>
								<entry>Total number of times granting of a lock request has
									completed by successfully granting the lock. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitsDestroyedDesc</codeph>
								</entry>
								<entry>Total number of times granting of lock request failed because
									lock service was destroyed. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitsFailedDesc</codeph>
								</entry>
								<entry>Total number of times granting of lock request failed because
									try locks failed. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitsInProgressDesc</codeph>
								</entry>
								<entry>Current number of distributed lock requests being granted.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitsNotGrantorDesc</codeph>
								</entry>
								<entry>Total number of times granting of lock request failed because
									not grantor. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitsNotHolderDesc</codeph>
								</entry>
								<entry>Total number of times granting of lock request failed because
									reentrant was not holder. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitsSuspendedDesc</codeph>
								</entry>
								<entry>Total number of times granting of lock request failed because
									lock service was suspended. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitsTimeoutDesc</codeph>
								</entry>
								<entry>Total number of times granting of lock request failed because
									of a timeout. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitSuspendedTimeDesc</codeph>
								</entry>
								<entry>Total time spent granting of lock requests that failed
									because lock service was suspended. </entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitTimeDesc</codeph>
								</entry>
								<entry>Total time spent attempting to grant a distributed lock.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>grantWaitTimeoutTimeDesc</codeph>
								</entry>
								<entry>Total time spent granting of lock requests that failed
									because of a timeout. </entry>
							</row>
							<row>
								<entry>
									<codeph>lockReleasesCompletedDesc</codeph>
								</entry>
								<entry>Total number of times distributed lock release has completed.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>lockReleasesInProgressDesc</codeph>
								</entry>
								<entry>Current number of threads releasing a distributed lock.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>lockReleaseTimeDesc</codeph>
								</entry>
								<entry>Total time spent releasing a distributed lock. </entry>
							</row>
							<row>
								<entry>
									<codeph>lockWaitFailedTimeDesc</codeph>
								</entry>
								<entry>Total number of times distributed lock wait has completed by
									failing to obtain the lock. </entry>
							</row>
							<row>
								<entry>
									<codeph>lockWaitsCompletedDesc</codeph>
								</entry>
								<entry>Total number of times distributed lock wait has completed by
									successfully obtaining the lock. </entry>
							</row>
							<row>
								<entry>
									<codeph>lockWaitsFailedDesc</codeph>
								</entry>
								<entry>Total time spent waiting for a distributed lock that failed
									to be obtained. </entry>
							</row>
							<row>
								<entry>
									<codeph>lockWaitsInProgressDesc</codeph>
								</entry>
								<entry>Current number of threads waiting for a distributed lock.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>lockWaitTimeDesc</codeph>
								</entry>
								<entry>Total time spent waiting for a distributed lock that was
									obtained. </entry>
							</row>
							<row>
								<entry>
									<codeph>pendingRequestsDesc</codeph>
								</entry>
								<entry>The current number of pending lock requests queued by
									grantors in this process. </entry>
							</row>
							<row>
								<entry>
									<codeph>requestQueuesDesc</codeph>
								</entry>
								<entry>The current number of lock request queues used by this system
									member. </entry>
							</row>
							<row>
								<entry>
									<codeph>serialQueueSizeDesc</codeph>
								</entry>
								<entry>The number of serial distribution messages currently waiting
									to be processed. </entry>
							</row>
							<row>
								<entry>
									<codeph>serialThreadsDesc</codeph>
								</entry>
								<entry>The number of threads currently processing serial/ordered
									messages. </entry>
							</row>
							<row>
								<entry>
									<codeph>serviceCreateLatchTimeDesc</codeph>
								</entry>
								<entry>Total time spent creating lock services before releasing
									create latches. </entry>
							</row>
							<row>
								<entry>
									<codeph>serviceCreatesCompletedDesc</codeph>
								</entry>
								<entry>Total number of lock services created in this process.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>serviceCreatesInProgressDesc</codeph>
								</entry>
								<entry>Current number of lock services being created in this
									process. </entry>
							</row>
							<row>
								<entry>
									<codeph>serviceInitLatchTimeDesc</codeph>
								</entry>
								<entry>Total time spent creating lock services before releasing init
									latches. </entry>
							</row>
							<row>
								<entry>
									<codeph>servicesDesc</codeph>
								</entry>
								<entry>The current number of lock services used by this system
									member. </entry>
							</row>
							<row>
								<entry>
									<codeph>String</codeph>
								</entry>
								<entry>createGrantorTimeDesc Total time spent waiting create the
									initial grantor for lock services. </entry>
							</row>
							<row>
								<entry>
									<codeph>tokensDesc</codeph>
								</entry>
								<entry>The current number of lock tokens used by this system member.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>waitingQueueSizeDesc</codeph>
								</entry>
								<entry>The number of distribution messages currently waiting for
									some other resource before they can be processed. </entry>
							</row>
							<row>
								<entry>
									<codeph>waitingThreadsDesc</codeph>
								</entry>
								<entry>The number of threads currently processing messages that had
									to wait for a resource. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_5E211DDB0E8640689AD0A4659511E17A">
		<title>Function Execution (FunctionServiceStatistics)</title>
		<body>
			<p>These are the statistics for each execution of the function. The primary statistics
				are: </p>
				<table id="table_63B4CC0BD8174DAA97E53A0708B6A14B">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>functionExecutionCalls</codeph>
								</entry>
								<entry>Total number of FunctionService.execute() calls for given
									function. </entry>
							</row>
							<row>
								<entry>
									<codeph>functionExecutionsCompleted</codeph>
								</entry>
								<entry>Total number of completed function.execute() calls for given
									function. </entry>
							</row>
							<row>
								<entry>
									<codeph>functionExecutionsCompletedProcessingTime</codeph>
								</entry>
								<entry>Total time consumed for all completed invocations of the
									given function. </entry>
							</row>
							<row>
								<entry>
									<codeph>functionExecutionsExceptions</codeph>
								</entry>
								<entry>Total number of Exceptions Occurred while executing function.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>functionExecutionsHasResultCompletedProcessingTime</codeph>
								</entry>
								<entry>Total time consumed for all completed given
									function.execute() calls where hasResult() returns true.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>functionExecutionsHasResultRunning</codeph>
								</entry>
								<entry>A gauge indicating the number of currently active execute()
									calls for functions where hasResult() returns true. </entry>
							</row>
							<row>
								<entry>
									<codeph>functionExecutionsRunning</codeph>
								</entry>
								<entry>number of currently running invocations of the given
									function. </entry>
							</row>
							<row>
								<entry>
									<codeph>resultsReceived</codeph>
								</entry>
								<entry>Total number of results received and passed to the
									ResultCollector. </entry>
							</row>
							<row>
								<entry>
									<codeph>resultsSentToResultCollector</codeph>
								</entry>
								<entry>Total number of results sent to the ResultCollector. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_C4199A541B1F4B82B6178C416C0FAE4B">
		<title>Gateway Queue (GatewayStatistics)</title>
		<body>
			<p>These statistics are for outgoing gateway queue and its connection. The primary
				statistics are: </p>
				<table id="table_83F17708AC6C4EA5A4EC6B5318029CD1">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>batchDistributionTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent distributing batches of
									events to other gateways. </entry>
							</row>
							<row>
								<entry>
									<codeph>batchesDistributed</codeph>
								</entry>
								<entry>Number of batches of events operations removed from the event
									queue and sent. </entry>
							</row>
							<row>
								<entry>
									<codeph>batchesRedistributed</codeph>
								</entry>
								<entry>Number of batches of events operations removed from the event
									queue and resent. </entry>
							</row>
							<row>
								<entry><codeph>batchesResized</codeph></entry>
								<entry>The number of batches resized due to a batch being too
									large.</entry>
							</row>
							<row>
								<entry>
									<codeph>eventQueueSize</codeph>
								</entry>
								<entry>Size of the event operations queue. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventQueueTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent queueing events. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventsDistributed</codeph>
								</entry>
								<entry>Number of events operations removed from the event queue and
									sent. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventsNotQueuedConflated</codeph>
								</entry>
								<entry>Number of events operations received but not added to the
									event queue because the queue already contains an event with the
									event's key. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventsQueued</codeph>
								</entry>
								<entry>Number of events operations added to the event queue.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>unprocessedEventMapSize</codeph>
								</entry>
								<entry>Current number of events entries in the secondary's
									unprocessed event map. </entry>
							</row>
							<row>
								<entry>
									<codeph>unprocessedEventsAddedBySecondary</codeph>
								</entry>
								<entry>Number of events added to the secondary's unprocessed event
									map by the secondary. </entry>
							</row>
							<row>
								<entry>
									<codeph>unprocessedEventsRemovedByPrimary</codeph>
								</entry>
								<entry>Number of events removed through a listener from the
									secondary's unprocessed event map by the primary. </entry>
							</row>
							<row>
								<entry>
									<codeph>unprocessedEventsRemovedByTimeout</codeph>
								</entry>
								<entry>Number of events removed from the secondary's unprocessed
									event map by a timeout. </entry>
							</row>
							<row>
								<entry>
									<codeph>unprocessedTokenMapSize</codeph>
								</entry>
								<entry>Current number of tokens entries in the secondary's
									unprocessed token map. </entry>
							</row>
							<row>
								<entry>
									<codeph>unprocessedTokensAddedByPrimary</codeph>
								</entry>
								<entry>Number of tokens added through a listener to the secondary's
									unprocessed token map by the primary. </entry>
							</row>
							<row>
								<entry>
									<codeph>unprocessedTokensRemovedBySecondary</codeph>
								</entry>
								<entry>Number of tokens removed from the secondary's unprocessed
									token map by the secondary. </entry>
							</row>
							<row>
								<entry>
									<codeph>unprocessedTokensRemovedByTimeout</codeph>
								</entry>
								<entry>Number of tokens removed from the secondary's unprocessed
									token map by a timeout. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_86A61860024B480592DAC67FFB882538">
		<title>Indexes (IndexStats)</title>
		<body>
			<section>
				<title>Query-Independent Statistics on Indexes</title>
			</section>
				<table id="table_A251D656FAFB4F04981C076979E4FDF4">
					<tgroup cols="2">
						<colspec colnum="1" colname="col1" colwidth="*"/>
						<colspec colnum="2" colname="col2" colwidth="*"/>
						<thead>
							<row>
								<entry colname="col1">Statistic </entry>
								<entry colname="col2">Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry colname="col1">
									<codeph>numKeys</codeph>
								</entry>
								<entry colname="col2">Number of keys currently stored in the Index.
								</entry>
							</row>
							<row>
								<entry colname="col1">
									<codeph>numUpdates</codeph>
								</entry>
								<entry colname="col2">Number of updates applied and completed on the
									Index while inserting, modifying , or deleting corresponding
									data in <keyword keyref="product_name"/>. </entry>
							</row>
							<row>
								<entry colname="col1">
									<codeph>numValues</codeph>
								</entry>
								<entry colname="col2">Number of values currently stored in the
									Index. </entry>
							</row>
							<row>
								<entry colname="col1">
									<codeph>updatesInProgress</codeph>
								</entry>
								<entry colname="col2">Current number of updates in progress on the
									Index. Concurrent updates on an index are allowed. </entry>
							</row>
							<row>
								<entry colname="col1">
									<codeph>updateTime</codeph>
								</entry>
								<entry colname="col2">Total time taken in applying and completing
									updates on the Index. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			<section>
				<title>Query-Dependent Statistics on Indexes</title>
					<table id="table_AACAEF3AF18347FE8A64828C1C8DD7D3">
						<tgroup cols="2">
							<colspec colnum="1" colname="col1" colwidth="*"/>
							<colspec colnum="2" colname="col2" colwidth="*"/>
							<thead>
								<row>
									<entry colname="col1">Statistic </entry>
									<entry colname="col2">Description </entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry colname="col1">
										<codeph>numUses</codeph>
									</entry>
									<entry colname="col2">Number of times the Index has been used
										for querying. </entry>
								</row>
								<row>
									<entry colname="col1">
										<codeph>usesInProgress</codeph>
									</entry>
									<entry colname="col2">Current number of uses of the index in
										progress or current number of concurrent threads accessing
										the index for querying. Concurrent use of an index is
										allowed for different queries. </entry>
								</row>
								<row>
									<entry colname="col1">
										<codeph>useTime</codeph>
									</entry>
									<entry colname="col2">Total time during the use of the Index for
										querying. </entry>
								</row>
							</tbody>
						</tgroup>
					</table>
			</section>
		</body>
	</topic>
	<topic id="section_607C3867602E410CAE5FAB26A7FF1CB9">
		<title>JVM Performance</title>
		<body>
			<section>
				<title><keyword keyref="product_name"/> JVM Resource Manager
					(ResourceManagerStats)</title>
			</section>
			<p>Statistics related to the <keyword keyref="product_name"/>'s resource manager. Use
				these to help analyze and tune your JVM memory settings and the <keyword
					keyref="product_name"/> resource manager settings. The primary statistics are: </p>
				<table id="table_873AC6888ADA422BB2AC357E446C6FF4">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>criticalThreshold</codeph>
								</entry>
								<entry>The cache resource-manager setting critical-heap-percentage.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>evictionStartEvents</codeph>
								</entry>
								<entry>Number of times eviction activities were started due to the
									heap use going over the eviction threshold. </entry>
							</row>
							<row>
								<entry>
									<codeph>evictionStopEvents</codeph>
								</entry>
								<entry>Number of times eviction activities were stopped due to the
									heap use going below the eviction threshold. </entry>
							</row>
							<row>
								<entry>
									<codeph>evictionThreshold</codeph>
								</entry>
								<entry>The cache resource-manager setting eviction-heap-percentage..
								</entry>
							</row>
							<row>
								<entry>
									<codeph>heapCriticalEvents</codeph>
								</entry>
								<entry>Number of times incoming cache activities were blocked due to
									heap use going over the critical threshold. </entry>
							</row>
							<row>
								<entry>
									<codeph>heapSafeEvents</codeph>
								</entry>
								<entry>Number of times incoming cache activities were unblocked due
									to heap use going under the critical threshold. </entry>
							</row>
							<row>
								<entry>
									<codeph>tenuredHeapUsed</codeph>
								</entry>
								<entry>Percentage of tenured heap currently in use. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			<section>
				<title>JVM Java Runtime (VMStats)</title>
				<p>Show the JVMâ€™s Java usage and can be used to detect possible problems with memory
					consumption. These statistics are recorded from java.lang.Runtime under VMStats.
					The primary statistics are: </p>
					<table id="table_2F4FB846ECBA4A289D7865FBFC73DE97">
						<tgroup cols="2">
							<colspec colname="1" colnum="1" colwidth="*"/>
							<colspec colname="2" colnum="2" colwidth="*"/>
							<thead>
								<row>
									<entry>Statistic </entry>
									<entry>Description </entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>
										<codeph>cpus</codeph>
									</entry>
									<entry>Number of CPUs available to the member on its machine.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>daemonThreads</codeph>
									</entry>
									<entry>Current number of live daemon threads in this JVM.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>fdLimit</codeph>
									</entry>
									<entry>Maximum number of file descriptors. </entry>
								</row>
								<row>
									<entry>
										<codeph>fdsOpen</codeph>
									</entry>
									<entry>Current number of open file descriptors. </entry>
								</row>
								<row>
									<entry>
										<codeph>freeMemory</codeph>
									</entry>
									<entry>An approximation for the total amount of memory, measured
										in bytes, currently available for future allocated objects.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>loadedClasses</codeph>
									</entry>
									<entry>Total number of classes loaded since the JVM started.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>maxMemory</codeph>
									</entry>
									<entry>The maximum amount of memory, measured in bytes, that the
										JVM will attempt to use. </entry>
								</row>
								<row>
									<entry>
										<codeph>peakThreads</codeph>
									</entry>
									<entry>High water mark of live threads in this JVM. </entry>
								</row>
								<row>
									<entry>
										<codeph>pendingFinalization</codeph>
									</entry>
									<entry>Number of objects that are pending finalization in the
										JVM. </entry>
								</row>
								<row>
									<entry>
										<codeph>processCpuTime</codeph>
									</entry>
									<entry>CPU time, measured in nanoseconds, used by the process.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>threads</codeph>
									</entry>
									<entry>Current number of live threads (both daemon and
										non-daemon) in this JVM. </entry>
								</row>
								<row>
									<entry>
										<codeph>threadStarts</codeph>
									</entry>
									<entry>Total number of times a thread has been started since
										this JVM started. </entry>
								</row>
								<row>
									<entry>
										<codeph>totalMemory</codeph>
									</entry>
									<entry>The total amount of memory, measure in bytes, currently
										available for current and future objects. </entry>
								</row>
								<row>
									<entry>
										<codeph>unloadedClasses</codeph>
									</entry>
									<entry>Total number of classes unloaded since the JVM started.
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
			</section>
			<section>
				<title>JVM Garbage Collection (VMGCStats)</title>
				<p>These statistics show how much time used by different JVM garbage collection. The primary
					statistics are: </p>
					<table id="table_2FF1BC6828D4481C8B54B7C8A73D3777">
						<tgroup cols="2">
							<colspec colname="1" colnum="1" colwidth="*"/>
							<colspec colname="2" colnum="2" colwidth="*"/>
							<thead>
								<row>
									<entry>Statistic </entry>
									<entry>Description </entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>
										<codeph>collections</codeph>
									</entry>
									<entry>Total number of collections this garbage collector has
										done. </entry>
								</row>
								<row>
									<entry>
										<codeph>collectionTime</codeph>
									</entry>
									<entry>Approximate elapsed time spent doing collections by this
										garbage collector. </entry>
								</row>
							</tbody>
						</tgroup>
					</table>
			</section>
			<section>
				<title>JVM Garbage Collector Memory Pools (VMMemoryPoolStats)</title>
				<p>These statistics describe memory usage in different garbage collector memory
					pools. The primary statistics are: </p>
					<table id="table_0C8FD581DF054DBC97328E6FA89B7FDD">
						<tgroup cols="2">
							<colspec colname="1" colnum="1" colwidth="*"/>
							<colspec colname="2" colnum="2" colwidth="*"/>
							<thead>
								<row>
									<entry>Statistic </entry>
									<entry>Description </entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>
										<codeph>collectionUsageExceeded</codeph>
									</entry>
									<entry>Total number of times the garbage collector detected that
										memory usage in this pool exceeded the
										collectionUsageThreshold. </entry>
								</row>
								<row>
									<entry>
										<codeph>collectionUsageThreshold</codeph>
									</entry>
									<entry>The collection usage threshold, measured in bytes, for
										this pool. </entry>
								</row>
								<row>
									<entry>
										<codeph>collectionUsedMemory</codeph>
									</entry>
									<entry>The estimated amount of used memory, measured in bytes,
										after that last garbage collection of this pool. </entry>
								</row>
								<row>
									<entry>
										<codeph>currentCommittedMemory</codeph>
									</entry>
									<entry>The amount of committed memory, measured in bytes, for
										this pool. </entry>
								</row>
								<row>
									<entry>
										<codeph>currentInitMemory</codeph>
									</entry>
									<entry>Initial memory the JVM requested from the operating
										system for this pool. </entry>
								</row>
								<row>
									<entry>
										<codeph>currentMaxMemory</codeph>
									</entry>
									<entry>The maximum amount of memory, measured in bytes, this
										pool can have. </entry>
								</row>
								<row>
									<entry>
										<codeph>currentUsedMemory</codeph>
									</entry>
									<entry>The estimated amount of used memory, measured in bytes,
										currently in use for this pool. </entry>
								</row>
								<row>
									<entry>
										<codeph>usageExceeded</codeph>
									</entry>
									<entry>Total number of times that memory usage in this pool
										exceeded the usageThreshold. </entry>
								</row>
								<row>
									<entry>
										<codeph>usageThreshold</codeph>
									</entry>
									<entry>The usage threshold, measured in bytes, for this pool.
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
			</section>
			<section>
				<title>JVM Heap Memory Usage (VMMemoryUsageStats)</title>
				<p>Show details on how the Java heap memory is being used. The primary statistics are: </p>
					<table id="table_64B16AE6136247D3BD64FC4333E38350">
						<tgroup cols="2">
							<colspec colname="1" colnum="1" colwidth="*"/>
							<colspec colname="2" colnum="2" colwidth="*"/>
							<thead>
								<row>
									<entry>Statistic </entry>
									<entry>Description </entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>
										<codeph>committedMemory</codeph>
									</entry>
									<entry>The amount of committed memory, measured in bytes, for
										this area. </entry>
								</row>
								<row>
									<entry>
										<codeph>initMemory</codeph>
									</entry>
									<entry>Initial memory the JVM requested from the operating
										system for this area. </entry>
								</row>
								<row>
									<entry>
										<codeph>maxMemory</codeph>
									</entry>
									<entry>The maximum amount of memory, measured in bytes, this
										area can have. </entry>
								</row>
								<row>
									<entry>
										<codeph>usedMemory</codeph>
									</entry>
									<entry>The amount of used memory, measured in bytes, for this
										area. </entry>
								</row>
							</tbody>
						</tgroup>
					</table>
			</section>
		</body>
	</topic>
	<topic id="section_C48B654F973E4B44AD825D459C23A6CD">
		<title>Locator (LocatorStatistics)</title>
		<body>
			<p>These statistics are on the <keyword keyref="product_name"/> locator. The primary
				statistics are: </p>
				<table id="table_B0203C75DA4B4187A1A0EEA10F9D3360">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>ENDPOINTS_KNOWN</codeph>
								</entry>
								<entry>Number of servers this locator knows about. </entry>
							</row>
							<row>
								<entry>
									<codeph>KNOWN_LOCATORS</codeph>
								</entry>
								<entry>Number of locators known to this locator. </entry>
							</row>
							<row>
								<entry>
									<codeph>REQUEST_TIME</codeph>
								</entry>
								<entry>Time, measured in nanoseconds, spent processing server
									location requests. </entry>
							</row>
							<row>
								<entry>
									<codeph>REQUESTS_IN_PROGRESS</codeph>
								</entry>
								<entry>The number of location requests currently being processed by
									the thread pool. </entry>
							</row>
							<row>
								<entry>
									<codeph>REQUESTS_TO_LOCATOR</codeph>
								</entry>
								<entry>Number of requests this locator has received from clients.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>RESPONSE_TIME</codeph>
								</entry>
								<entry>Time, measured in nanoseconds, spent sending location
									responses to clients. </entry>
							</row>
							<row>
								<entry>
									<codeph>RESPONSES_FROM_LOCATOR</codeph>
								</entry>
								<entry>Number of responses this locator has sent to clients.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>SERVER_LOAD_UPDATES</codeph>
								</entry>
								<entry>Total number of times a server load update has been received.
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="topic_ohc_tjk_w5">
		<title>Off-Heap (OffHeapMemoryStats)</title>
		<body>
			<p>These statistics quantify the use of off-heap memory. The primary statistics are:</p>
			<table id="table_m3w_2kk_w5">
				<tgroup cols="2">
					<colspec colname="1" colnum="1" colwidth="*"/>
					<colspec colname="2" colnum="2" colwidth="*"/>
					<thead>
						<row>
							<entry>Statistic </entry>
							<entry>Description </entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>
								<codeph>compactions</codeph>
							</entry>
							<entry> The total number of times the off-heap memory manager has invoked the defragmentation
								algorithm on the off-heap memory space.</entry>
						</row>
						<row>
							<entry>
								<codeph>defragmentationTime</codeph>
							</entry>
							<entry>The total number of nanoseconds spent running the defragmentation algorithm on
								off-heap memory space fragments.</entry>
						</row>
						<row>
							<entry>
								<codeph>fragmentation</codeph>
							</entry>
							<entry>This statistic gives an indication of the level of external fragmentation in the
								off-heap memory space by providing a ratio of the current number of
								fragments of free space to the largest number of fragments that
								could be formed from that free space. It is expressed as a
								percentage; the higher this value, the more fragmented the free
								space currently is. This statistic is 0 if the memory manager has
								never run its defragmentation algorithm on the off-heap space, and
								it is recalculated after each defragmentation. </entry>
						</row>
						<row>
							<entry>
								<codeph>fragments</codeph>
							</entry>
							<entry>The current number of fragments of free off-heap memory. This statistic is 0 if no
								defragmentation has ever been done, and it is updated after each
								defragmentation.</entry>
						</row>
						<row>
							<entry><codeph>freeMemory</codeph></entry>
							<entry>The number of bytes of off-heap memory that are not currently allocated.</entry>
						</row>
						<row>
							<entry><codeph>largestFragment</codeph></entry>
							<entry>The number of bytes in the largest fragment of memory found by the last run of the
								defragmentation algorithm. This statistic is updated after each
								defragmentation.</entry>
						</row>
						<row>
							<entry><codeph>maxMemory</codeph></entry>
							<entry>The number of bytes of off-heap memory initially declared.</entry>
						</row>
						<row>
							<entry><codeph>objects</codeph></entry>
							<entry>The number of objects currently stored in off-heap
								memory.</entry>
						</row>
						<row>
							<entry><codeph>reads</codeph></entry>
							<entry>The total number of reads of objects that are stored in off-heap memory.</entry>
						</row>
						<row>
							<entry><codeph>usedMemory</codeph></entry>
							<entry>The number of bytes of off-heap memory currently used for region
								values.</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</body>
	</topic>
	<topic id="section_923B28F01BC3416786D3AFBD87F22A5E">
		<title>Operating System Statistics - Linux</title>
		<body>
			<section>
				<title>Linux Process Performance (LinuxProcessStats)</title>
				<p>Operating system statistics on the memberâ€™s process. These can be used to
					determine the memberâ€™s CPU, memory, and disk usage. Operating system statistics
					are not available in pure Java mode, where <keyword keyref="product_name"/> runs
					without the use of the <keyword keyref="product_name"/> native library. These
					are the equivalent of <codeph>SolarisProcessStats</codeph> when we're running on
					Linux. The primary statistics are: </p>
					<table id="table_F9740BD6AD8648548E1978EAD4FA123A">
						<tgroup cols="2">
							<colspec colname="1" colnum="1" colwidth="*"/>
							<colspec colname="2" colnum="2" colwidth="*"/>
							<thead>
								<row>
									<entry>Statistic </entry>
									<entry>Description </entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>
										<codeph>imageSize</codeph>
									</entry>
									<entry>Size, in megabytes, of the process's image. </entry>
								</row>
								<row>
									<entry>
										<codeph>rssSize</codeph>
									</entry>
									<entry>Size, in megabytes, of the process's resident size.
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
			</section>
			<section>
				<title>Linux Operating System (LinuxSystemStats)</title>
				<p> Operating system statistics on the memberâ€™s machine. These can be used to
					determine total cpu, memory, and disk usage on the machine. Operating system
					statistics are not available in pure Java mode. These are the equivalent of
					SolarisSystemStats when running on Linux. The primary statistics are: </p>
					<table id="table_8F976577F9454C79BAB88520ABBCA0C1">
						<tgroup cols="2">
							<colspec colname="1" colnum="1" colwidth="*"/>
							<colspec colname="2" colnum="2" colwidth="*"/>
							<thead>
								<row>
									<entry>Statistic </entry>
									<entry>Description </entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>
										<codeph>allocatedSwap</codeph>
									</entry>
									<entry>Number of megabytes of swap space that have actually been
										written to. Swap space must be reserved before it can be
										allocated. </entry>
								</row>
								<row>
									<entry>
										<codeph>bufferMemory</codeph>
									</entry>
									<entry>Number of megabytes of memory allocated to buffers.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>contextSwitches</codeph>
									</entry>
									<entry>Total number of context switches from one thread to
										another on the computer. Thread switches can occur either
										inside of a single process or across processes. A thread
										switch may be caused either by one thread asking another for
										information, or by a thread being preempted by another,
										higher priority thread becoming ready to run. </entry>
								</row>
								<row>
									<entry>
										<codeph>cpuActive</codeph>
									</entry>
									<entry>Percentage of the total available time that has been used
										in a non-idle state. </entry>
								</row>
								<row>
									<entry>
										<codeph>cpuIdle</codeph>
									</entry>
									<entry>Percentage of the total available time that has been
										spent sleeping. </entry>
								</row>
								<row>
									<entry>
										<codeph>cpuNice</codeph>
									</entry>
									<entry>Percentage of the total available time that has been used
										to execute user code in processes with low priority.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>cpus</codeph>
									</entry>
									<entry>Number of online CPUs (items) on the local machine.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>cpuSystem</codeph>
									</entry>
									<entry>Percentage of the total available time that has been used
										to execute system (that is, kernel) code. </entry>
								</row>
								<row>
									<entry>
										<codeph>cpuUser</codeph>
									</entry>
									<entry>Percentage of the total available time that has been used
										to execute user code. </entry>
								</row>
								<row>
									<entry>
										<codeph>freeMemory</codeph>
									</entry>
									<entry>Number of megabytes of unused memory on the machine.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>loadAverage1</codeph>
									</entry>
									<entry>Average number of threads in the run queue or waiting for
										disk I/O over the last minute. </entry>
								</row>
								<row>
									<entry>
										<codeph>loadAverage15</codeph>
									</entry>
									<entry>Average number of threads in the run queue or waiting for
										disk I/O over the last fifteen minutes. </entry>
								</row>
								<row>
									<entry>
										<codeph>loadAverage5</codeph>
									</entry>
									<entry>Average number of threads in the run queue or waiting for
										disk I/O over the last five minutes. </entry>
								</row>
								<row>
									<entry>
										<codeph>loopbackBytes</codeph>
									</entry>
									<entry>Number of network bytes sent (or received) on the
										loopback interface. </entry>
								</row>
								<row>
									<entry>
										<codeph>loopbackPackets</codeph>
									</entry>
									<entry>Number of network packets sent (or received) on the
										loopback interface. </entry>
								</row>
								<row>
									<entry>
										<codeph>pagesPagedIn</codeph>
									</entry>
									<entry>Total number of pages that have been brought into memory
										from disk by the operating system's memory manager. </entry>
								</row>
								<row>
									<entry>
										<codeph>pagesPagedOut</codeph>
									</entry>
									<entry>Total number of pages that have been flushed from memory
										to disk by the operating system's memory manager. </entry>
								</row>
								<row>
									<entry>
										<codeph>pagesSwappedIn</codeph>
									</entry>
									<entry>Total number of swap pages that have been read in from
										disk by the operating system's memory manager. </entry>
								</row>
								<row>
									<entry>
										<codeph>pagesSwappedOut</codeph>
									</entry>
									<entry>Total number of swap pages that have been written out to
										disk by the operating system's memory manager. </entry>
								</row>
								<row>
									<entry>
										<codeph>physicalMemory</codeph>
									</entry>
									<entry>Actual amount of total physical memory on the machine.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>processCreates</codeph>
									</entry>
									<entry>The total number of times a process (operation) has been
										created. </entry>
								</row>
								<row>
									<entry>
										<codeph>processes</codeph>
									</entry>
									<entry>Number of processes in the computer at the time of data
										collection. Notice that this is an instantaneous count, not
										an average over the time interval. Each process represents
										the running of a program. </entry>
								</row>
								<row>
									<entry>
										<codeph>recvBytes</codeph>
									</entry>
									<entry>Total number of network bytes received (excluding
										loopback). </entry>
								</row>
								<row>
									<entry>
										<codeph>recvDrops</codeph>
									</entry>
									<entry>Total number network receives (packets) dropped. </entry>
								</row>
								<row>
									<entry>
										<codeph>recvErrors</codeph>
									</entry>
									<entry>Total number of network receive errors. </entry>
								</row>
								<row>
									<entry>
										<codeph>recvPackets</codeph>
									</entry>
									<entry>Total number of network packets received (excluding
										loopback). </entry>
								</row>
								<row>
									<entry>
										<codeph>sharedMemory</codeph>
									</entry>
									<entry>Number of megabytes of shared memory on the machine.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>unallocatedSwap</codeph>
									</entry>
									<entry>Number of megabytes of swap space that have not been
										allocated. </entry>
								</row>
								<row>
									<entry>
										<codeph>xmitBytes</codeph>
									</entry>
									<entry>Total number of network bytes transmitted (excluding
										loopback). </entry>
								</row>
								<row>
									<entry>
										<codeph>xmitCollisions</codeph>
									</entry>
									<entry>Total number of network transmit collisions. </entry>
								</row>
								<row>
									<entry>
										<codeph>xmitDrops</codeph>
									</entry>
									<entry>Total number of network transmits (packets) dropped.
									</entry>
								</row>
								<row>
									<entry>
										<codeph>xmitErrors</codeph>
									</entry>
									<entry>Total number of network transmit errors. </entry>
								</row>
								<row>
									<entry>
										<codeph>xmitPackets</codeph>
									</entry>
									<entry>Total number of network packets transmitted (excluding
										loopback. </entry>
								</row>
							</tbody>
						</tgroup>
					</table>
			</section>
		</body>
	</topic>
	<topic id="section_35AC170770C944C3A336D9AEC2D2F7C5">
		<title>Partitioned Regions
			(PartitionedRegion&lt;partitioned_region_name&gt;Statistics)</title>
		<body>
			<p>
				<b>Partitioned Region Statistics on Region Operations</b>
			</p>
			<p>These statistics track the standard region operations executed in the member.
				Operations can originate locally or in a request from a remote member.</p>
			<note>
				<p>Unsuccessful operations are not counted in these statistics. 
				</p>
			</note>
			<p>The
				primary statistics are: </p>
				<table id="table_6085B0B4FBEB4DE99BB6B47E9753FAA5">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>containsKeyCompleted</codeph>
								</entry>
								<entry>Number of successful containsKey operations in this member.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeyOpsRetried</codeph>
								</entry>
								<entry>Number of containsKey or containsValueForKey operations
									retried due to failures. This stat counts each retried operation
									only once, even if it requires multiple retries. </entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeyRetries</codeph>
								</entry>
								<entry>Total number of times containsKey or containsValueForKey
									operations were retried. If multiple retries are required on a
									single operation, this stat counts them all. </entry>
							</row>
							<row>
								<entry>
									<codeph>containsKeyTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, the member spent doing
									containsKey operations in this member. </entry>
							</row>
							<row>
								<entry>
									<codeph>containsValueForKeyCompleted</codeph>
								</entry>
								<entry>Number of successful containsValueForKey operations in this
									member. </entry>
							</row>
							<row>
								<entry>
									<codeph>containsValueForKeyTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, the member spent doing
									containsValueForKey operations in this member. </entry>
							</row>
							<row>
								<entry>
									<codeph>createOpsRetried</codeph>
								</entry>
								<entry>Number of create operations retried due to failures. This
									stat counts each retried operation only once, even if it
									requires multiple retries. </entry>
							</row>
							<row>
								<entry>
									<codeph>createRetries</codeph>
								</entry>
								<entry>Total number of times create operations were retried. If
									multiple retries are required on a single operation, this stat
									counts them all. </entry>
							</row>
							<row>
								<entry>
									<codeph>createsCompleted</codeph>
								</entry>
								<entry>Number of successful create operations in this member.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>createTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, the member spent doing create
									operations in this member. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyOpsRetried</codeph>
								</entry>
								<entry>Number of destroy operations retried due to failures. This
									stat counts each retried operation only once, even if it
									requires multiple retries. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroyRetries</codeph>
								</entry>
								<entry>Total number of times destroy operations were retried. If
									multiple retries are required on a single operation, this stat
									counts them all. </entry>
							</row>
							<row>
								<entry>
									<codeph>destroysCompleted</codeph>
								</entry>
								<entry>Number of successful destroy operations in this member.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>destroyTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, the member spent doing destroy
									operations in this member. </entry>
							</row>
							<row>
								<entry>
									<codeph>getEntriesCompleted</codeph>
								</entry>
								<entry>Number of get entry operations completed. </entry>
							</row>
							<row>
								<entry>
									<codeph>getEntriesTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent performing get entry
									operations. </entry>
							</row>
							<row>
								<entry>
									<codeph>getOpsRetried</codeph>
								</entry>
								<entry>Number of get operations retried due to failures. This stat
									counts each retried operation only once, even if it requires
									multiple retries. </entry>
							</row>
							<row>
								<entry>
									<codeph>getRetries</codeph>
								</entry>
								<entry>Total number of times get operations were retried. If
									multiple retries are required on a single operation, this stat
									counts them all. </entry>
							</row>
							<row>
								<entry>
									<codeph>getsCompleted</codeph>
								</entry>
								<entry>Number of successful get operations in this member. </entry>
							</row>
							<row>
								<entry>
									<codeph>getTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, the member spent doing get
									operations in this member. </entry>
							</row>
							<row>
								<entry>
									<codeph>invalidateOpsRetried</codeph>
								</entry>
								<entry>Number of invalidate operations retried due to failures. This
									stat counts each retried operation only once, even if it
									requires multiple retries. </entry>
							</row>
							<row>
								<entry>
									<codeph>invalidateRetries</codeph>
								</entry>
								<entry>Total number of times invalidate operations were retried. If
									multiple retries are required on a single operation, this stat
									counts them all. </entry>
							</row>
							<row>
								<entry>
									<codeph>invalidatesCompleted</codeph>
								</entry>
								<entry>Number of successful invalidate operations in this member.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>invalidateTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, the member spent doing invalidate
									operations in this member. </entry>
							</row>
							<row>
								<entry>
									<codeph>putOpsRetried</codeph>
								</entry>
								<entry>Number of put operations retried due to failures. This stat
									counts each retried operation only once, even if it requires
									multiple retries. </entry>
							</row>
							<row>
								<entry>
									<codeph>putRetries</codeph>
								</entry>
								<entry>Total number of times put operations were retried. If
									multiple retries are required on a single operation, this stat
									counts them all. </entry>
							</row>
							<row>
								<entry>
									<codeph>putsCompleted</codeph>
								</entry>
								<entry>Number of successful put operations in this member. </entry>
							</row>
							<row>
								<entry>
									<codeph>putTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, the member spent doing put
									operations in this member. </entry>
							</row>
							<row>
								<entry>
									<codeph>replyWaitMaxTime</codeph>
								</entry>
								<entry>Longest amount of time, in milliseconds, taken to write a
									message and receive a reply before a forced disconnect occurs.
									This stat is always active regardless of the setting of the
									enable-time-statistics gemfire.properties setting. </entry>
							</row>
							<row>
								<entry>
									<codeph>sentMessageMaxTime</codeph>
								</entry>
								<entry>Longest amount of time, in milliseconds, taken to write a
									message to the network before a forced disconnect occurs. This
									stat is always active regardless of the setting of the
									enable-time-statistics gemfire.properties setting. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			<section>
				<title>Partitioned Region Statistics on Partition Messages</title>
			</section>
				<note>
					<p>Unsuccessful operations and local operationsâ€”those that originated in this
					memberâ€”are not counted in these statistics. 
					</p>
				</note>
			<p>The primary statistics are:</p> 
				<table id="table_57D74E101F364700B557F0D55C79A002">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>partitionMessagesProcessed</codeph>
								</entry>
								<entry>Number of region operations executed in this member at the
									request of other data stores for the region. </entry>
							</row>
							<row>
								<entry>
									<codeph>partitionMessagesProcessingTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, the member spent executing region
									operations in this member at the request of remote members.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>partitionMessagesReceived</codeph>
								</entry>
								<entry>Number of remote requests this member received for any region
									operation in this member. </entry>
							</row>
							<row>
								<entry>
									<codeph>partitionMessagesSent</codeph>
								</entry>
								<entry>Number of requests this member sent for any region operation
									on a remote member. </entry>
							</row>
							<row>
								<entry>
									<codeph>prMetaDataSentCount</codeph>
								</entry>
								<entry>Number of times meta data refresh sent on client's request.
									Used with pr-single-hop functionality. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			<section>
				<title>Partitioned Region Statistics on Data Entry Caching</title>
			</section>
			<p>These statistics track the pattern of data entry distribution among the buckets in
				this member. The primary statistics are: </p>
				<table id="table_3E9DA9AF1B3D4F63ACD60F86A19CB7A0">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>avgBucketSize</codeph>
								</entry>
								<entry>Average number of entries for each of the primary buckets in
									this member. </entry>
							</row>
							<row>
								<entry>
									<codeph>bucketCount</codeph>
								</entry>
								<entry>Total number of buckets in this member. </entry>
							</row>
							<row>
								<entry>
									<codeph>bucketCreationsCompleted</codeph>
								</entry>
								<entry>Number of logical bucket creation operations requests
									completed after which the bucket was created. </entry>
							</row>
							<row>
								<entry>
									<codeph>bucketCreationsDiscoveryCompleted</codeph>
								</entry>
								<entry>Number of bucket creation operations requests completed after
									which it was discovered that the bucket was created by another
									member. </entry>
							</row>
							<row>
								<entry>
									<codeph>bucketCreationsDiscoveryTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent waiting for bucket creation
									requests to complete after which it was discovered that the
									bucket was created by another member. </entry>
							</row>
							<row>
								<entry>
									<codeph>bucketCreationsTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent waiting for bucket creation
									requests to complete after which the bucket was created.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>dataStoreBytesInUse</codeph>
								</entry>
								<entry>The number of bytes stored in this cache for the named
									partitioned region. </entry>
							</row>
							<row>
								<entry>
									<codeph>dataStoreEntryCount</codeph>
								</entry>
								<entry>Total number of entries in all the buckets in this member.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>maxBucketSize</codeph>
								</entry>
								<entry>Largest number of entries in the primary buckets in this
									member. </entry>
							</row>
							<row>
								<entry>
									<codeph>minBucketSize</codeph>
								</entry>
								<entry>Smallest number of entries in the primary buckets in this
									member. </entry>
							</row>
							<row>
								<entry>
									<codeph>totalBucketSize</codeph>
								</entry>
								<entry>Total number of entries in the primary buckets. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			<section>
				<title>Partitioned Region Statistics on Redundancy</title>
			</section>
			<p>These statistics track status on partitioned region data copies. The primary
				statistics are: </p>
				<table id="table_E9EA768BBF464507BC61C2DFD04A70D8">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>actualRedundantCopies</codeph>
								</entry>
								<entry>The least current redundant number of copies for any data in
									this partitioned region (there may be some data that is fully
									redundant, but some data will have only this number of copies).
									This value may drop when a data store is lost or rise when a
									data store is added. This value may drop temporarily during
									partitioned region creation or destruction and then rise again.
										<note>
											<p>If this value remains low, then partitioned region
										data is at risk and may be lost if another data store is
										lost.
											</p>
										</note>
									A healthy partitioned region will maintain a
									value equal to configuredRedundantCopies. The user should add
									one or more data stores if the value remains low.
									High-availability may result in a brief fluctuation, but it
									should return to a value equal to configuredRedundantCopies if
									there are sufficient data stores present (that is, killing one
									data store will cause its data to fail over to another data
									store). </entry>
							</row>
							<row>
								<entry>
									<codeph>configuredRedundantCopies</codeph>
								</entry>
								<entry>This is equivalent to the
									PartitionAttributes.getRedundantCopies configuration that was
									used to create this partitioned region. This value remains
									unchanged for a given partitioned region. </entry>
							</row>
							<row>
								<entry>
									<codeph>lowRedundancyBucketCount</codeph>
								</entry>
								<entry>The number of buckets in this partitioned region that
									currently have fewer copies than the configuredRedundantCopies.
									This value may rise above zero when a data store is lost and
									return to zero when one or more data stores are added. This
									value may rise temporarily during partitioned region creation or
									destruction and then return to zero. 
									<note>
										<p>If this value remains
										above zero, then partitioned region data is at risk and may
										be lost if another data store is lost. 
										</p>
									</note>
									This value
									will be above zero whenever actualRedundantCopies is less than
									configuredRedundantCopies. A healthy partitioned region will
									maintain a value of zero. The user should add one or more
									datstores if this value remains above zero. High-availability
									may result in a brief fluctuation, but it should return to zero
									if there are sufficient data stores present (that is, killing
									one data store will cause its data to fail over to another data
									store). </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_374FBD92A3B74F6FA08AA23047929B4F">
		<title>Region Entry Eviction â€“ Count-Based (LRUStatistics) </title>
		<body>
			<p>The entry-count least recently used (LRU) eviction mechanism records these
				LRUStatistics. The primary statistics are: </p>
				<table id="table_9FEAF31501D74A35A969146296CCB9E2">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>entriesAllowed</codeph>
								</entry>
								<entry>Number of entries allowed in this region. </entry>
							</row>
							<row>
								<entry>
									<codeph>entryCount</codeph>
								</entry>
								<entry>Number of entries in this region. </entry>
							</row>
							<row>
								<entry>
									<codeph>lruDestroys</codeph>
								</entry>
								<entry>Number of entry destroys triggered by an LRU. </entry>
							</row>
							<row>
								<entry>
									<codeph>lruDestroysLimit</codeph>
								</entry>
								<entry>Maximum number of entry destroys triggered by an LRU before a
									scan occurs. </entry>
							</row>
							<row>
								<entry>
									<codeph>lruEvaluations</codeph>
								</entry>
								<entry>Number of entries evaluated during LRU operations </entry>
							</row>
							<row>
								<entry>
									<codeph>lruEvictions</codeph>
								</entry>
								<entry>Number of total entry evictions triggered by an LRU. </entry>
							</row>
							<row>
								<entry>
									<codeph>lruGreedyReturns</codeph>
								</entry>
								<entry>Number of non-LRU entries evicted during LRU operations.
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_3D2AA2BCE5B6485699A7B6ADD1C49FF7">
		<title>Region Entry Eviction â€“ Size-based (LRUStatistics)</title>
		<body>
			<p>The least recently used (LRU) mechanism that keeps the size of a region under a given
				set point records these MemLRUStatistics. The primary statistics are: </p>
				<table id="table_67734052E400444BB423B069705BABF1">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>byteCount</codeph>
								</entry>
								<entry>Number of bytes in region </entry>
							</row>
							<row>
								<entry>
									<codeph>bytesAllowed</codeph>
								</entry>
								<entry>Total number of bytes allowed in this region. </entry>
							</row>
							<row>
								<entry>
									<codeph>lruDestroys</codeph>
								</entry>
								<entry>Number of entry destroys triggered by LRU. </entry>
							</row>
							<row>
								<entry>
									<codeph>lruDestroysLimit</codeph>
								</entry>
								<entry>Maximum number of entry destroys triggered by LRU before a
									scan occurs. </entry>
							</row>
							<row>
								<entry>
									<codeph>lruEvaluations</codeph>
								</entry>
								<entry>Number of entries evaluated during LRU operations. </entry>
							</row>
							<row>
								<entry>
									<codeph>lruEvictions</codeph>
								</entry>
								<entry>Total number of entry evictions triggered by LRU. </entry>
							</row>
							<row>
								<entry>
									<codeph>lruGreedyReturns</codeph>
								</entry>
								<entry>Number of non-LRU entries evicted during LRU operations.
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_5362EF9AECBC48D69475697109ABEDFA">
		<title>Server Notifications for All Clients (CacheClientNotifierStatistics)</title>
		<body>
			<p>Statistics regarding cache server operations sent to all clients. </p>
				<table id="table_9B6763962FA34F049342B5749452987A">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>clientHealthMonitorRegister</codeph>
								</entry>
								<entry>Number of clients that register. </entry>
							</row>
							<row>
								<entry>
									<codeph>clientHealthMonitorUnRegister</codeph>
								</entry>
								<entry>Number of clients that unregister. </entry>
							</row>
							<row>
								<entry>
									<codeph>clientRegistrations</codeph>
								</entry>
								<entry>Number of clients (operations) that have registered for
									updates. </entry>
							</row>
							<row>
								<entry>
									<codeph>clientRegistrationTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent doing client registrations.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>durableReconnectionCount</codeph>
								</entry>
								<entry>Number of times the same durable client connects to the
									server. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventProcessingTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent by the cache client
									notifier processing events. </entry>
							</row>
							<row>
								<entry>
									<codeph>events</codeph>
								</entry>
								<entry>Number of events (operations) processed by the cache client
									notifier. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventsEnqueuedWhileClientAwayCount</codeph>
								</entry>
								<entry>Number of events enqueued for a durable client. </entry>
							</row>
							<row>
								<entry>
									<codeph>queueDroppedCount</codeph>
								</entry>
								<entry>Number of times the client subscription queue for a
									particular durable client is dropped. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_E03865F509E543D9B8F9462B3DA6255E">
		<title>Server Notifications for Single Client (CacheClientProxyStatistics)</title>
		<body>
			<p>Statistics regarding cache server operations and cache server client notifications
				sent to a single client. </p>
				<table id="table_B5D1D75213484735925B68670C756E87">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>messageProcessingTime</codeph>
								</entry>
								<entry>Total time, in nanoseconds, spent sending messages to
									clients. </entry>
							</row>
							<row>
								<entry>
									<codeph>messageQueueSize</codeph>
								</entry>
								<entry>Size of the operations subscription queue. </entry>
							</row>
							<row>
								<entry>
									<codeph>messagesFailedQueued</codeph>
								</entry>
								<entry>Number of client operations messages attempted but failed to
									be added to the subscription queue. </entry>
							</row>
							<row>
								<entry>
									<codeph>messagesNotQueuedConflated</codeph>
								</entry>
								<entry>Number of client operations messages received but not added
									to the subscription queue because the queue already contains a
									message with the message's key. </entry>
							</row>
							<row>
								<entry>
									<codeph>messagesNotQueuedNotInterested</codeph>
								</entry>
								<entry>Number of client operations messages received but not added
									to the subscription queue because the client represented by the
									receiving proxy was not interested in the message's key.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>messagesNotQueuedOriginator</codeph>
								</entry>
								<entry>Number of client operations messages received but not added
									to the subscription queue, because the receiving proxy
									represents the client originating the message. </entry>
							</row>
							<row>
								<entry>
									<codeph>messagesProcessed</codeph>
								</entry>
								<entry>Number of client operations messages removed from the
									subscription queue and sent. </entry>
							</row>
							<row>
								<entry>
									<codeph>messagesQueued</codeph>
								</entry>
								<entry>Number of client operations messages added to the
									subscription queue. </entry>
							</row>
							<row>
								<entry>
									<codeph>messagesReceived</codeph>
								</entry>
								<entry>Number of client operations messages received. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_3AB1C0AA55014163A2BBF68E13D25E3A">
		<title>Server-to-Client Messaging Performance (ClientSubscriptionStats)</title>
		<body>
			<p>Collected in the server, these statistics track event messages queued on the server
				to be sent to the client. The statistics are gathered for each client subscription
				queue and are incremental for the lifetime of the queue. The event messages are
				referred to as events in these statistics. The primary statistics are: </p>
				<table id="table_D2A9D027A13247FD843E0789D1945C54">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>eventsConflated</codeph>
								</entry>
								<entry>Number of events conflated. If this is high, the server's
									dispatcher may be running slowly. This could be caused by one or
									more slow client.s causing blocking in their subscription
									queues. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventsExpired</codeph>
								</entry>
								<entry>Number of events that have expired while in the subscription
									queue. If this is high on a secondary server, it might be that
									the MessageSyncInterval on the primary is set too high, causing
									the secondary to fall behind in event cleanup. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventsQueued</codeph>
								</entry>
								<entry>Number of events placed in the subscription queue. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventsRemoved</codeph>
								</entry>
								<entry>Number of events removed from the subscription queue.
								</entry>
							</row>
							<row>
								<entry>
									<codeph>eventsRemovedByQrm</codeph>
								</entry>
								<entry>Number of events removed based on a message sent from the
									primary. Only incremented while the subscription queue is in a
									secondary server. </entry>
							</row>
							<row>
								<entry>
									<codeph>eventsTaken</codeph>
								</entry>
								<entry>Number of events taken from the subscription queue. </entry>
							</row>
							<row>
								<entry>
									<codeph>numSequenceViolated</codeph>
								</entry>
								<entry>Number of events that had sequence ID less than or equal to
									the last sequence ID. The system assumes these events are
									duplicates and does not add them to the subscription queue. A
									non-zero value may indicate message loss. </entry>
							</row>
							<row>
								<entry>
									<codeph>numVoidRemovals</codeph>
								</entry>
								<entry>Number of events which were supposed to be destroyed from the
									subscription queue through remove but were removed by some other
									operation like conflation or expiration. </entry>
							</row>
							<row>
								<entry>
									<codeph>threadIdentifiers</codeph>
								</entry>
								<entry>Number of ThreadIdentifier objects (units) in the
									subscription queue. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
	<topic id="section_55F3AF6413474317902845EE4996CC21">
		<title>Statistics Collection (StatSampler)</title>
		<body>
			<p>These statistics show how much time is spent collecting statistics. The primary
				statistics are: </p>
				<table id="table_73A13571828B4EE5871AC66F7D1B82CD">
					<tgroup cols="2">
						<colspec colname="1" colnum="1" colwidth="*"/>
						<colspec colname="2" colnum="2" colwidth="*"/>
						<thead>
							<row>
								<entry>Statistic </entry>
								<entry>Description </entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>
									<codeph>sampleCount</codeph>
								</entry>
								<entry>Total number of samples taken by this sampler. </entry>
							</row>
							<row>
								<entry>
									<codeph>sampleTime</codeph>
								</entry>
								<entry>Total amount of time spent taking samples. </entry>
							</row>
						</tbody>
					</tgroup>
				</table>
		</body>
	</topic>
</dita>
