<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="handing_exceptions_and_failures">
	<title> Exceptions and System Failures</title>
	<shortdesc>Your application needs to catch certain classes to handle all the exceptions and
		system failures thrown by <keyword keyref="product_name_long"/>. </shortdesc>
	<prolog>
		<metadata>
			<keywords>
				<keyword>gemfire exception handling</keyword>
			</keywords>
		</metadata>
	</prolog>
	<conbody>
			<ul id="ul_966782C2147C4870B1A70CDA5C2FB853">
				<li id="li_BE320362C4F84706B6F1D2722FECADA6"
						><codeph><b>GemFireCheckedException</b></codeph>. This class is the abstract
					superclass of exceptions that are thrown and declared. Wherever possible,
					GemFire exceptions are checked exceptions.
					<codeph>GemFireCheckedException</codeph> is a  <keyword keyref="product_name"/> version of
						<codeph>java.lang.Exception</codeph>. </li>
				<li id="li_08CB8D2FDE004D5EB94DC5EEA861E745"
						><codeph><b>GemFireException</b></codeph>. This class is the abstract
					superclass of unchecked exceptions that are thrown to indicate conditions for
					which the developer should not normally need to check. You can look at the
					subclasses of <codeph>GemFireException</codeph> to see all the runtime
					exceptions in the GemFire system; see the class hierarchy in the online Java API
					documentation. <codeph>GemFireException</codeph> is a  <keyword keyref="product_name"/> version of
						java.lang.<codeph>RuntimeException</codeph>. You can also look at the method
					details in the <codeph>Region</codeph> API javadocs for  <keyword keyref="product_name"/> exceptions you
					may want to catch. </li>
				<li id="li_5AA0EDD614BD4F0F91CC7FA72A9A7B4E"><codeph><b>SystemFailure</b></codeph>.
					In addition to exception management,  <keyword keyref="product_name"/> provides a class to help you manage
					catastrophic failure in your distributed system, particularly in your
					application. The Javadocs for this class provide extensive guidance for managing
					failures in your system and your application. See <codeph>SystemFailure</codeph>
					in the <codeph>com.gemstone.gemfire</codeph> package. </li>
			</ul>
		<p>To see the exceptions thrown by a specific method, refer to the method's online Java
			documentation. </p>
		<p>A  <keyword keyref="product_name"/> system member can also throw exceptions generated by third-party software such
			as JGroups or <codeph>java.lang</codeph> classes. For assistance in handling these
			exceptions, see the vendor documentation. </p>
	</conbody>
</concept>
